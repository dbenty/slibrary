aW5mbyA9IG5ldyBTcGxGaWxlSW5mbygkZmlsZSk7CiAgICAgICAgICAgICRmaWxlbmFtZXNbXSA9IGFycmF5KAogICAgICAgICAgICAgICAgJ25hbWUnID0+ICR6aXBfbmFtZSwKICAgICAgICAgICAgICAgICdmaWxlc2l6ZScgPT4gJHppcF9pbmZvLT5nZXRTaXplKCksCiAgICAgICAgICAgICAgICAnY29tcHJlc3NlZF9zaXplJyA9PiAkZmlsZS0+Z2V0Q29tcHJlc3NlZFNpemUoKSwKICAgICAgICAgICAgICAgICdmb2xkZXInID0+ICR6aXBfZm9sZGVyCiAgICAgICAgICAgICk7CiAgICAgICAgfQogICAgICAgIHJldHVybiAkZmlsZW5hbWVzOwogICAgfQogICAgcmV0dXJuIGZhbHNlOwp9CgpmdW5jdGlvbiBmbV9lbmMoJHRleHQpCnsKICAgIHJldHVybiBodG1sc3BlY2lhbGNoYXJzKCR0ZXh0LCBFTlRfUVVPVEVTLCAnVVRGLTgnKTsKfQoKZnVuY3Rpb24gZm1faXN2YWxpZF9maWxlbmFtZSgkdGV4dCkgewogICAgcmV0dXJuIChzdHJwYnJrKCR0ZXh0LCAnLz8lKjp8Ijw+JykgPT09IEZBTFNFKSA/IHRydWUgOiBmYWxzZTsKfQoKZnVuY3Rpb24gZm1fc2V0X21zZygkbXNnLCAkc3RhdHVzID0gJ29rJykKewogICAgJF9TRVNTSU9OW0ZNX1NFU1NJT05fSURdWydtZXNzYWdlJ10gPSAkbXNnOwogICAgJF9TRVNTSU9OW0ZNX1NFU1NJT05fSURdWydzdGF0dXMnXSA9ICRzdGF0dXM7Cn0KCmZ1bmN0aW9uIGZtX2lzX3V0ZjgoJHN0cmluZykKewogICAgcmV0dXJuIHByZWdfbWF0Y2goJy8vdScsICRzdHJpbmcpOwp9CgpmdW5jdGlvbiBmbV9jb252ZXJ0X3dpbigkZmlsZW5hbWUpCnsKICAgIGlmIChGTV9JU19XSU4gJiYgZnVuY3Rpb25fZXhpc3RzKCdpY29udicpKSB7CiAgICAgICAgJGZpbGVuYW1lID0gaWNvbnYoRk1fSUNPTlZfSU5QVVRfRU5DLCAnVVRGLTgvL0lHTk9SRScsICRmaWxlbmFtZSk7CiAgICB9CiAgICByZXR1cm4gJGZpbGVuYW1lOwp9CgpmdW5jdGlvbiBmbV9vYmplY3RfdG9fYXJyYXkoJG9iaikKewogICAgaWYgKCFpc19vYmplY3QoJG9iaikgJiYgIWlzX2FycmF5KCRvYmopKSB7CiAgICAgICAgcmV0dXJuICRvYmo7CiAgICB9CiAgICBpZiAoaXNfb2JqZWN0KCRvYmopKSB7CiAgICAgICAgJG9iaiA9IGdldF9vYmplY3RfdmFycygkb2JqKTsKICAgIH0KICAgIHJldHVybiBhcnJheV9tYXAoJ2ZtX29iamVjdF90b19hcnJheScsICRvYmopOwp9CgpmdW5jdGlvbiBmbV9nZXRfZmlsZV9pY29uX2NsYXNzKCRwYXRoKQp7CiAgICAKICAgICRleHQgPSBzdHJ0b2xvd2VyKHBhdGhpbmZvKCRwYXRoLCBQQVRISU5GT19FWFRFTlNJT04pKTsKICAgIHN3aXRjaCAoJGV4dCkgewogICAgICAgIGNhc2UgJ2ljbyc6CiAgICAgICAgY2FzZSAnZ2lmJzoKICAgICAgICBjYXNlICdqcGcnOgogICAgICAgIGNhc2UgJ2pwZWcnOgogICAgICAgIGNhc2UgJ2pwYyc6CiAgICAgICAgY2FzZSAnanAyJzoKICAgICAgICBjYXNlICdqcHgnOgogICAgICAgIGNhc2UgJ3hibSc6CiAgICAgICAgY2FzZSAnd2JtcCc6CiAgICAgICAgY2FzZSAncG5nJzoKICAgICAgICBjYXNlICdibXAnOgogICAgICAgIGNhc2UgJ3RpZic6CiAgICAgICAgY2FzZSAndGlmZic6CiAgICAgICAgY2FzZSAnd2VicCc6CiAgICAgICAgY2FzZSAnYXZpZic6CiAgICAgICAgY2FzZSAnc3ZnJzoKICAgICAgICAgICAgJGltZyA9ICdmYSBmYS1waWN0dXJlLW8nOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICdwYXNzd2QnOgogICAgICAgIGNhc2UgJ2Z0cHF1b3RhJzoKICAgICAgICBjYXNlICdzcWwnOgogICAgICAgIGNhc2UgJ2pzJzoKICAgICAgICBjYXNlICd0cyc6CiAgICAgICAgY2FzZSAnanN4JzoKICAgICAgICBjYXNlICd0c3gnOgogICAgICAgIGNhc2UgJ2hicyc6CiAgICAgICAgY2FzZSAnanNvbic6CiAgICAgICAgY2FzZSAnc2gnOgogICAgICAgIGNhc2UgJ2NvbmZpZyc6CiAgICAgICAgY2FzZSAndHdpZyc6CiAgICAgICAgY2FzZSAndHBsJzoKICAgICAgICBjYXNlICdtZCc6CiAgICAgICAgY2FzZSAnZ2l0aWdub3JlJzoKICAgICAgICBjYXNlICdjJzoKICAgICAgICBjYXNlICdjcHAnOgogICAgICAgIGNhc2UgJ2NzJzoKICAgICAgICBjYXNlICdweSc6CiAgICAgICAgY2FzZSAncnMnOgogICAgICAgIGNhc2UgJ21hcCc6CiAgICAgICAgY2FzZSAnbG9jayc6CiAgICAgICAgY2FzZSAnZHRkJzoKICAgICAgICAgICAgJGltZyA9ICdmYSBmYS1maWxlLWNvZGUtbyc7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJ3R4dCc6CiAgICAgICAgY2FzZSAnaW5pJzoKICAgICAgICBjYXNlICdjb25mJzoKICAgICAgICBjYXNlICdsb2cnOgogICAgICAgIGNhc2UgJ2h0YWNjZXNzJzoKICAgICAgICBjYXNlICd5YW1sJzoKICAgICAgICBjYXNlICd5bWwnOgogICAgICAgIGNhc2UgJ3RvbWwnOgogICAgICAgIGNhc2UgJ3RtcCc6CiAgICAgICAgY2FzZSAndG9wJzoKICAgICAgICBjYXNlICdib3QnOgogICAgICAgIGNhc2UgJ2RhdCc6CiAgICAgICAgY2FzZSAnYmFrJzoKICAgICAgICBjYXNlICdodHBhc3N3ZCc6CiAgICAgICAgY2FzZSAncGwnOgogICAgICAgICAgICAkaW1nID0gJ2ZhIGZhLWZpbGUtdGV4dC1vJzsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAnY3NzJzoKICAgICAgICBjYXNlICdsZXNzJzoKICAgICAgICBjYXNlICdzYXNzJzoKICAgICAgICBjYXNlICdzY3NzJzoKICAgICAgICAgICAgJGltZyA9ICdmYSBmYS1jc3MzJzsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAnYnoyJzoKICAgICAgICBjYXNlICd6aXAnOgogICAgICAgIGNhc2UgJ3Jhcic6CiAgICAgICAgY2FzZSAnZ3onOgogICAgICAgIGNhc2UgJ3Rhcic6CiAgICAgICAgY2FzZSAnN3onOgogICAgICAgIGNhc2UgJ3h6JzoKICAgICAgICAgICAgJGltZyA9ICdmYSBmYS1maWxlLWFyY2hpdmUtbyc7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJ3BocCc6CiAgICAgICAgY2FzZSAncGhwNCc6CiAgICAgICAgY2FzZSAncGhwNSc6CiAgICAgICAgY2FzZSAncGhwcyc6CiAgICAgICAgY2FzZSAncGh0bWwnOgogICAgICAgICAgICAkaW1nID0gJ2ZhIGZhLWNvZGUnOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICdodG0nOgogICAgICAgIGNhc2UgJ2h0bWwnOgogICAgICAgIGNhc2UgJ3NodG1sJzoKICAgICAgICBjYXNlICd4aHRtbCc6CiAgICAgICAgICAgICRpbWcgPSAnZmEgZmEtaHRtbDUnOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICd4bWwnOgogICAgICAgIGNhc2UgJ3hzbCc6CiAgICAgICAgICAgICRpbWcgPSAnZmEgZmEtZmlsZS1leGNlbC1vJzsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAnd2F2JzoKICAgICAgICBjYXNlICdtcDMnOgogICAgICAgIGNhc2UgJ21wMic6CiAgICAgICAgY2FzZSAnbTRhJzoKICAgICAgICBjYXNlICdhYWMnOgogICAgICAgIGNhc2UgJ29nZyc6CiAgICAgICAgY2FzZSAnb2dhJzoKICAgICAgICBjYXNlICd3bWEnOgogICAgICAgIGNhc2UgJ21rYSc6CiAgICAgICAgY2FzZSAnZmxhYyc6CiAgICAgICAgY2FzZSAnYWMzJzoKICAgICAgICBjYXNlICd0ZHMnOgogICAgICAgICAgICAkaW1nID0gJ2ZhIGZhLW11c2ljJzsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAnbTN1JzoKICAgICAgICBjYXNlICdtM3U4JzoKICAgICAgICBjYXNlICdwbHMnOgogICAgICAgIGNhc2UgJ2N1ZSc6CiAgICAgICAgY2FzZSAneHNwZic6CiAgICAgICAgICAgICRpbWcgPSAnZmEgZmEtaGVhZHBob25lcyc7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJ2F2aSc6CiAgICAgICAgY2FzZSAnbXBnJzoKICAgICAgICBjYXNlICdtcGVnJzoKICAgICAgICBjYXNlICdtcDQnOgogICAgICAgIGNhc2UgJ200dic6CiAgICAgICAgY2FzZSAnZmx2JzoKICAgICAgICBjYXNlICdmNHYnOgogICAgICAgIGNhc2UgJ29nbSc6CiAgICAgICAgY2FzZSAnb2d2JzoKICAgICAgICBjYXNlICdtb3YnOgogICAgICAgIGNhc2UgJ21rdic6CiAgICAgICAgY2FzZSAnM2dwJzoKICAgICAgICBjYXNlICdhc2YnOgogICAgICAgIGNhc2UgJ3dtdic6CiAgICAgICAgY2FzZSAnd2VibSc6CiAgICAgICAgICAgICRpbWcgPSAnZmEgZmEtZmlsZS12aWRlby1vJzsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAnZW1sJzoKICAgICAgICBjYXNlICdtc2cnOgogICAgICAgICAgICAkaW1nID0gJ2ZhIGZhLWVudmVsb3BlLW8nOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICd4bHMnOgogICAgICAgIGNhc2UgJ3hsc3gnOgogICAgICAgIGNhc2UgJ29kcyc6CiAgICAgICAgICAgICRpbWcgPSAnZmEgZmEtZmlsZS1leGNlbC1vJzsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAnY3N2JzoKICAgICAgICAgICAgJGltZyA9ICdmYSBmYS1maWxlLXRleHQtbyc7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJ2Jhayc6CiAgICAgICAgY2FzZSAnc3dwJzoKICAgICAgICAgICAgJGltZyA9ICdmYSBmYS1jbGlwYm9hcmQnOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICdkb2MnOgogICAgICAgIGNhc2UgJ2RvY3gnOgogICAgICAgIGNhc2UgJ29kdCc6CiAgICAgICAgICAgICRpbWcgPSAnZmEgZmEtZmlsZS13b3JkLW8nOwogICAgICAgICAgICBicmVhazsKICAgICAgICBjYXNlICdwcHQnOgogICAgICAgIGNhc2UgJ3BwdHgnOgogICAgICAgICAgICAkaW1nID0gJ2ZhIGZhLWZpbGUtcG93ZXJwb2ludC1vJzsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAndHRmJzoKICAgICAgICBjYXNlICd0dGMnOgogICAgICAgIGNhc2UgJ290Zic6CiAgICAgICAgY2FzZSAnd29mZic6CiAgICAgICAgY2FzZSAnd29mZjInOgogICAgICAgIGNhc2UgJ2VvdCc6CiAgICAgICAgY2FzZSAnZm9uJzoKICAgICAgICAgICAgJGltZyA9ICdmYSBmYS1mb250JzsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAncGRmJzoKICAgICAgICAgICAgJGltZyA9ICdmYSBmYS1maWxlLXBkZi1vJzsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAncHNkJzoKICAgICAgICBjYXNlICdhaSc6CiAgICAgICAgY2FzZSAnZXBzJzoKICAgICAgICBjYXNlICdmbGEnOgogICAgICAgIGNhc2UgJ3N3Zic6CiAgICAgICAgICAgICRpbWcgPSAnZmEgZmEtZmlsZS1pbWFnZS1vJzsKICAgICAgICAgICAgYnJlYWs7CiAgICAgICAgY2FzZSAnZXhlJzoKICAgICAgICBjYXNlICdtc2knOgogICAgICAgICAgICAkaW1nID0gJ2ZhIGZhLWZpbGUtbyc7CiAgICAgICAgICAgIGJyZWFrOwogICAgICAgIGNhc2UgJ2JhdCc6CiAgICAgICAgICAgICRpbWcgPSAnZmEgZmEtdGVybWluYWwnOwogICAgICAgICAgICBicmVhazsKICAgICAgICBkZWZhdWx0OgogICAgICAgICAgICAkaW1nID0gJ2ZhIGZhLWluZm8tY2lyY2xlJzsKICAgIH0KICAgIHJldHVybiAkaW1nOwp9CgpmdW5jdGlvbiBmbV9nZXRfaW1hZ2VfZXh0cygpCnsKICAgIHJldHVybiBhcnJheSgnaWNvJywgJ2dpZicsICdqcGcnLCAnanBlZycsICdqcGMnLCAnanAyJywgJ2pweCcsICd4Ym0nLCAnd2JtcCcsICdwbmcnLCAnYm1wJywgJ3RpZicsICd0aWZmJywgJ3BzZCcsICdzdmcnLCAnd2VicCcsICdhdmlmJyk7Cn0KCmZ1bmN0aW9uIGZtX2dldF92aWRlb19leHRzKCkKewogICAgcmV0dXJuIGFycmF5KCdhdmknLCAnd2VibScsICd3bXYnLCAnbXA0JywgJ200dicsICdvZ20nLCAnb2d2JywgJ21vdicsICdta3YnKTsKfQoKZnVuY3Rpb24gZm1fZ2V0X2F1ZGlvX2V4dHMoKQp7CiAgICByZXR1cm4gYXJyYXkoJ3dhdicsICdtcDMnLCAnb2dnJywgJ200YScpOwp9CgpmdW5jdGlvbiBmbV9nZXRfdGV4dF9leHRzKCkKewogICAgcmV0dXJuIGFycmF5KAogICAgICAgICd0eHQnLCAnY3NzJywgJ2luaScsICdjb25mJywgJ2xvZycsICdodGFjY2VzcycsICdwYXNzd2QnLCAnZnRwcXVvdGEnLCAnc3FsJywgJ2pzJywgJ3RzJywgJ2pzeCcsICd0c3gnLCAnbWpzJywgJ2pzb24nLCAnc2gnLCAnY29uZmlnJywKICAgICAgICAncGhwJywgJ3BocDQnLCAncGhwNScsICdwaHBzJywgJ3BodG1sJywgJ2h0bScsICdodG1sJywgJ3NodG1sJywgJ3hodG1sJywgJ3htbCcsICd4c2wnLCAnbTN1JywgJ20zdTgnLCAncGxzJywgJ2N1ZScsICdiYXNoJywgJ3Z1ZScsCiAgICAgICAgJ2VtbCcsICdtc2cnLCAnY3N2JywgJ2JhdCcsICd0d2lnJywgJ3RwbCcsICdtZCcsICdnaXRpZ25vcmUnLCAnbGVzcycsICdzYXNzJywgJ3Njc3MnLCAnYycsICdjcHAnLCAnY3MnLCAncHknLCAnZ28nLCAnenNoJywgJ3N3aWZ0JywKICAgICAgICAnbWFwJywgJ2xvY2snLCAnZHRkJywgJ3N2ZycsICdhc3AnLCAnYXNweCcsICdhc3gnLCAnYXNteCcsICdhc2h4JywgJ2pzcCcsICdqc3B4JywgJ2NnaScsICdkb2NrZXJmaWxlJywgJ3J1YnknLCAneW1sJywgJ3lhbWwnLCAndG9tbCcsCiAgICAgICAgJ3Zob3N0JywgJ3NjcHQnLCAnYXBwbGVzY3JpcHQnLCAnY3N4JywgJ2NzaHRtbCcsICdjKysnLCAnY29mZmVlJywgJ2NmbScsICdyYicsICdncmFwaHFsJywgJ211c3RhY2hlJywgJ2ppbmphJywgJ2h0dHAnLCAnaGFuZGxlYmFycycsCiAgICAgICAgJ2phdmEnLCAnZXMnLCAnZXM2JywgJ21hcmtkb3duJywgJ3dpa2knLCAndG1wJywgJ3RvcCcsICdib3QnLCAnZGF0JywgJ2JhaycsICdodHBhc3N3ZCcsICdwbCcKICAgICk7Cn0KCmZ1bmN0aW9uIGZtX2dldF90ZXh0X21pbWVzKCkKewogICAgcmV0dXJuIGFycmF5KAogICAgICAgICdhcHBsaWNhdGlvbi94bWwnLAogICAgICAgICdhcHBsaWNhdGlvbi9qYXZhc2NyaXB0JywKICAgICAgICAnYXBwbGljYXRpb24veC1qYXZhc2NyaXB0JywKICAgICAgICAnaW1hZ2Uvc3ZnK3htbCcsCiAgICAgICAgJ21lc3NhZ2UvcmZjODIyJywKICAgICAgICAnYXBwbGljYXRpb24vanNvbicsCiAgICApOwp9CgpmdW5jdGlvbiBmbV9nZXRfdGV4dF9uYW1lcygpCnsKICAgIHJldHVybiBhcnJheSgKICAgICAgICAnbGljZW5zZScsCiAgICAgICAgJ3JlYWRtZScsCiAgICAgICAgJ2F1dGhvcnMnLAogICAgICAgICdjb250cmlidXRvcnMnLAogICAgICAgICdjaGFuZ2Vsb2cnLAogICAgKTsKfQoKZnVuY3Rpb24gZm1fZ2V0X29ubGluZVZpZXdlcl9leHRzKCkKewogICAgcmV0dXJuIGFycmF5KCdkb2MnLCAnZG9jeCcsICd4bHMnLCAneGxzeCcsICdwZGYnLCAncHB0JywgJ3BwdHgnLCAnYWknLCAncHNkJywgJ2R4ZicsICd4cHMnLCAncmFyJywgJ29kdCcsICdvZHMnKTsKfQoKZnVuY3Rpb24gZm1fZ2V0X2ZpbGVfbWltZXMoJGV4dGVuc2lvbikKewogICAgJGZpbGVUeXBlc1snc3dmJ10gPSAnYXBwbGljYXRpb24veC1zaG9ja3dhdmUtZmxhc2gnOwogICAgJGZpbGVUeXBlc1sncGRmJ10gPSAnYXBwbGljYXRpb24vcGRmJzsKICAgICRmaWxlVHlwZXNbJ2V4ZSddID0gJ2FwcGxpY2F0aW9uL29jdGV0LXN0cmVhbSc7CiAgICAkZmlsZVR5cGVzWyd6aXAnXSA9ICdhcHBsaWNhdGlvbi96aXAnOwogICAgJGZpbGVUeXBlc1snZG9jJ10gPSAnYXBwbGljYXRpb24vbXN3b3JkJzsKICAgICRmaWxlVHlwZXNbJ3hscyddID0gJ2FwcGxpY2F0aW9uL3ZuZC5tcy1leGNlbCc7CiAgICAkZmlsZVR5cGVzWydwcHQnXSA9ICdhcHBsaWNhdGlvbi92bmQubXMtcG93ZXJwb2ludCc7CiAgICAkZmlsZVR5cGVzWydnaWYnXSA9ICdpbWFnZS9naWYnOwogICAgJGZpbGVUeXBlc1sncG5nJ10gPSAnaW1hZ2UvcG5nJzsKICAgICRmaWxlVHlwZXNbJ2pwZWcnXSA9ICdpbWFnZS9qcGcnOwogICAgJGZpbGVUeXBlc1snanBnJ10gPSAnaW1hZ2UvanBnJzsKICAgICRmaWxlVHlwZXNbJ3dlYnAnXSA9ICdpbWFnZS93ZWJwJzsKICAgICRmaWxlVHlwZXNbJ2F2aWYnXSA9ICdpbWFnZS9hdmlmJzsKICAgICRmaWxlVHlwZXNbJ3JhciddID0gJ2FwcGxpY2F0aW9uL3Jhcic7CiAgICAkZmlsZVR5cGVzWydyYSddID0gJ2F1ZGlvL3gtcG4tcmVhbGF1ZGlvJzsKICAgICRmaWxlVHlwZXNbJ3JhbSddID0gJ2F1ZGlvL3gtcG4tcmVhbGF1ZGlvJzsKICAgICRmaWxlVHlwZXNbJ29nZyddID0gJ2F1ZGlvL3gtcG4tcmVhbGF1ZGlvJzsKICAgICRmaWxlVHlwZXNbJ3dhdiddID0gJ3ZpZGVvL3gtbXN2aWRlbyc7CiAgICAkZmlsZVR5cGVzWyd3bXYnXSA9ICd2aWRlby94LW1zdmlkZW8nOwogICAgJGZpbGVUeXBlc1snYXZpJ10gPSAndmlkZW8veC1tc3ZpZGVvJzsKICAgICRmaWxlVHlwZXNbJ2FzZiddID0gJ3ZpZGVvL3gtbXN2aWRlbyc7CiAgICAkZmlsZVR5cGVzWydkaXZ4J10gPSAndmlkZW8veC1tc3ZpZGVvJzsKICAgICRmaWxlVHlwZXNbJ21wMyddID0gJ2F1ZGlvL21wZWcnOwogICAgJGZpbGVUeXBlc1snbXA0J10gPSAnYXVkaW8vbXBlZyc7CiAgICAkZmlsZVR5cGVzWydtcGVnJ10gPSAndmlkZW8vbXBlZyc7CiAgICAkZmlsZVR5cGVzWydtcGcnXSA9ICd2aWRlby9tcGVnJzsKICAgICRmaWxlVHlwZXNbJ21wZSddID0gJ3ZpZGVvL21wZWcnOwogICAgJGZpbGVUeXBlc1snbW92J10gPSAndmlkZW8vcXVpY2t0aW1lJzsKICAgICRmaWxlVHlwZXNbJ3N3ZiddID0gJ3ZpZGVvL3F1aWNrdGltZSc7CiAgICAkZmlsZVR5cGVzWyczZ3AnXSA9ICd2aWRlby9xdWlja3RpbWUnOwogICAgJGZpbGVUeXBlc1snbTRhJ10gPSAndmlkZW8vcXVpY2t0aW1lJzsKICAgICRmaWxlVHlwZXNbJ2FhYyddID0gJ3ZpZGVvL3F1aWNrdGltZSc7CiAgICAkZmlsZVR5cGVzWydtM3UnXSA9ICd2aWRlby9xdWlja3RpbWUnOwogICAgJGZpbGVUeXBlc1sncGhwJ10gPSBbJ2FwcGxpY2F0aW9uL3gtcGhwJ107CiAgICAkZmlsZVR5cGVzWydodG1sJ10gPSBbJ3RleHQvaHRtbCddOwogICAgJGZpbGVUeXBlc1sndHh0J10gPSBbJ3RleHQvcGxhaW4nXTsKICAgIC8vVW5rbm93biBtaW1lLXR5cGVzIHNob3VsZCBiZSAnYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtJwogICAgaWYoZW1wdHkoJGZpbGVUeXBlc1skZXh0ZW5zaW9uXSkpIHsKICAgICAgJGZpbGVUeXBlc1skZXh0ZW5zaW9uXSA9IFsnYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtJ107CiAgICB9CiAgICByZXR1cm4gJGZpbGVUeXBlc1skZXh0ZW5zaW9uXTsKfQoKIGZ1bmN0aW9uIHNjYW4oJGRpciA9ICcnLCAkZmlsdGVyID0gJycpIHsKICAgICRwYXRoID0gRk1fUk9PVF9QQVRILicvJy4kZGlyOwogICAgIGlmKCRwYXRoKSB7CiAgICAgICAgICRpdGUgPSBuZXcgUmVjdXJzaXZlSXRlcmF0b3JJdGVyYXRvcihuZXcgUmVjdXJzaXZlRGlyZWN0b3J5SXRlcmF0b3IoJHBhdGgpKTsKICAgICAgICAgJHJpaSA9IG5ldyBSZWdleEl0ZXJhdG9yKCRpdGUsICIvKCIgLiAkZmlsdGVyIC4gIikvaSIpOwogICAgICAgICAkZmlsZXMgPSBhcnJheSgpOwogICAgICAgICBmb3JlYWNoICgkcmlpIGFzICRmaWxlKSB7CiAgICAgICAgICAgICBpZiAoISRmaWxlLT5pc0RpcigpKSB7CiAgICAgICAgICAgICAgICAgJGZpbGVOYW1lID0gJGZpbGUtPmdldEZpbGVuYW1lKCk7CiAgICAgICAgICAgICAgICAgJGxvY2F0aW9uID0gc3RyX3JlcGxhY2UoRk1fUk9PVF9QQVRILCAnJywgJGZpbGUtPmdldFBhdGgoKSk7CiAgICAgICAgICAgICAgICAgJGZpbGVzW10gPSBhcnJheSgKICAgICAgICAgICAgICAgICAgICAgIm5hbWUiID0+ICRmaWxlTmFtZSwKICAgICAgICAgICAgICAgICAgICAgInR5cGUiID0+ICJmaWxlIiwKICAgICAgICAgICAgICAgICAgICAgInBhdGgiID0+ICRsb2NhdGlvbiwKICAgICAgICAgICAgICAgICApOwogICAgICAgICAgICAgfQogICAgICAgICB9CiAgICAgICAgIHJldHVybiAkZmlsZXM7CiAgICAgfQp9CgpmdW5jdGlvbiBmbV9kb3dubG9hZF9maWxlKCRmaWxlTG9jYXRpb24sICRmaWxlTmFtZSwgJGNodW5rU2l6ZSAgPSAxMDI0KQp7CiAgICBpZiAoY29ubmVjdGlvbl9zdGF0dXMoKSAhPSAwKQogICAgICAgIHJldHVybiAoZmFsc2UpOwogICAgJGV4dGVuc2lvbiA9IHBhdGhpbmZvKCRmaWxlTmFtZSwgUEFUSElORk9fRVhURU5TSU9OKTsKICAgICRjb250ZW50VHlwZSA9IGZtX2dldF9maWxlX21pbWVzKCRleHRlbnNpb24pOwogICAgaWYoaXNfYXJyYXkoJGNvbnRlbnRUeXBlKSkgewogICAgICAgICRjb250ZW50VHlwZSA9IGltcGxvZGUoJyAnLCAkY29udGVudFR5cGUpOwogICAgfQogICAgJHNpemUgPSBmaWxlc2l6ZSgkZmlsZUxvY2F0aW9uKTsKICAgIGlmICgkc2l6ZSA9PSAwKSB7CiAgICAgICAgZm1fc2V0X21zZyhsbmcoJ1plcm8gYnl0ZSBmaWxlISBBYm9ydGluZyBkb3dubG9hZCcpLCAnZXJyb3InKTsKICAgICAgICAkRk1fUEFUSD1GTV9QQVRIOyBmbV9yZWRpcmVjdChGTV9TRUxGX1VSTCAuICc/cD0nIC4gdXJsZW5jb2RlKCRGTV9QQVRIKSk7CiAgICAgICAgcmV0dXJuIChmYWxzZSk7CiAgICB9CiAgICBAaW5pX3NldCgnbWFnaWNfcXVvdGVzX3J1bnRpbWUnLCAwKTsKICAgICRmcCA9IGZvcGVuKCIkZmlsZUxvY2F0aW9uIiwgInJiIik7CiAgICBpZiAoJGZwID09PSBmYWxzZSkgewogICAgICAgIGZtX3NldF9tc2cobG5nKCdDYW5ub3Qgb3BlbiBmaWxlISBBYm9ydGluZyBkb3dubG9hZCcpLCAnZXJyb3InKTsKICAgICAgICAkRk1fUEFUSD1GTV9QQVRIOyBmbV9yZWRpcmVjdChGTV9TRUxGX1VSTCAuICc/cD0nIC4gdXJsZW5jb2RlKCRGTV9QQVRIKSk7CiAgICAgICAgcmV0dXJuIChmYWxzZSk7CiAgICB9CiAgICAKICAgIGhlYWRlcignQ29udGVudC1EZXNjcmlwdGlvbjogRmlsZSBUcmFuc2ZlcicpOwogICAgaGVhZGVyKCdFeHBpcmVzOiAwJyk7CiAgICBoZWFkZXIoJ0NhY2hlLUNvbnRyb2w6IG11c3QtcmV2YWxpZGF0ZSwgcG9zdC1jaGVjaz0wLCBwcmUtY2hlY2s9MCcpOwogICAgaGVhZGVyKCdQcmFnbWE6IHB1YmxpYycpOwogICAgaGVhZGVyKCJDb250ZW50LVRyYW5zZmVyLUVuY29kaW5nOiBiaW5hcnkiKTsKICAgIGhlYWRlcigiQ29udGVudC1UeXBlOiAkY29udGVudFR5cGUiKTsKICAgICRjb250ZW50RGlzcG9zaXRpb24gPSAnYXR0YWNobWVudCc7CiAgICBpZiAoc3Ryc3RyKCRfU0VSVkVSWydIVFRQX1VTRVJfQUdFTlQnXSwgIk1TSUUiKSkgewogICAgICAgICRmaWxlTmFtZSA9IHByZWdfcmVwbGFjZSgnL1wuLycsICclMmUnLCAkZmlsZU5hbWUsIHN1YnN0cl9jb3VudCgkZmlsZU5hbWUsICcuJykgLSAxKTsKICAgICAgICBoZWFkZXIoIkNvbnRlbnQtRGlzcG9zaXRpb246ICRjb250ZW50RGlzcG9zaXRpb247ZmlsZW5hbWU9XCIkZmlsZU5hbWVcIiIpOwogICAgfSBlbHNlIHsKICAgICAgICBoZWFkZXIoIkNvbnRlbnQtRGlzcG9zaXRpb246ICRjb250ZW50RGlzcG9zaXRpb247ZmlsZW5hbWU9XCIkZmlsZU5hbWVcIiIpOwogICAgfQogICAgaGVhZGVyKCJBY2NlcHQtUmFuZ2VzOiBieXRlcyIpOwogICAgJHJhbmdlID0gMDsKICAgIGlmIChpc3NldCgkX1NFUlZFUlsnSFRUUF9SQU5HRSddKSkgewogICAgICAgIGxpc3QoJGEsICRyYW5nZSkgPSBleHBsb2RlKCI9IiwgJF9TRVJWRVJbJ0hUVFBfUkFOR0UnXSk7CiAgICAgICAgc3RyX3JlcGxhY2UoJHJhbmdlLCAiLSIsICRyYW5nZSk7CiAgICAgICAgJHNpemUyID0gJHNpemUgLSAxOwogICAgICAgICRuZXdfbGVuZ3RoID0gJHNpemUgLSAkcmFuZ2U7CiAgICAgICAgaGVhZGVyKCJIVFRQLzEuMSAyMDYgUGFydGlhbCBDb250ZW50Iik7CiAgICAgICAgaGVhZGVyKCJDb250ZW50LUxlbmd0aDogJG5ld19sZW5ndGgiKTsKICAgICAgICBoZWFkZXIoIkNvbnRlbnQtUmFuZ2U6IGJ5dGVzICRyYW5nZSRzaXplMi8kc2l6ZSIpOwogICAgfSBlbHNlIHsKICAgICAgICAkc2l6ZTIgPSAkc2l6ZSAtIDE7CiAgICAgICAgaGVhZGVyKCJDb250ZW50LVJhbmdlOiBieXRlcyAwLSRzaXplMi8kc2l6ZSIpOwogICAgICAgIGhlYWRlcigiQ29udGVudC1MZW5ndGg6ICIgLiAkc2l6ZSk7CiAgICB9CiAgICAkZmlsZUxvY2F0aW9uID0gcmVhbHBhdGgoJGZpbGVMb2NhdGlvbik7CiAgICB3aGlsZSAob2JfZ2V0X2xldmVsKCkpIG9iX2VuZF9jbGVhbigpOwogICAgcmVhZGZpbGUoJGZpbGVMb2NhdGlvbik7CiAgICBmY2xvc2UoJGZwKTsKICAgIHJldHVybiAoKGNvbm5lY3Rpb25fc3RhdHVzKCkgPT0gMCkgYW5kICFjb25uZWN0aW9uX2Fib3J0ZWQoKSk7Cn0KCmZ1bmN0aW9uIGZtX2dldF90aGVtZSgpIHsKICAgICRyZXN1bHQgPSAnJzsKICAgIGlmKEZNX1RIRU1FID09ICJkYXJrIikgewogICAgICAgICRyZXN1bHQgPSAidGV4dC13aGl0ZSBiZy1kYXJrIjsKICAgIH0KICAgIHJldHVybiAkcmVzdWx0Owp9CgpjbGFzcyBGTV9aaXBwZXIKewogICAgcHJpdmF0ZSAkemlwOwogICAgcHVibGljIGZ1bmN0aW9uIF9fY29uc3RydWN0KCkKICAgIHsKICAgICAgICAkdGhpcy0+emlwID0gbmV3IFppcEFyY2hpdmUoKTsKICAgIH0KICAgIC8qKgogICAgICogQ3JlYXRlIGFyY2hpdmUgd2l0aCBuYW1lICRmaWxlbmFtZSBhbmQgZmlsZXMgJGZpbGVzIChSRUxBVElWRSBQQVRIUyEpCiAgICAgKiBAcGFyYW0gc3RyaW5nICRmaWxlbmFtZQogICAgICogQHBhcmFtIGFycmF5fHN0cmluZyAkZmlsZXMKICAgICAqIEByZXR1cm4gYm9vbAogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gY3JlYXRlKCRmaWxlbmFtZSwgJGZpbGVzKQogICAgewogICAgICAgICRyZXMgPSAkdGhpcy0+emlwLT5vcGVuKCRmaWxlbmFtZSwgWmlwQXJjaGl2ZTo6Q1JFQVRFKTsKICAgICAgICBpZiAoJHJlcyAhPT0gdHJ1ZSkgewogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgICAgIGlmIChpc19hcnJheSgkZmlsZXMpKSB7CiAgICAgICAgICAgIGZvcmVhY2ggKCRmaWxlcyBhcyAkZikgewogICAgICAgICAgICAgICAgJGYgPSBmbV9jbGVhbl9wYXRoKCRmKTsKICAgICAgICAgICAgICAgIGlmICghJHRoaXMtPmFkZEZpbGVPckRpcigkZikpIHsKICAgICAgICAgICAgICAgICAgICAkdGhpcy0+emlwLT5jbG9zZSgpOwogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICAkdGhpcy0+emlwLT5jbG9zZSgpOwogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBpZiAoJHRoaXMtPmFkZEZpbGVPckRpcigkZmlsZXMpKSB7CiAgICAgICAgICAgICAgICAkdGhpcy0+emlwLT5jbG9zZSgpOwogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgIH0KICAgIC8qKgogICAgICogRXh0cmFjdCBhcmNoaXZlICRmaWxlbmFtZSB0byBmb2xkZXIgJHBhdGggKFJFTEFUSVZFIE9SIEFCU09MVVRFIFBBVEhTKQogICAgICogQHBhcmFtIHN0cmluZyAkZmlsZW5hbWUKICAgICAqIEBwYXJhbSBzdHJpbmcgJHBhdGgKICAgICAqIEByZXR1cm4gYm9vbAogICAgICovCiAgICBwdWJsaWMgZnVuY3Rpb24gdW56aXAoJGZpbGVuYW1lLCAkcGF0aCkKICAgIHsKICAgICAgICAkcmVzID0gJHRoaXMtPnppcC0+b3BlbigkZmlsZW5hbWUpOwogICAgICAgIGlmICgkcmVzICE9PSB0cnVlKSB7CiAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICB9CiAgICAgICAgaWYgKCR0aGlzLT56aXAtPmV4dHJhY3RUbygkcGF0aCkpIHsKICAgICAgICAgICAgJHRoaXMtPnppcC0+Y2xvc2UoKTsKICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgfQogICAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KICAgIC8qKgogICAgICogQWRkIGZpbGUvZm9sZGVyIHRvIGFyY2hpdmUKICAgICAqIEBwYXJhbSBzdHJpbmcgJGZpbGVuYW1lCiAgICAgKiBAcmV0dXJuIGJvb2wKICAgICAqLwogICAgcHJpdmF0ZSBmdW5jdGlvbiBhZGRGaWxlT3JEaXIoJGZpbGVuYW1lKQogICAgewogICAgICAgIGlmIChpc19maWxlKCRmaWxlbmFtZSkpIHsKICAgICAgICAgICAgcmV0dXJuICR0aGlzLT56aXAtPmFkZEZpbGUoJGZpbGVuYW1lKTsKICAgICAgICB9IGVsc2VpZiAoaXNfZGlyKCRmaWxlbmFtZSkpIHsKICAgICAgICAgICAgcmV0dXJuICR0aGlzLT5hZGREaXIoJGZpbGVuYW1lKTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQogICAgLyoqCiAgICAgKiBBZGQgZm9sZGVyIHJlY3Vyc2l2ZWx5CiAgICAgKiBAcGFyYW0gc3RyaW5nICRwYXRoCiAgICAgKiBAcmV0dXJuIGJvb2wKICAgICAqLwogICAgcHJpdmF0ZSBmdW5jdGlvbiBhZGREaXIoJHBhdGgpCiAgICB7CiAgICAgICAgaWYgKCEkdGhpcy0+emlwLT5hZGRFbXB0eURpcigkcGF0aCkpIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgICAkb2JqZWN0cyA9IHNjYW5kaXIoJHBhdGgpOwogICAgICAgIGlmIChpc19hcnJheSgkb2JqZWN0cykpIHsKICAgICAgICAgICAgZm9yZWFjaCAoJG9iamVjdHMgYXMgJGZpbGUpIHsKICAgICAgICAgICAgICAgIGlmICgkZmlsZSAhPSAnLicgJiYgJGZpbGUgIT0gJy4uJykgewogICAgICAgICAgICAgICAgICAgIGlmIChpc19kaXIoJHBhdGggLiAnLycgLiAkZmlsZSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgaWYgKCEkdGhpcy0+YWRkRGlyKCRwYXRoIC4gJy8nIC4gJGZpbGUpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICB9IGVsc2VpZiAoaXNfZmlsZSgkcGF0aCAuICcvJyAuICRmaWxlKSkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoISR0aGlzLT56aXAtPmFkZEZpbGUoJHBhdGggLiAnLycgLiAkZmlsZSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQp9CgpjbGFzcyBGTV9aaXBwZXJfVGFyCnsKICAgIHByaXZhdGUgJHRhcjsKICAgIHB1YmxpYyBmdW5jdGlvbiBfX2NvbnN0cnVjdCgpCiAgICB7CiAgICAgICAgJHRoaXMtPnRhciA9IG51bGw7CiAgICB9CiAgICAvKioKICAgICAqIENyZWF0ZSBhcmNoaXZlIHdpdGggbmFtZSAkZmlsZW5hbWUgYW5kIGZpbGVzICRmaWxlcyAoUkVMQVRJVkUgUEFUSFMhKQogICAgICogQHBhcmFtIHN0cmluZyAkZmlsZW5hbWUKICAgICAqIEBwYXJhbSBhcnJheXxzdHJpbmcgJGZpbGVzCiAgICAgKiBAcmV0dXJuIGJvb2wKICAgICAqLwogICAgcHVibGljIGZ1bmN0aW9uIGNyZWF0ZSgkZmlsZW5hbWUsICRmaWxlcykKICAgIHsKICAgICAgICAkdGhpcy0+dGFyID0gbmV3IFBoYXJEYXRhKCRmaWxlbmFtZSk7CiAgICAgICAgaWYgKGlzX2FycmF5KCRmaWxlcykpIHsKICAgICAgICAgICAgZm9yZWFjaCAoJGZpbGVzIGFzICRmKSB7CiAgICAgICAgICAgICAgICAkZiA9IGZtX2NsZWFuX3BhdGgoJGYpOwogICAgICAgICAgICAgICAgaWYgKCEkdGhpcy0+YWRkRmlsZU9yRGlyKCRmKSkgewogICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9IGVsc2UgewogICAgICAgICAgICBpZiAoJHRoaXMtPmFkZEZpbGVPckRpcigkZmlsZXMpKSB7CiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gZmFsc2U7CiAgICAgICAgfQogICAgfQogICAgLyoqCiAgICAgKiBFeHRyYWN0IGFyY2hpdmUgJGZpbGVuYW1lIHRvIGZvbGRlciAkcGF0aCAoUkVMQVRJVkUgT1IgQUJTT0xVVEUgUEFUSFMpCiAgICAgKiBAcGFyYW0gc3RyaW5nICRmaWxlbmFtZQogICAgICogQHBhcmFtIHN0cmluZyAkcGF0aAogICAgICogQHJldHVybiBib29sCiAgICAgKi8KICAgIHB1YmxpYyBmdW5jdGlvbiB1bnppcCgkZmlsZW5hbWUsICRwYXRoKQogICAgewogICAgICAgICRyZXMgPSAkdGhpcy0+dGFyLT5vcGVuKCRmaWxlbmFtZSk7CiAgICAgICAgaWYgKCRyZXMgIT09IHRydWUpIHsKICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgIH0KICAgICAgICBpZiAoJHRoaXMtPnRhci0+ZXh0cmFjdFRvKCRwYXRoKSkgewogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQogICAgLyoqCiAgICAgKiBBZGQgZmlsZS9mb2xkZXIgdG8gYXJjaGl2ZQogICAgICogQHBhcmFtIHN0cmluZyAkZmlsZW5hbWUKICAgICAqIEByZXR1cm4gYm9vbAogICAgICovCiAgICBwcml2YXRlIGZ1bmN0aW9uIGFkZEZpbGVPckRpcigkZmlsZW5hbWUpCiAgICB7CiAgICAgICAgaWYgKGlzX2ZpbGUoJGZpbGVuYW1lKSkgewogICAgICAgICAgICB0cnkgewogICAgICAgICAgICAgICAgJHRoaXMtPnRhci0+YWRkRmlsZSgkZmlsZW5hbWUpOwogICAgICAgICAgICAgICAgcmV0dXJuIHRydWU7CiAgICAgICAgICAgIH0gY2F0Y2ggKEV4Y2VwdGlvbiAkZSkgewogICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgICAgICAgICB9CiAgICAgICAgfSBlbHNlaWYgKGlzX2RpcigkZmlsZW5hbWUpKSB7CiAgICAgICAgICAgIHJldHVybiAkdGhpcy0+YWRkRGlyKCRmaWxlbmFtZSk7CiAgICAgICAgfQogICAgICAgIHJldHVybiBmYWxzZTsKICAgIH0KICAgIC8qKgogICAgICogQWRkIGZvbGRlciByZWN1cnNpdmVseQogICAgICogQHBhcmFtIHN0cmluZyAkcGF0aAogICAgICogQHJldHVybiBib29sCiAgICAgKi8KICAgIHByaXZhdGUgZnVuY3Rpb24gYWRkRGlyKCRwYXRoKQogICAgewogICAgICAgICRvYmplY3RzID0gc2NhbmRpcigkcGF0aCk7CiAgICAgICAgaWYgKGlzX2FycmF5KCRvYmplY3RzKSkgewogICAgICAgICAgICBmb3JlYWNoICgkb2JqZWN0cyBhcyAkZmlsZSkgewogICAgICAgICAgICAgICAgaWYgKCRmaWxlICE9ICcuJyAmJiAkZmlsZSAhPSAnLi4nKSB7CiAgICAgICAgICAgICAgICAgICAgaWYgKGlzX2RpcigkcGF0aCAuICcvJyAuICRmaWxlKSkgewogICAgICAgICAgICAgICAgICAgICAgICBpZiAoISR0aGlzLT5hZGREaXIoJHBhdGggLiAnLycgLiAkZmlsZSkpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0gZWxzZWlmIChpc19maWxlKCRwYXRoIC4gJy8nIC4gJGZpbGUpKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHRyeSB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAkdGhpcy0+dGFyLT5hZGRGaWxlKCRwYXRoIC4gJy8nIC4gJGZpbGUpOwogICAgICAgICAgICAgICAgICAgICAgICB9IGNhdGNoIChFeGNlcHRpb24gJGUpIHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBmYWxzZTsKICAgICAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgICByZXR1cm4gdHJ1ZTsKICAgICAgICB9CiAgICAgICAgcmV0dXJuIGZhbHNlOwogICAgfQp9CgogY2xhc3MgRk1fQ29uZmlnCnsKICAgICB2YXIgJGRhdGE7CiAgICBmdW5jdGlvbiBfX2NvbnN0cnVjdCgpCiAgICB7CiAgICAgICAgZ2xvYmFsICRyb290X3BhdGgsICRyb290X3VybCwgJENPTkZJRzsKICAgICAgICAkZm1fdXJsID0gJHJvb3RfdXJsLiRfU0VSVkVSWyJQSFBfU0VMRiJdOwogICAgICAgICR0aGlzLT5kYXRhID0gYXJyYXkoCiAgICAgICAgICAgICdsYW5nJyA9PiAnZW4nLAogICAgICAgICAgICAnZXJyb3JfcmVwb3J0aW5nJyA9PiB0cnVlLAogICAgICAgICAgICAnc2hvd19oaWRkZW4nID0+IHRydWUKICAgICAgICApOwogICAgICAgICRkYXRhID0gZmFsc2U7CiAgICAgICAgaWYgKHN0cmxlbigkQ09ORklHKSkgewogICAgICAgICAgICAkZGF0YSA9IGZtX29iamVjdF90b19hcnJheShqc29uX2RlY29kZSgkQ09ORklHKSk7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgJG1zZyA9ICdUaW55IEZpbGUgTWFuYWdlcjxicj5FcnJvcjogQ2Fubm90IGxvYWQgY29uZmlndXJhdGlvbic7CiAgICAgICAgICAgIGlmIChzdWJzdHIoJGZtX3VybCwgLTEpID09ICcvJykgewogICAgICAgICAgICAgICAgJGZtX3VybCA9IHJ0cmltKCRmbV91cmwsICcvJyk7CiAgICAgICAgICAgICAgICAkbXNnIC49ICc8YnI+JzsKICAgICAgICAgICAgICAgICRtc2cgLj0gJzxicj5TZWVtcyBsaWtlIHlvdSBoYXZlIGEgdHJhaWxpbmcgc2xhc2ggb24gdGhlIFVSTC4nOwogICAgICAgICAgICAgICAgJG1zZyAuPSAnPGJyPlRyeSB0aGlzIGxpbms6IDxhIGhyZWY9IicgLiAkZm1fdXJsIC4gJyI+JyAuICRmbV91cmwgLiAnPC9hPic7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgZGllKCRtc2cpOwogICAgICAgIH0KICAgICAgICBpZiAoaXNfYXJyYXkoJGRhdGEpICYmIGNvdW50KCRkYXRhKSkgJHRoaXMtPmRhdGEgPSAkZGF0YTsKICAgICAgICBlbHNlICR0aGlzLT5zYXZlKCk7CiAgICB9CiAgICBmdW5jdGlvbiBzYXZlKCkKICAgIHsKICAgICAgICAkZm1fZmlsZSA9IF9fRklMRV9fOwogICAgICAgICR2YXJfbmFtZSA9ICckQ09ORklHJzsKICAgICAgICAkdmFyX3ZhbHVlID0gdmFyX2V4cG9ydChqc29uX2VuY29kZSgkdGhpcy0+ZGF0YSksIHRydWUpOwogICAgICAgICRjb25maWdfc3RyaW5nID0gIjw/cGhwIiAuIGNocigxMykgLiBjaHIoMTApIC4gIi8vRGVmYXVsdCBDb25maWd1cmF0aW9uIi5jaHIoMTMpIC4gY2hyKDEwKS4iJHZhcl9uYW1lID0gJHZhcl92YWx1ZTsiIC4gY2hyKDEzKSAuIGNocigxMCk7CiAgICAgICAgaWYgKGlzX3dyaXRhYmxlKCRmbV9maWxlKSkgewogICAgICAgICAgICAkbGluZXMgPSBmaWxlKCRmbV9maWxlKTsKICAgICAgICAgICAgaWYgKCRmaCA9IEBmb3BlbigkZm1fZmlsZSwgInciKSkgewogICAgICAgICAgICAgICAgQGZwdXRzKCRmaCwgJGNvbmZpZ19zdHJpbmcsIHN0cmxlbigkY29uZmlnX3N0cmluZykpOwogICAgICAgICAgICAgICAgZm9yICgkeCA9IDM7ICR4IDwgY291bnQoJGxpbmVzKTsgJHgrKykgewogICAgICAgICAgICAgICAgICAgIEBmcHV0cygkZmgsICRsaW5lc1skeF0sIHN0cmxlbigkbGluZXNbJHhdKSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBAZmNsb3NlKCRmaCk7CiAgICAgICAgICAgIH0KICAgICAgICB9CiAgICB9Cn0KCmZ1bmN0aW9uIGZtX3Nob3dfbmF2X3BhdGgoJHBhdGgpCnsKICAgIGdsb2JhbCAkbGFuZywgJHN0aWNreV9uYXZiYXIsICRlZGl0RmlsZTsKICAgICRpc1N0aWNreU5hdkJhciA9ICRzdGlja3lfbmF2YmFyID8gJ2ZpeGVkLXRvcCcgOiAnJzsKICAgICRnZXRUaGVtZSA9IGZtX2dldF90aGVtZSgpOwogICAgJGdldFRoZW1lIC49ICIgbmF2YmFyLWxpZ2h0IjsKICAgIGlmKEZNX1RIRU1FID09ICJkYXJrIikgewogICAgICAgICRnZXRUaGVtZSAuPSAiIG5hdmJhci1kYXJrIjsKICAgIH0gZWxzZSB7CiAgICAgICAgJGdldFRoZW1lIC49ICIgYmctd2hpdGUiOwogICAgfQogICAgPz4KICAgIDxuYXYgY2xhc3M9Im5hdmJhciBuYXZiYXItZXhwYW5kLWxnIDw/cGhwIGVjaG8gJGdldFRoZW1lOyA/PiBtYi00IG1haW4tbmF2IDw/cGhwIGVjaG8gJGlzU3RpY2t5TmF2QmFyID8+Ij4KICAgICAgICA8YSBjbGFzcz0ibmF2YmFyLWJyYW5kIj4gPD9waHAgZWNobyBsbmcoJ0FwcFRpdGxlJykgPz4gPC9hPgogICAgICAgIDxidXR0b24gY2xhc3M9Im5hdmJhci10b2dnbGVyIiB0eXBlPSJidXR0b24iIGRhdGEtYnMtdG9nZ2xlPSJjb2xsYXBzZSIgZGF0YS1icy10YXJnZXQ9IiNuYXZiYXJTdXBwb3J0ZWRDb250ZW50IiBhcmlhLWNvbnRyb2xzPSJuYXZiYXJTdXBwb3J0ZWRDb250ZW50IiBhcmlhLWV4cGFuZGVkPSJmYWxzZSIgYXJpYS1sYWJlbD0iVG9nZ2xlIG5hdmlnYXRpb24iPgogICAgICAgICAgICA8c3BhbiBjbGFzcz0ibmF2YmFyLXRvZ2dsZXItaWNvbiI+PC9zcGFuPgogICAgICAgIDwvYnV0dG9uPgogICAgICAgIDxkaXYgY2xhc3M9ImNvbGxhcHNlIG5hdmJhci1jb2xsYXBzZSIgaWQ9Im5hdmJhclN1cHBvcnRlZENvbnRlbnQiPgogICAgICAgICAgICA8P3BocAogICAgICAgICAgICAkcGF0aCA9IGZtX2NsZWFuX3BhdGgoJHBhdGgpOwogICAgICAgICAgICAkcm9vdF91cmwgPSAiPGEgaHJlZj0nP3A9Jz48aSBjbGFzcz0nZmEgZmEtaG9tZScgYXJpYS1oaWRkZW49J3RydWUnIHRpdGxlPSciIC4gRk1fUk9PVF9QQVRIIC4gIic+PC9pPjwvYT4iOwogICAgICAgICAgICAkc2VwID0gJzxpIGNsYXNzPSJicmVhZC1jcnVtYiI+IC8gPC9pPic7CiAgICAgICAgICAgIGlmICgkcGF0aCAhPSAnJykgewogICAgICAgICAgICAgICAgJGV4cGxvZGVkID0gZXhwbG9kZSgnLycsICRwYXRoKTsKICAgICAgICAgICAgICAgICRjb3VudCA9IGNvdW50KCRleHBsb2RlZCk7CiAgICAgICAgICAgICAgICAkYXJyYXkgPSBhcnJheSgpOwogICAgICAgICAgICAgICAgJHBhcmVudCA9ICcnOwogICAgICAgICAgICAgICAgZm9yICgkaSA9IDA7ICRpIDwgJGNvdW50OyAkaSsrKSB7CiAgICAgICAgICAgICAgICAgICAgJHBhcmVudCA9IHRyaW0oJHBhcmVudCAuICcvJyAuICRleHBsb2RlZFskaV0sICcvJyk7CiAgICAgICAgICAgICAgICAgICAgJHBhcmVudF9lbmMgPSB1cmxlbmNvZGUoJHBhcmVudCk7CiAgICAgICAgICAgICAgICAgICAgJGFycmF5W10gPSAiPGEgaHJlZj0nP3A9eyRwYXJlbnRfZW5jfSc+IiAuIGZtX2VuYyhmbV9jb252ZXJ0X3dpbigkZXhwbG9kZWRbJGldKSkgLiAiPC9hPiI7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICAkcm9vdF91cmwgLj0gJHNlcCAuIGltcGxvZGUoJHNlcCwgJGFycmF5KTsKICAgICAgICAgICAgfQogICAgICAgICAgICBlY2hvICc8ZGl2IGNsYXNzPSJjb2wteHMtNiBjb2wtc20tNSI+JyAuICRyb290X3VybCAuICRlZGl0RmlsZSAuICc8L2Rpdj4nOwogICAgICAgICAgICA/PgogICAgICAgICAgICA8ZGl2IGNsYXNzPSJjb2wteHMtNiBjb2wtc20tNyI+CiAgICAgICAgICAgICAgICA8dWwgY2xhc3M9Im5hdmJhci1uYXYganVzdGlmeS1jb250ZW50LWVuZCA8P3BocCBlY2hvIGZtX2dldF90aGVtZSgpOyAgPz4iPgogICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0gbXItMiI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlucHV0LWdyb3VwIGlucHV0LWdyb3VwLXNtIG1yLTEiIHN0eWxlPSJtYXJnaW4tdG9wOjRweDsiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIGNsYXNzPSJmb3JtLWNvbnRyb2wiIHBsYWNlaG9sZGVyPSI8P3BocCBlY2hvIGxuZygnU2VhcmNoJykgPz4iIGFyaWEtbGFiZWw9Ijw/cGhwIGVjaG8gbG5nKCdTZWFyY2gnKSA/PiIgYXJpYS1kZXNjcmliZWRieT0ic2VhcmNoLWFkZG9uMiIgaWQ9InNlYXJjaC1hZGRvbiI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJpbnB1dC1ncm91cC1hcHBlbmQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxzcGFuIGNsYXNzPSJpbnB1dC1ncm91cC10ZXh0IGJybC0wIGJyci0wIiBpZD0ic2VhcmNoLWFkZG9uMiI+PGkgY2xhc3M9ImZhIGZhLXNlYXJjaCI+PC9pPjwvc3Bhbj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iaW5wdXQtZ3JvdXAtYXBwZW5kIGJ0bi1ncm91cCI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImlucHV0LWdyb3VwLXRleHQgZHJvcGRvd24tdG9nZ2xlIGJybC0wIiBkYXRhLWJzLXRvZ2dsZT0iZHJvcGRvd24iIGFyaWEtaGFzcG9wdXA9InRydWUiIGFyaWEtZXhwYW5kZWQ9ImZhbHNlIj48L3NwYW4+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkcm9wZG93bi1tZW51IGRyb3Bkb3duLW1lbnUtcmlnaHQiPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSBjbGFzcz0iZHJvcGRvd24taXRlbSIgaHJlZj0iPD9waHAgZWNobyAkcGF0aDIgPSAkcGF0aCA/ICRwYXRoIDogJy4nOyA/PiIgaWQ9ImpzLXNlYXJjaC1tb2RhbCIgZGF0YS1icy10b2dnbGU9Im1vZGFsIiBkYXRhLWJzLXRhcmdldD0iI3NlYXJjaE1vZGFsIj48P3BocCBlY2hvIGxuZygnQWR2YW5jZWQgU2VhcmNoJykgPz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDw/cGhwIGlmICghRk1fUkVBRE9OTFkpOiA/PgogICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICA8YSB0aXRsZT0iPD9waHAgZWNobyBsbmcoJ1VwbG9hZCcpID8+IiBjbGFzcz0ibmF2LWxpbmsiIGhyZWY9Ij9wPTw/cGhwIGVjaG8gdXJsZW5jb2RlKEZNX1BBVEgpID8+JmFtcDt1cGxvYWQiPjxpIGNsYXNzPSJmYSBmYS1jbG91ZC11cGxvYWQiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+IDw/cGhwIGVjaG8gbG5nKCdVcGxvYWQnKSA/PjwvYT4KICAgICAgICAgICAgICAgICAgICA8L2xpPgogICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICA8YSB0aXRsZT0iPD9waHAgZWNobyBsbmcoJ05ld0l0ZW0nKSA/PiIgY2xhc3M9Im5hdi1saW5rIiBocmVmPSIjY3JlYXRlTmV3SXRlbSIgZGF0YS1icy10b2dnbGU9Im1vZGFsIiBkYXRhLWJzLXRhcmdldD0iI2NyZWF0ZU5ld0l0ZW0iPjxpIGNsYXNzPSJmYSBmYS1wbHVzLXNxdWFyZSI+PC9pPiA8P3BocCBlY2hvIGxuZygnTmV3SXRlbScpID8+PC9hPgogICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgPD9waHAgZW5kaWY7ID8+CiAgICAgICAgICAgICAgICAgICAgPD9waHAgaWYgKEZNX1VTRV9BVVRIKTogPz4KICAgICAgICAgICAgICAgICAgICA8bGkgY2xhc3M9Im5hdi1pdGVtIGF2YXRhciBkcm9wZG93biI+CiAgICAgICAgICAgICAgICAgICAgICAgIDxhIGNsYXNzPSJuYXYtbGluayBkcm9wZG93bi10b2dnbGUiIGlkPSJuYXZiYXJEcm9wZG93bk1lbnVMaW5rLTUiIGRhdGEtYnMtdG9nZ2xlPSJkcm9wZG93biIgYXJpYS1oYXNwb3B1cD0idHJ1ZSIgYXJpYS1leHBhbmRlZD0iZmFsc2UiPiA8aSBjbGFzcz0iZmEgZmEtdXNlci1jaXJjbGUiPjwvaT4gPD9waHAgaWYoaXNzZXQoJF9TRVNTSU9OW0ZNX1NFU1NJT05fSURdWydsb2dnZWQnXSkpIHsgZWNobyAkX1NFU1NJT05bRk1fU0VTU0lPTl9JRF1bJ2xvZ2dlZCddOyB9ID8+PC9hPgogICAgICAgICAgICAgICAgICAgICAgICA8ZGl2IGNsYXNzPSJkcm9wZG93bi1tZW51IHRleHQtc21hbGwgc2hhZG93IDw/cGhwIGVjaG8gZm1fZ2V0X3RoZW1lKCk7ID8+IiBhcmlhLWxhYmVsbGVkYnk9Im5hdmJhckRyb3Bkb3duTWVudUxpbmstNSI+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8P3BocCBpZiAoIUZNX1JFQURPTkxZKTogPz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIHRpdGxlPSI8P3BocCBlY2hvIGxuZygnU2V0dGluZ3MnKSA/PiIgY2xhc3M9ImRyb3Bkb3duLWl0ZW0gbmF2LWxpbmsiIGhyZWY9Ij9wPTw/cGhwIGVjaG8gdXJsZW5jb2RlKEZNX1BBVEgpID8+JmFtcDtzZXR0aW5ncz0xIj48aSBjbGFzcz0iZmEgZmEtY29nIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPiA8P3BocCBlY2hvIGxuZygnU2V0dGluZ3MnKSA/PjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDw/cGhwIGVuZGlmID8+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSB0aXRsZT0iPD9waHAgZWNobyBsbmcoJ0hlbHAnKSA/PiIgY2xhc3M9ImRyb3Bkb3duLWl0ZW0gbmF2LWxpbmsiIGhyZWY9Ij9wPTw/cGhwIGVjaG8gdXJsZW5jb2RlKEZNX1BBVEgpID8+JmFtcDtoZWxwPTIiPjxpIGNsYXNzPSJmYSBmYS1leGNsYW1hdGlvbi1jaXJjbGUiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+IDw/cGhwIGVjaG8gbG5nKCdIZWxwJykgPz48L2E+CiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8YSB0aXRsZT0iPD9waHAgZWNobyBsbmcoJ0xvZ291dCcpID8+IiBjbGFzcz0iZHJvcGRvd24taXRlbSBuYXYtbGluayIgaHJlZj0iP2xvZ291dD0xIj48aSBjbGFzcz0iZmEgZmEtc2lnbi1vdXQiIGFyaWEtaGlkZGVuPSJ0cnVlIj48L2k+IDw/cGhwIGVjaG8gbG5nKCdMb2dvdXQnKSA/PjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPC9saT4KICAgICAgICAgICAgICAgICAgICA8P3BocCBlbHNlOiA/PgogICAgICAgICAgICAgICAgICAgICAgICA8P3BocCBpZiAoIUZNX1JFQURPTkxZKTogPz4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxsaSBjbGFzcz0ibmF2LWl0ZW0iPgogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxhIHRpdGxlPSI8P3BocCBlY2hvIGxuZygnU2V0dGluZ3MnKSA/PiIgY2xhc3M9ImRyb3Bkb3duLWl0ZW0gbmF2LWxpbmsiIGhyZWY9Ij9wPTw/cGhwIGVjaG8gdXJsZW5jb2RlKEZNX1BBVEgpID8+JmFtcDtzZXR0aW5ncz0xIj48aSBjbGFzcz0iZmEgZmEtY29nIiBhcmlhLWhpZGRlbj0idHJ1ZSI+PC9pPiA8P3BocCBlY2hvIGxuZygnU2V0dGluZ3MnKSA/PjwvYT4KICAgICAgICAgICAgICAgICAgICAgICAgICAgIDwvbGk+CiAgICAgICAgICAgICAgICAgICAgICAgIDw/cGhwIGVuZGlmOyA/PgogICAgICAgICAgICAgICAgICAgIDw/cGhwIGVuZGlmOyA/PgogICAgICAgICAgICAgICAgPC91bD4KICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9kaXY+CiAgICA8L25hdj4KICAgIDw/cGhwCn0KCmZ1bmN0aW9uIGZtX3Nob3dfbWVzc2FnZSgpCnsKICAgIGlmIChpc3NldCgkX1NFU1NJT05bRk1fU0VTU0lPTl9JRF1bJ21lc3NhZ2UnXSkpIHsKICAgICAgICAkY2xhc3MgPSBpc3NldCgkX1NFU1NJT05bRk1fU0VTU0lPTl9JRF1bJ3N0YXR1cyddKSA/ICRfU0VTU0lPTltGTV9TRVNTSU9OX0lEXVsnc3RhdHVzJ10gOiAnb2snOwogICAgICAgIGVjaG8gJzxwIGNsYXNzPSJtZXNzYWdlICcgLiAkY2xhc3MgLiAnIj4nIC4gJF9TRVNTSU9OW0ZNX1NFU1NJT05fSURdWydtZXNzYWdlJ10gLiAnPC9wPic7CiAgICAgICAgdW5zZXQoJF9TRVNTSU9OW0ZNX1NFU1NJT05fSURdWydtZXNzYWdlJ10pOwogICAgICAgIHVuc2V0KCRfU0VTU0lPTltGTV9TRVNTSU9OX0lEXVsnc3RhdHVzJ10pOwogICAgfQp9CgpmdW5jdGlvbiBmbV9zaG93X2hlYWRlcl9sb2dpbigpCnsKJHNwcml0ZXNfdmVyID0gJzIwMTYwMzE1JzsKaGVhZGVyKCJDb250ZW50LVR5cGU6IHRleHQvaHRtbDsgY2hhcnNldD11dGYtOCIpOwpoZWFkZXIoIkV4cGlyZXM6IFNhdCwgMjYgSnVsIDE5OTcgMDU6MDA6MDAgR01UIik7CmhlYWRlcigiQ2FjaGUtQ29udHJvbDogbm8tc3RvcmUsIG5vLWNhY2hlLCBtdXN0LXJldmFsaWRhdGUsIHBvc3QtY2hlY2s9MCwgcHJlLWNoZWNrPTAiKTsKaGVhZGVyKCJQcmFnbWE6IG5vLWNhY2hlIik7Cmdsb2JhbCAkbGFuZywgJHJvb3RfdXJsLCAkZmF2aWNvbl9wYXRoOwo/Pgo8IURPQ1RZUEUgaHRtbD4KPGh0bWwgbGFuZz0iZW4iPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSwgc2hyaW5rLXRvLWZpdD1ubyI+CiAgICA8bWV0YSBuYW1lPSJkZXNjcmlwdGlvbiIgY29udGVudD0iV2ViIGJhc2VkIEZpbGUgTWFuYWdlciBpbiBQSFAsIE1hbmFnZSB5b3VyIGZpbGVzIGVmZmljaWVudGx5IGFuZCBlYXNpbHkgd2l0aCBUaW55IEZpbGUgTWFuYWdlciI+CiAgICA8bWV0YSBuYW1lPSJhdXRob3IiIGNvbnRlbnQ9IkNDUCBQcm9ncmFtbWVycyI+CiAgICA8bWV0YSBuYW1lPSJyb2JvdHMiIGNvbnRlbnQ9Im5vaW5kZXgsIG5vZm9sbG93Ij4KICAgIDxtZXRhIG5hbWU9Imdvb2dsZWJvdCIgY29udGVudD0ibm9pbmRleCI+CiAgICA8P3BocCBpZigkZmF2aWNvbl9wYXRoKSB7IGVjaG8gJzxsaW5rIHJlbD0iaWNvbiIgaHJlZj0iJy5mbV9lbmMoJGZhdmljb25fcGF0aCkuJyIgdHlwZT0iaW1hZ2UvcG5nIj4nOyB9ID8+CiAgICA8dGl0bGU+PD9waHAgZWNobyBmbV9lbmMoQVBQX1RJVExFKSA/PjwvdGl0bGU+CiAgICA8P3BocCBwcmludF9leHRlcm5hbCgncHJlLWpzZGVsaXZyJyk7ID8+CiAgICA8P3BocCBwcmludF9leHRlcm5hbCgnY3NzLWJvb3RzdHJhcCcpOyA/PgogICAgPHN0eWxlPgogICAgICAgIGJvZHkuZm0tbG9naW4tcGFnZXsgYmFja2dyb3VuZC1jb2xvcjojZjdmOWZiO2ZvbnQtc2l6ZToxNHB4O2JhY2tncm91bmQtY29sb3I6I2Y3ZjlmYjtiYWNrZ3JvdW5kLWltYWdlOnVybCgiZGF0YTppbWFnZS9zdmcreG1sLCUzQ3N2ZyB4bWxucz0naHR0cDovL3d3dy53My5vcmcvMjAwMC9zdmcnIHZpZXdCb3g9JzAgMCAzMDQgMzA0JyB3aWR0aD0nMzA0JyBoZWlnaHQ9JzMwNCclM0UlM0NwYXRoIGZpbGw9JyUyM2UyZTlmMScgZmlsbC1vcGFjaXR5PScwLjQnIGQ9J000NC4xIDIyNGE1IDUgMCAxIDEgMCAySDB2LTJoNDQuMXptMTYwIDQ4YTUgNSAwIDEgMSAwIDJIODJ2LTJoMTIyLjF6bTU3LjgtNDZhNSA1IDAgMSAxIDAtMkgzMDR2MmgtNDIuMXptMCAxNmE1IDUgMCAxIDEgMC0ySDMwNHYyaC00Mi4xem02LjItMTE0YTUgNSAwIDEgMSAwIDJoLTg2LjJhNSA1IDAgMSAxIDAtMmg4Ni4yem0tMjU2LTQ4YTUgNSAwIDEgMSAwIDJIMHYtMmgxMi4xem0xODUuOCAzNGE1IDUgMCAxIDEgMC0yaDg2LjJhNSA1IDAgMSAxIDAgMmgtODYuMnpNMjU4IDEyLjFhNSA1IDAgMSAxLTIgMFYwaDJ2MTIuMXptLTY0IDIwOGE1IDUgMCAxIDEtMiAwdi01NC4yYTUgNSAwIDEgMSAyIDB2NTQuMnptNDgtMTk4LjJWODBoNjJ2MmgtNjRWMjEuOWE1IDUgMCAxIDEgMiAwem0xNiAxNlY2NGg0NnYyaC00OFYzNy45YTUgNSAwIDEgMSAyIDB6bS0xMjggOTZWMjA4aDE2djEyLjFhNSA1IDAgMSAxLTIgMFYyMTBoLTE2di03Ni4xYTUgNSAwIDEgMSAyIDB6bS01LjktMjEuOWE1IDUgMCAxIDEgMCAySDExNHY0OEg4NS45YTUgNSAwIDEgMSAwLTJIMTEydi00OGgxMi4xem0tNi4yIDEzMGE1IDUgMCAxIDEgMC0ySDE3NnYtNzQuMWE1IDUgMCAxIDEgMiAwVjI0MmgtNjAuMXptLTE2LTY0YTUgNSAwIDEgMSAwLTJIMTE0djQ4aDEwLjFhNSA1IDAgMSAxIDAgMkgxMTJ2LTQ4aC0xMC4xek02NiAyODQuMWE1IDUgMCAxIDEtMiAwVjI3NEg1MHYzMGgtMnYtMzJoMTh2MTIuMXpNMjM2LjEgMTc2YTUgNSAwIDEgMSAwIDJIMjI2djk0aDQ4djMyaC0ydi0zMGgtNDh2LTk4aDEyLjF6bTI1LjgtMzBhNSA1IDAgMSAxIDAtMkgyNzR2NDQuMWE1IDUgMCAxIDEtMiAwVjE0NmgtMTAuMXptLTY0IDk2YTUgNSAwIDEgMSAwLTJIMjA4di04MGgxNnYtMTRoLTQyLjFhNSA1IDAgMSAxIDAtMkgyMjZ2MThoLTE2djgwaC0xMi4xem04Ni4yLTIxMGE1IDUgMCAxIDEgMCAySDI3MlYwaDJ2MzJoMTAuMXpNOTggMTAxLjlWMTQ2SDUzLjlhNSA1IDAgMSAxIDAtMkg5NnYtNDIuMWE1IDUgMCAxIDEgMiAwek01My45IDM0YTUgNSAwIDEgMSAwLTJIODBWMGgydjM0SDUzLjl6bTYwLjEgMy45VjY2SDgydjY0SDY5LjlhNSA1IDAgMSAxIDAtMkg4MFY2NGgzMlYzNy45YTUgNSAwIDEgMSAyIDB6TTEwMS45IDgyYTUgNSAwIDEgMSAwLTJIMTI4VjM3LjlhNSA1IDAgMSAxIDIgMFY4MmgtMjguMXptMTYtNjRhNSA1IDAgMSAxIDAtMkgxNDZ2NDQuMWE1IDUgMCAxIDEtMiAwVjE4aC0yNi4xem0xMDIuMiAyNzBhNSA1IDAgMSAxIDAgMkg5OHYxNGgtMnYtMTZoMTI0LjF6TTI0MiAxNDkuOVYxNjBoMTZ2MzRoLTE2djYyaDQ4djQ4aC0ydi00NmgtNDh2LTY2aDE2di0zMGgtMTZ2LTEyLjFhNSA1IDAgMSAxIDIgMHpNNTMuOSAxOGE1IDUgMCAxIDEgMC0ySDY0VjJINDhWMGgxOHYxOEg1My45em0xMTIgMzJhNSA1IDAgMSAxIDAtMkgxOTJWMGg1MHYyaC00OHY0OGgtMjguMXptLTQ4LTQ4YTUgNSAwIDAgMS05LjgtMmgyLjA3YTMgMyAwIDEgMCA1LjY2IDBIMTc4djM0aC0xOFYyMS45YTUgNSAwIDEgMSAyIDBWMzJoMTRWMmgtNTguMXptMCA5NmE1IDUgMCAxIDEgMC0ySDEzN2wzMi0zMmgzOVYyMS45YTUgNSAwIDEgMSAyIDBWNjZoLTQwLjE3bC0zMiAzMkgxMTcuOXptMjguMSA5MC4xYTUgNSAwIDEgMS0yIDB2LTc2LjUxTDE3NS41OSA4MEgyMjRWMjEuOWE1IDUgMCAxIDEgMiAwVjgyaC00OS41OUwxNDYgMTEyLjQxdjc1LjY5em0xNiAzMmE1IDUgMCAxIDEtMiAwdi05OS41MUwxODQuNTkgOTZIMzAwLjFhNSA1IDAgMCAxIDMuOS0zLjl2Mi4wN2EzIDMgMCAwIDAgMCA1LjY2djIuMDdhNSA1IDAgMCAxLTMuOS0zLjlIMTg1LjQxTDE2MiAxMjEuNDF2OTguNjl6bS0xNDQtNjRhNSA1IDAgMSAxLTIgMHYtMy41MWw0OC00OFY0OGgzMlYwaDJ2NTBINjZ2NTUuNDFsLTQ4IDQ4djIuNjl6TTUwIDUzLjl2NDMuNTFsLTQ4IDQ4VjIwOGgyNi4xYTUgNSAwIDEgMSAwIDJIMHYtNjUuNDFsNDgtNDhWNTMuOWE1IDUgMCAxIDEgMiAwem0tMTYgMTZWODkuNDFsLTM0IDM0di0yLjgybDMyLTMyVjY5LjlhNSA1IDAgMSAxIDIgMHpNMTIuMSAzMmE1IDUgMCAxIDEgMCAySDkuNDFMMCA0My40MVY0MC42TDguNTkgMzJoMy41MXptMjY1LjggMThhNSA1IDAgMSAxIDAtMmgxOC42OWw3LjQxLTcuNDF2Mi44MkwyOTcuNDEgNTBIMjc3Ljl6bS0xNiAxNjBhNSA1IDAgMSAxIDAtMkgyODh2LTcxLjQxbDE2LTE2djIuODJsLTE0IDE0VjIxMGgtMjguMXptLTIwOCAzMmE1IDUgMCAxIDEgMC0ySDY0di0yMi41OUw0MC41OSAxOTRIMjEuOWE1IDUgMCAxIDEgMC0ySDQxLjQxTDY2IDIxNi41OVYyNDJINTMuOXptMTUwLjIgMTRhNSA1IDAgMSAxIDAgMkg5NnYtNTYuNkw1Ni42IDE2MkgzNy45YTUgNSAwIDEgMSAwLTJoMTkuNUw5OCAyMDAuNlYyNTZoMTA2LjF6bS0xNTAuMiAyYTUgNSAwIDEgMSAwLTJIODB2LTQ2LjU5TDQ4LjU5IDE3OEgyMS45YTUgNSAwIDEgMSAwLTJINDkuNDFMODIgMjA4LjU5VjI1OEg1My45ek0zNCAzOS44djEuNjFMOS40MSA2Nkgwdi0yaDguNTlMMzIgNDAuNTlWMGgydjM5Ljh6TTIgMzAwLjFhNSA1IDAgMCAxIDMuOSAzLjlIMy44M0EzIDMgMCAwIDAgMCAzMDIuMTdWMjU2aDE4djQ4aC0ydi00NkgydjQyLjF6TTM0IDI0MXY2M2gtMnYtNjJIMHYtMmgzNHYxek0xNyAxOEgwdi0yaDE2VjBoMnYxOGgtMXptMjczLTJoMTR2MmgtMTZWMGgydjE2em0tMzIgMjczdjE1aC0ydi0xNGgtMTR2MTRoLTJ2LTE2aDE4djF6TTAgOTIuMUE1LjAyIDUuMDIgMCAwIDEgNiA5N2E1IDUgMCAwIDEtNiA0Ljl2LTIuMDdhMyAzIDAgMSAwIDAtNS42NlY5Mi4xek04MCAyNzJoMnYzMmgtMnYtMzJ6bTM3LjkgMzJoLTIuMDdhMyAzIDAgMCAwLTUuNjYgMGgtMi4wN2E1IDUgMCAwIDEgOS44IDB6TTUuOSAwQTUuMDIgNS4wMiAwIDAgMSAwIDUuOVYzLjgzQTMgMyAwIDAgMCAzLjgzIDBINS45em0yOTQuMiAwaDIuMDdBMyAzIDAgMCAwIDMwNCAzLjgzVjUuOWE1IDUgMCAwIDEtMy45LTUuOXptMy45IDMwMC4xdjIuMDdhMyAzIDAgMCAwLTEuODMgMS44M2gtMi4wN2E1IDUgMCAwIDEgMy45LTMuOXpNOTcgMTAwYTMgMyAwIDEgMCAwLTYgMyAzIDAgMCAwIDAgNnptMC0xNmEzIDMgMCAxIDAgMC02IDMgMyAwIDAgMCAwIDZ6bTE2IDE2YTMgMyAwIDEgMCAwLTYgMyAzIDAgMCAwIDAgNnptMTYgMTZhMyAzIDAgMSAwIDAtNiAzIDMgMCAwIDAgMCA2em0wIDE2YTMgMyAwIDEgMCAwLTYgMyAzIDAgMCAwIDAgNnptLTQ4IDMyYTMgMyAwIDEgMCAwLTYgMyAzIDAgMCAwIDAgNnptMTYgMTZhMyAzIDAgMSAwIDAtNiAzIDMgMCAwIDAgMCA2em0zMiA0OGEzIDMgMCAxIDAgMC02IDMgMyAwIDAgMCAwIDZ6bS0xNiAxNmEzIDMgMCAxIDAgMC02IDMgMyAwIDAgMCAwIDZ6bTMyLTE2YTMgMyAwIDEgMCAwLTYgMyAzIDAgMCAwIDAgNnptMC0zMmEzIDMgMCAxIDAgMC02IDMgMyAwIDAgMCAwIDZ6bTE2IDMyYTMgMyAwIDEgMCAwLTYgMyAzIDAgMCAwIDAgNnptMzIgMTZhMyAzIDAgMSAwIDAtNiAzIDMgMCAwIDAgMCA2em0wLTE2YTMgMyAwIDEgMCAwLTYgMyAzIDAgMCAwIDAgNnptLTE2LTY0YTMgMyAwIDEgMCAwLTYgMyAzIDAgMCAwIDAgNnptMTYgMGEzIDMgMCAxIDAgMC02IDMgMyAwIDAgMCAwIDZ6bTE2IDk2YTMgMyAwIDEgMCAwLTYgMyAzIDAgMCAwIDAgNnptMCAxNmEzIDMgMCAxIDAgMC02IDMgMyAwIDAgMCAwIDZ6bTE2IDE2YTMgMyAwIDEgMCAwLTYgMyAzIDAgMCAwIDAgNnptMTYtMTQ0YTMgMyAwIDEgMCAwLTYgMyAzIDAgMCAwIDAgNnptMCAzMmEzIDMgMCAxIDAgMC02IDMgMyAwIDAgMCAwIDZ6bTE2LTMyYTMgMyAwIDEgMCAwLTYgMyAzIDAgMCAwIDAgNnptMTYtMTZhMyAzIDAgMSAwIDAtNiAzIDMgMCAwIDAgMCA2em0tOTYgMGEzIDMgMCAxIDAgMC02IDMgMyAwIDAgMCAwIDZ6bTAgMTZhMyAzIDAgMSAwIDAtNiAzIDMgMCAwIDAgMCA2em0xNi0zMmEzIDMgMCAxIDAgMC02IDMgMyAwIDAgMCAwIDZ6bTk2IDBhMyAzIDAgMSAwIDAtNiAzIDMgMCAwIDAgMCA2em0tMTYtNjRhMyAzIDAgMSAwIDAtNiAzIDMgMCAwIDAgMCA2em0xNi0xNmEzIDMgMCAxIDAgMC02IDMgMyAwIDAgMCAwIDZ6bS0zMiAwYTMgMyAwIDEgMCAwLTYgMyAzIDAgMCAwIDAgNnptMC0xNmEzIDMgMCAxIDAgMC02IDMgMyAwIDAgMCAwIDZ6bS0xNiAwYTMgMyAwIDEgMCAwLTYgMyAzIDAgMCAwIDAgNnptLTE2IDBhMyAzIDAgMSAwIDAtNiAzIDMgMCAwIDAgMCA2em0tMTYgMGEzIDMgMCAxIDAgMC02IDMgMyAwIDAgMCAwIDZ6TTQ5IDM2YTMgMyAwIDEgMCAwLTYgMyAzIDAgMCAwIDAgNnptLTMyIDBhMyAzIDAgMSAwIDAtNiAzIDMgMCAwIDAgMCA2em0zMiAxNmEzIDMgMCAxIDAgMC02IDMgMyAwIDAgMCAwIDZ6TTMzIDY4YTMgMyAwIDEgMCAwLTYgMyAzIDAgMCAwIDAgNnptMTYtNDhhMyAzIDAgMSAwIDAtNiAzIDMgMCAwIDAgMCA2em0wIDI0MGEzIDMgMCAxIDAgMC02IDMgMyAwIDAgMCAwIDZ6bTE2IDMyYTMgMyAwIDEgMCAwLTYgMyAzIDAgMCAwIDAgNnptLTE2LTY0YTMgMyAwIDEgMCAwLTYgMyAzIDAgMCAwIDAgNnptMCAxNmEzIDMgMCAxIDAgMC02IDMgMyAwIDAgMCAwIDZ6bS0xNi0zMmEzIDMgMCAxIDAgMC02IDMgMyAwIDAgMCAwIDZ6bTgwLTE3NmEzIDMgMCAxIDAgMC02IDMgMyAwIDAgMCAwIDZ6bTE2IDBhMyAzIDAgMSAwIDAtNiAzIDMgMCAwIDAgMCA2em0tMTYtMTZhMyAzIDAgMSAwIDAtNiAzIDMgMCAwIDAgMCA2em0zMiA0OGEzIDMgMCAxIDAgMC02IDMgMyAwIDAgMCAwIDZ6bTE2LTE2YTMgMyAwIDEgMCAwLTYgMyAzIDAgMCAwIDAgNnptMC0zMmEzIDMgMCAxIDAgMC02IDMgMyAwIDAgMCAwIDZ6bTExMiAxNzZhMyAzIDAgMSAwIDAtNiAzIDMgMCAwIDAgMCA2em0tMTYgMTZhMyAzIDAgMSAwIDAtNiAzIDMgMCAwIDAgMCA2em0wIDE2YTMgMyAwIDEgMCAwLTYgMyAzIDAgMCAwIDAgNnptMCAxNmEzIDMgMCAxIDAgMC02IDMgMyAwIDAgMCAwIDZ6TTE3IDE4MGEzIDMgMCAxIDAgMC02IDMgMyAwIDAgMCAwIDZ6bTAgMTZhMyAzIDAgMSAwIDAtNiAzIDMgMCAwIDAgMCA2em0wLTMyYTMgMyAwIDEgMCAwLTYgMyAzIDAgMCAwIDAgNnptMTYgMGEzIDMgMCAxIDAgMC02IDMgMyAwIDAgMCAwIDZ6TTE3IDg0YTMgMyAwIDEgMCAwLTYgMyAzIDAgMCAwIDAgNnptMzIgNjRhMyAzIDAgMSAwIDAtNiAzIDMgMCAwIDAgMCA2em0xNi0xNmEzIDMgMCAxIDAgMC02IDMgMyAwIDAgMCAwIDZ6JyUzRSUzQy9wYXRoJTNFJTNDL3N2ZyUzRSIpO30KICAgICAgICAuZm0tbG9naW4tcGFnZSAuYnJhbmR7IHdpZHRoOjEyMXB4O292ZXJmbG93OmhpZGRlbjttYXJnaW46MCBhdXRvO3Bvc2l0aW9uOnJlbGF0aXZlO3otaW5kZXg6MX0KICAgICAgICAuZm0tbG9naW4tcGFnZSAuYnJhbmQgaW1neyB3aWR0aDoxMDAlfQogICAgICAgIC5mbS1sb2dpbi1wYWdlIC5jYXJkLXdyYXBwZXJ7IHdpZHRoOjM2MHB4O21hcmdpbi10b3A6MTAlO21hcmdpbi1sZWZ0OmF1dG87bWFyZ2luLXJpZ2h0OmF1dG87fQogICAgICAgIC5mbS1sb2dpbi1wYWdlIC5jYXJkeyBib3JkZXItY29sb3I6dHJhbnNwYXJlbnQ7Ym94LXNoYWRvdzowIDRweCA4cHggcmdiYSgwLDAsMCwuMDUpfQogICAgICAgIC5mbS1sb2dpbi1wYWdlIC5jYXJkLXRpdGxleyBtYXJnaW4tYm90dG9tOjEuNXJlbTtmb250LXNpemU6MjRweDtmb250LXdlaWdodDo0MDA7fQogICAgICAgIC5mbS1sb2dpbi1wYWdlIC5mb3JtLWNvbnRyb2x7IGJvcmRlci13aWR0aDoyLjNweH0KICAgICAgICAuZm0tbG9naW4tcGFnZSAuZm9ybS1ncm91cCBsYWJlbHsgd2lkdGg6MTAwJX0KICAgICAgICAuZm0tbG9naW4tcGFnZSAuYnRuLmJ0bi1ibG9ja3sgcGFkZGluZzoxMnB4IDEwcHh9CiAgICAgICAgLmZtLWxvZ2luLXBhZ2UgLmZvb3RlcnsgbWFyZ2luOjQwcHggMDtjb2xvcjojODg4O3RleHQtYWxpZ246Y2VudGVyfQogICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6NDI1cHgpewogICAgICAgICAgICAuZm0tbG9naW4tcGFnZSAuY2FyZC13cmFwcGVyeyB3aWR0aDo5MCU7bWFyZ2luOjAgYXV0bzttYXJnaW4tdG9wOjEwJTt9CiAgICAgICAgfQogICAgICAgIEBtZWRpYSBzY3JlZW4gYW5kIChtYXgtd2lkdGg6MzIwcHgpewogICAgICAgICAgICAuZm0tbG9naW4tcGFnZSAuY2FyZC5mYXR7IHBhZGRpbmc6MH0KICAgICAgICAgICAgLmZtLWxvZ2luLXBhZ2UgLmNhcmQuZmF0IC5jYXJkLWJvZHl7IHBhZGRpbmc6MTVweH0KICAgICAgICB9CiAgICAgICAgLm1lc3NhZ2V7IHBhZGRpbmc6NHB4IDdweDtib3JkZXI6MXB4IHNvbGlkICNkZGQ7YmFja2dyb3VuZC1jb2xvcjojZmZmfQogICAgICAgIC5tZXNzYWdlLm9reyBib3JkZXItY29sb3I6Z3JlZW47Y29sb3I6Z3JlZW59CiAgICAgICAgLm1lc3NhZ2UuZXJyb3J7IGJvcmRlci1jb2xvcjpyZWQ7Y29sb3I6cmVkfQogICAgICAgIC5tZXNzYWdlLmFsZXJ0eyBib3JkZXItY29sb3I6b3JhbmdlO2NvbG9yOm9yYW5nZX0KICAgICAgICBib2R5LmZtLWxvZ2luLXBhZ2UudGhlbWUtZGFyayB7YmFja2dyb3VuZC1jb2xvcjogIzJmMmEyYTt9CiAgICAgICAgLnRoZW1lLWRhcmsgc3ZnIGcsIC50aGVtZS1kYXJrIHN2ZyBwYXRoIHtmaWxsOiAjZmZmZmZmOyB9CiAgICA8L3N0eWxlPgo8L2hlYWQ+Cjxib2R5IGNsYXNzPSJmbS1sb2dpbi1wYWdlIDw/cGhwIGVjaG8gKEZNX1RIRU1FID09ICJkYXJrIikgPyAndGhlbWUtZGFyaycgOiAnJzsgPz4iPgo8ZGl2IGlkPSJ3cmFwcGVyIiBjbGFzcz0iY29udGFpbmVyLWZsdWlkIj4KICAgIDw/cGhwCiAgICB9CiAgICAvKioKICAgICAqIFNob3cgcGFnZSBmb290ZXIgaW4gTG9naW4gRm9ybQogICAgICovCiAgICBmdW5jdGlvbiBmbV9zaG93X2Zvb3Rlcl9sb2dpbigpCiAgICB7CiAgICA/Pgo8L2Rpdj4KPD9waHAgcHJpbnRfZXh0ZXJuYWwoJ2pzLWpxdWVyeScpOyA/Pgo8P3BocCBwcmludF9leHRlcm5hbCgnanMtYm9vdHN0cmFwJyk7ID8+CjwvYm9keT4KPC9odG1sPgo8P3BocAp9CgpmdW5jdGlvbiBmbV9zaG93X2hlYWRlcigpCnsKJHNwcml0ZXNfdmVyID0gJzIwMTYwMzE1JzsKaGVhZGVyKCJDb250ZW50LVR5cGU6IHRleHQvaHRtbDsgY2hhcnNldD11dGYtOCIpOwpoZWFkZXIoIkV4cGlyZXM6IFNhdCwgMjYgSnVsIDE5OTcgMDU6MDA6MDAgR01UIik7CmhlYWRlcigiQ2FjaGUtQ29udHJvbDogbm8tc3RvcmUsIG5vLWNhY2hlLCBtdXN0LXJldmFsaWRhdGUsIHBvc3QtY2hlY2s9MCwgcHJlLWNoZWNrPTAiKTsKaGVhZGVyKCJQcmFnbWE6IG5vLWNhY2hlIik7Cmdsb2JhbCAkbGFuZywgJHJvb3RfdXJsLCAkc3RpY2t5X25hdmJhciwgJGZhdmljb25fcGF0aDsKJGlzU3RpY2t5TmF2QmFyID0gJHN0aWNreV9uYXZiYXIgPyAnbmF2YmFyLWZpeGVkJyA6ICduYXZiYXItbm9ybWFsJzsKPz4KPCFET0NUWVBFIGh0bWw+CjxodG1sPgo8aGVhZD4KICAgIDxtZXRhIGNoYXJzZXQ9InV0Zi04Ij4KICAgIDxtZXRhIG5hbWU9InZpZXdwb3J0IiBjb250ZW50PSJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSwgc2hyaW5rLXRvLWZpdD1ubyI+CiAgICA8bWV0YSBuYW1lPSJkZXNjcmlwdGlvbiIgY29udGVudD0iV2ViIGJhc2VkIEZpbGUgTWFuYWdlciBpbiBQSFAsIE1hbmFnZSB5b3VyIGZpbGVzIGVmZmljaWVudGx5IGFuZCBlYXNpbHkgd2l0aCBUaW55IEZpbGUgTWFuYWdlciI+CiAgICA8bWV0YSBuYW1lPSJhdXRob3IiIGNvbnRlbnQ9IkNDUCBQcm9ncmFtbWVycyI+CiAgICA8bWV0YSBuYW1lPSJyb2JvdHMiIGNvbnRlbnQ9Im5vaW5kZXgsIG5vZm9sbG93Ij4KICAgIDxtZXRhIG5hbWU9Imdvb2dsZWJvdCIgY29udGVudD0ibm9pbmRleCI+CiAgICA8P3BocCBpZigkZmF2aWNvbl9wYXRoKSB7IGVjaG8gJzxsaW5rIHJlbD0iaWNvbiIgaHJlZj0iJy5mbV9lbmMoJGZhdmljb25fcGF0aCkuJyIgdHlwZT0iaW1hZ2UvcG5nIj4nOyB9ID8+CiAgICA8dGl0bGU+PD9waHAgZWNobyBmbV9lbmMoQVBQX1RJVExFKSA/PjwvdGl0bGU+CiAgICA8P3BocCBwcmludF9leHRlcm5hbCgncHJlLWpzZGVsaXZyJyk7ID8+CiAgICA8P3BocCBwcmludF9leHRlcm5hbCgncHJlLWNsb3VkZmxhcmUnKTsgPz4KICAgIDw/cGhwIHByaW50X2V4dGVybmFsKCdjc3MtYm9vdHN0cmFwJyk7ID8+CiAgICA8P3BocCBwcmludF9leHRlcm5hbCgnY3NzLWZvbnQtYXdlc29tZScpOyA/PgogICAgPD9waHAgaWYgKEZNX1VTRV9ISUdITElHSFRKUyAmJiBpc3NldCgkX0dFVFsndmlldyddKSk6ID8+CiAgICA8P3BocCBwcmludF9leHRlcm5hbCgnY3NzLWhpZ2hsaWdodGpzJyk7ID8+CiAgICA8P3BocCBlbmRpZjsgPz4KICAgIDxzY3JpcHQgdHlwZT0idGV4dC9qYXZhc2NyaXB0Ij53aW5kb3cuY3NyZiA9ICc8P3BocCBlY2hvICRfU0VTU0lPTlsndG9rZW4nXTsgPz4nOzwvc2NyaXB0PgogICAgPHN0eWxlPgogICAgICAgIGh0bWwgeyAtbW96LW9zeC1mb250LXNtb290aGluZzogZ3JheXNjYWxlOyAtd2Via2l0LWZvbnQtc21vb3RoaW5nOiBhbnRpYWxpYXNlZDsgdGV4dC1yZW5kZXJpbmc6IG9wdGltaXplTGVnaWJpbGl0eTsgaGVpZ2h0OiAxMDAlOyBzY3JvbGwtYmVoYXZpb3I6IHNtb290aDt9CiAgICAgICAgKiwqOjpiZWZvcmUsKjo6YWZ0ZXIgeyBib3gtc2l6aW5nOiBib3JkZXItYm94O30KICAgICAgICBib2R5IHsgZm9udC1zaXplOjE1cHg7IGNvbG9yOiMyMjI7YmFja2dyb3VuZDojRjdGN0Y3OyB9CiAgICAgICAgYm9keS5uYXZiYXItZml4ZWQgeyBtYXJnaW4tdG9wOjU1cHg7IH0KICAgICAgICBhLCBhOmhvdmVyLCBhOnZpc2l0ZWQsIGE6Zm9jdXMgeyB0ZXh0LWRlY29yYXRpb246bm9uZSAhaW1wb3J0YW50OyB9CiAgICAgICAgLmZpbGVuYW1lLCB0ZCwgdGggeyB3aGl0ZS1zcGFjZTpub3dyYXAgIH0KICAgICAgICAubmF2YmFyLWJyYW5kIHsgZm9udC13ZWlnaHQ6Ym9sZDsgfQogICAgICAgIC5uYXYtaXRlbS5hdmF0YXIgYSB7IGN1cnNvcjpwb2ludGVyO3RleHQtdHJhbnNmb3JtOmNhcGl0YWxpemU7IH0KICAgICAgICAubmF2LWl0ZW0uYXZhdGFyIGEgPiBpIHsgZm9udC1zaXplOjE1cHg7IH0KICAgICAgICAubmF2LWl0ZW0uYXZhdGFyIC5kcm9wZG93bi1tZW51IGEgeyBmb250LXNpemU6MTNweDsgfQogICAgICAgICNzZWFyY2gtYWRkb24geyBmb250LXNpemU6MTJweDtib3JkZXItcmlnaHQtd2lkdGg6MDsgfQogICAgICAgIC5icmwtMCB7IGJhY2tncm91bmQ6dHJhbnNwYXJlbnQ7Ym9yZGVyLWxlZnQ6MDsgYm9yZGVyLXRvcC1sZWZ0LXJhZGl1czogMDsgYm9yZGVyLWJvdHRvbS1sZWZ0LXJhZGl1czogMDsgfQogICAgICAgIC5icnItMCB7IGJvcmRlci10b3AtcmlnaHQtcmFkaXVzOiAwOyBib3JkZXItYm90dG9tLXJpZ2h0LXJhZGl1czogMDsgfQogICAgICAgIC5icmVhZC1jcnVtYiB7IGNvbG9yOiNjY2NjY2M7Zm9udC1zdHlsZTpub3JtYWw7IH0KICAgICAgICAjbWFpbi10YWJsZSB7IHRyYW5zaXRpb246IHRyYW5zZm9ybSAuMjVzIGN1YmljLWJlemllcigwLjQsIDAuNSwgMCwgMSksd2lkdGggMHMgLjI1czt9CiAgICAgICAgI21haW4tdGFibGUgLmZpbGVuYW1lIGEgeyBjb2xvcjojMjIyMjIyOyB9CiAgICAgICAgLnRhYmxlIHRkLCAudGFibGUgdGggeyB2ZXJ0aWNhbC1hbGlnbjptaWRkbGUgIWltcG9ydGFudDsgfQogICAgICAgIC50YWJsZSAuY3VzdG9tLWNoZWNrYm94LXRkIC5jdXN0b20tY29udHJvbC5jdXN0b20tY2hlY2tib3gsIC50YWJsZSAuY3VzdG9tLWNoZWNrYm94LWhlYWRlciAuY3VzdG9tLWNvbnRyb2wuY3VzdG9tLWNoZWNrYm94IHsgbWluLXdpZHRoOjE4cHg7IGRpc3BsYXk6IGZsZXg7YWxpZ24taXRlbXM6IGNlbnRlcjsganVzdGlmeS1jb250ZW50OiBjZW50ZXI7IH0KICAgICAgICAudGFibGUtc20gdGQsIC50YWJsZS1zbSB0aCB7IHBhZGRpbmc6LjRyZW07IH0KICAgICAgICAudGFibGUtYm9yZGVyZWQgdGQsIC50YWJsZS1ib3JkZXJlZCB0aCB7IGJvcmRlcjoxcHggc29saWQgI2YxZjFmMTsgfQogICAgICAgIC5oaWRkZW4geyBkaXNwbGF5Om5vbmUgIH0KICAgICAgICBwcmUud2l0aC1obGpzIHsgcGFkZGluZzowOyBvdmVyZmxvdzogaGlkZGVuOyAgfQogICAgICAgIHByZS53aXRoLWhsanMgY29kZSB7IG1hcmdpbjowO2JvcmRlcjowO292ZXJmbG93OnNjcm9sbDsgIH0KICAgICAgICBjb2RlLm1heGhlaWdodCwgcHJlLm1heGhlaWdodCB7IG1heC1oZWlnaHQ6NTEycHggIH0KICAgICAgICAuZmEuZmEtY2FyZXQtcmlnaHQgeyBmb250LXNpemU6MS4yZW07bWFyZ2luOjAgNHB4O3ZlcnRpY2FsLWFsaWduOm1pZGRsZTtjb2xvcjojZWNlY2VjICB9CiAgICAgICAgLmZhLmZhLWhvbWUgeyBmb250LXNpemU6MS4zZW07dmVydGljYWwtYWxpZ246Ym90dG9tICB9CiAgICAgICAgLnBhdGggeyBtYXJnaW4tYm90dG9tOjEwcHggIH0KICAgICAgICBmb3JtLmRyb3B6b25lIHsgbWluLWhlaWdodDoyMDBweDtib3JkZXI6MnB4IGRhc2hlZCAjMDA3YmZmO2xpbmUtaGVpZ2h0OjZyZW07IH0KICAgICAgICAucmlnaHQgeyB0ZXh0LWFsaWduOnJpZ2h0ICB9CiAgICAgICAgLmNlbnRlciwgLmNsb3NlLCAubG9naW4tZm9ybSwgLnByZXZpZXctaW1nLWNvbnRhaW5lciB7IHRleHQtYWxpZ246Y2VudGVyICB9CiAgICAgICAgLm1lc3NhZ2UgeyBwYWRkaW5nOjRweCA3cHg7Ym9yZGVyOjFweCBzb2xpZCAjZGRkO2JhY2tncm91bmQtY29sb3I6I2ZmZiAgfQogICAgICAgIC5tZXNzYWdlLm9rIHsgYm9yZGVyLWNvbG9yOmdyZWVuO2NvbG9yOmdyZWVuICB9CiAgICAgICAgLm1lc3NhZ2UuZXJyb3IgeyBib3JkZXItY29sb3I6cmVkO2NvbG9yOnJlZCAgfQogICAgICAgIC5tZXNzYWdlLmFsZXJ0IHsgYm9yZGVyLWNvbG9yOm9yYW5nZTtjb2xvcjpvcmFuZ2UgIH0KICAgICAgICAucHJldmlldy1pbWcgeyBtYXgtd2lkdGg6MTAwJTttYXgtaGVpZ2h0Ojgwdmg7YmFja2dyb3VuZDp1cmwoZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCQUFBQUFRQ0FJQUFBQ1FrV2cyQUFBQUtrbEVRVlI0Mm1MNS8vOC9BemJ3K1BGanJPSk1EQ1NDVVEzRUFCWmM0UzByS3pzYVN2VFRBQkJnQU15ZkNNc1k0QjlpQUFBQUFFbEZUa1N1UW1DQyk7Y3Vyc29yOnpvb20taW4gfQogICAgICAgIGlucHV0I3ByZXZpZXctaW1nLXpvb21DaGVja1t0eXBlPWNoZWNrYm94XSB7IGRpc3BsYXk6bm9uZSB9CiAgICAgICAgaW5wdXQjcHJldmlldy1pbWctem9vbUNoZWNrW3R5cGU9Y2hlY2tib3hdOmNoZWNrZWQgfiBsYWJlbCA+IGltZyB7IG1heC13aWR0aDpub25lO21heC1oZWlnaHQ6bm9uZTtjdXJzb3I6em9vbS1vdXQgfQogICAgICAgIC5pbmxpbmUtYWN0aW9ucyA+IGEgPiBpIHsgZm9udC1zaXplOjFlbTttYXJnaW4tbGVmdDo1cHg7YmFja2dyb3VuZDojMzc4NWMxO2NvbG9yOiNmZmY7cGFkZGluZzozcHggNHB4O2JvcmRlci1yYWRpdXM6M3B4OyB9CiAgICAgICAgLnByZXZpZXctdmlkZW8geyBwb3NpdGlvbjpyZWxhdGl2ZTttYXgtd2lkdGg6MTAwJTtoZWlnaHQ6MDtwYWRkaW5nLWJvdHRvbTo2Mi41JTttYXJnaW4tYm90dG9tOjEwcHggIH0KICAgICAgICAucHJldmlldy12aWRlbyB2aWRlbyB7IHBvc2l0aW9uOmFic29sdXRlO3dpZHRoOjEwMCU7aGVpZ2h0OjEwMCU7bGVmdDowO3RvcDowO2JhY2tncm91bmQ6IzAwMCAgfQogICAgICAgIC5jb21wYWN0LXRhYmxlIHsgYm9yZGVyOjA7d2lkdGg6YXV0byAgfQogICAgICAgIC5jb21wYWN0LXRhYmxlIHRkLCAuY29tcGFjdC10YWJsZSB0aCB7IHdpZHRoOjEwMHB4O2JvcmRlcjowO3RleHQtYWxpZ246Y2VudGVyICB9CiAgICAgICAgLmNvbXBhY3QtdGFibGUgdHI6aG92ZXIgdGQgeyBiYWNrZ3JvdW5kLWNvbG9yOiNmZmYgIH0KICAgICAgICAuZmlsZW5hbWUgeyBtYXgtd2lkdGg6NDIwcHg7b3ZlcmZsb3c6aGlkZGVuO3RleHQtb3ZlcmZsb3c6ZWxsaXBzaXMgIH0KICAgICAgICAuYnJlYWstd29yZCB7IHdvcmQtd3JhcDpicmVhay13b3JkO21hcmdpbi1sZWZ0OjMwcHggIH0KICAgICAgICAuYnJlYWstd29yZC5mbG9hdC1sZWZ0IGEgeyBjb2xvcjojN2Q3ZDdkICB9CiAgICAgICAgLmJyZWFrLXdvcmQgKyAuZmxvYXQtcmlnaHQgeyBwYWRkaW5nLXJpZ2h0OjMwcHg7cG9zaXRpb246cmVsYXRpdmUgIH0KICAgICAgICAuYnJlYWstd29yZCArIC5mbG9hdC1yaWdodCA+IGEgeyBjb2xvcjojN2Q3ZDdkO2ZvbnQtc2l6ZToxLjJlbTttYXJnaW4tcmlnaHQ6NHB4ICB9CiAgICAgICAgI2VkaXRvciB7IHBvc2l0aW9uOmFic29sdXRlO3JpZ2h0OjE1cHg7dG9wOjEwMHB4O2JvdHRvbToxNXB4O2xlZnQ6MTVweCAgfQogICAgICAgIEBtZWRpYSAobWF4LXdpZHRoOjQ4MXB4KSB7CiAgICAgICAgICAgICNlZGl0b3IgeyB0b3A6MTUwcHg7IH0KICAgICAgICB9CiAgICAgICAgI25vcm1hbC1lZGl0b3IgeyBib3JkZXItcmFkaXVzOjNweDtib3JkZXItd2lkdGg6MnB4O3BhZGRpbmc6MTBweDtvdXRsaW5lOm5vbmU7IH0KICAgICAgICAuYnRuLTIgeyBwYWRkaW5nOjRweCAxMHB4O2ZvbnQtc2l6ZTpzbWFsbDsgfQogICAgICAgIGxpLmZpbGU6YmVmb3JlLGxpLmZvbGRlcjpiZWZvcmUgeyBmb250Om5vcm1hbCBub3JtYWwgbm9ybWFsIDE0cHgvMSBGb250QXdlc29tZTtjb250ZW50OiJcZjAxNiI7bWFyZ2luLXJpZ2h0OjVweCB9CiAgICAgICAgbGkuZm9sZGVyOmJlZm9yZSB7IGNvbnRlbnQ6IlxmMTE0IiB9CiAgICAgICAgaS5mYS5mYS1mb2xkZXItbyB7IGNvbG9yOiMwMTU3YjMgfQogICAgICAgIGkuZmEuZmEtcGljdHVyZS1vIHsgY29sb3I6IzI2Yjk5YSB9CiAgICAgICAgaS5mYS5mYS1maWxlLWFyY2hpdmUtbyB7IGNvbG9yOiNkYTdkN2QgfQogICAgICAgIC5idG4tMiBpLmZhLmZhLWZpbGUtYXJjaGl2ZS1vIHsgY29sb3I6aW5oZXJpdCB9CiAgICAgICAgaS5mYS5mYS1jc3MzIHsgY29sb3I6I2YzNmZhMCB9CiAgICAgICAgaS5mYS5mYS1maWxlLWNvZGUtbyB7IGNvbG9yOiMwMDdiZmYgfQogICAgICAgIGkuZmEuZmEtY29kZSB7IGNvbG9yOiNjYzRiNGMgfQogICAgICAgIGkuZmEuZmEtZmlsZS10ZXh0LW8geyBjb2xvcjojMDA5NmU2IH0KICAgICAgICBpLmZhLmZhLWh0bWw1IHsgY29sb3I6I2Q3NWU3MiB9CiAgICAgICAgaS5mYS5mYS1maWxlLWV4Y2VsLW8geyBjb2xvcjojMDljNTVkIH0KICAgICAgICBpLmZhLmZhLWZpbGUtcG93ZXJwb2ludC1vIHsgY29sb3I6I2Y2NzEyZSB9CiAgICAgICAgaS5nby1iYWNrIHsgZm9udC1zaXplOjEuMmVtO2NvbG9yOiMwMDdiZmY7IH0KICAgICAgICAubWFpbi1uYXYgeyBwYWRkaW5nOjAuMnJlbSAxcmVtO2JveC1zaGFkb3c6MCA0cHggNXB4IDAgcmdiYSgwLCAwLCAwLCAuMTQpLCAwIDFweCAxMHB4IDAgcmdiYSgwLCAwLCAwLCAuMTIpLCAwIDJweCA0cHggLTFweCByZ2JhKDAsIDAsIDAsIC4yKSAgfQogICAgICAgIC5kYXRhVGFibGVzX2ZpbHRlciB7IGRpc3BsYXk6bm9uZTsgfQogICAgICAgIHRhYmxlLmRhdGFUYWJsZSB0aGVhZCAuc29ydGluZyB7IGN1cnNvcjpwb2ludGVyO2JhY2tncm91bmQtcmVwZWF0Om5vLXJlcGVhdDtiYWNrZ3JvdW5kLXBvc2l0aW9uOmNlbnRlciByaWdodDtiYWNrZ3JvdW5kLWltYWdlOnVybCgnZGF0YTppbWFnZS9wbmc7YmFzZTY0LGlWQk9SdzBLR2dvQUFBQU5TVWhFVWdBQUFCTUFBQUFUQ0FRQUFBRFlXZjVIQUFBQWtFbEVRVlFvejdYUU1RNUFRQkNGNGRXUVNKeEM1d3dheDFDcTFlN0JBZHhENVNMK1RxL1FDTTFvTmlKaWR3b3gwMzU1bVhuRy9EckV0SVE2YXppb05aUXhJMHlrUGhUUUl3aENSK0JtQll0bEs3a0xKWXdXQ2NKQTlNNHFkclpyZDhwUGpaV1B0T3FkUlF5MzIwWVNWMTdPYXRGQzRldXRzNnozOUdZTUtSUENUS1k5VW5QUTZQK0d0TVJmR3RQbkJDaXFoQWVKUG1rcUFBQUFBRWxGVGtTdVFtQ0MnKTsgfQogICAgICAgIHRhYmxlLmRhdGFUYWJsZSB0aGVhZCAuc29ydGluZ19hc2MgeyBjdXJzb3I6cG9pbnRlcjtiYWNrZ3JvdW5kLXJlcGVhdDpuby1yZXBlYXQ7YmFja2dyb3VuZC1wb3NpdGlvbjpjZW50ZXIgcmlnaHQ7YmFja2dyb3VuZC1pbWFnZTp1cmwoJ2RhdGE6aW1hZ2UvcG5nO2Jhc2U2NCxpVkJPUncwS0dnb0FBQUFOU1VoRVVnQUFBQk1BQUFBVENBWUFBQUJ5VURiTUFBQUFaMGxFUVZRNHkyTmdHTEtncXVFdUZ4QlBBR0kyYWhoV0NzUy9nRGliVW9PMGdQZ3hFUDhINHR0QXJFeXVRWXhBUEJkcUVBeFBCSW1UWTVnakVMOURNK3dURU51UWFoQXZFTzlETXdpR2R3QXhPeW1HSlFMeFR5RCtqZ1dEeENNWlJzRW9HQVZvQUFEZWVtd3RQY1pJMndBQUFBQkpSVTVFcmtKZ2dnPT0nKTsgfQogICAgICAgIHRhYmxlLmRhdGFUYWJsZSB0aGVhZCAuc29ydGluZ19kZXNjIHsgY3Vyc29yOnBvaW50ZXI7YmFja2dyb3VuZC1yZXBlYXQ6bm8tcmVwZWF0O2JhY2tncm91bmQtcG9zaXRpb246Y2VudGVyIHJpZ2h0O2JhY2tncm91bmQtaW1hZ2U6dXJsKCdkYXRhOmltYWdlL3BuZztiYXNlNjQsaVZCT1J3MEtHZ29BQUFBTlNVaEVVZ0FBQUJNQUFBQVRDQVlBQUFCeVVEYk1BQUFBWlVsRVFWUTR5Mk5nR0FXallCU2dnYXFHdTVGQS9CT0l2MlBCSVBGRVVneGpCK0lkUVB3ZkM5NEh4THlrdXM0R2lEK2hHZlFPaUIzSjhTb2pFRTlFTTJ3dVNKemNzRk1HNHR0UWd4NERzUmFsa1pFTnhMK0F1SlFhTWNzR3hCT0FtR3ZvcGs4QVZ6MXNMWmdnMGJzQUFBQUFTVVZPUks1Q1lJST0nKTsgfQogICAgICAgIHRhYmxlLmRhdGFUYWJsZSB0aGVhZCB0cjpmaXJzdC1jaGlsZCB0aC5jdXN0b20tY2hlY2tib3gtaGVhZGVyOmZpcnN0LWNoaWxkIHsgYmFja2dyb3VuZC1pbWFnZTpub25lOyB9CiAgICAgICAgLmZvb3Rlci1hY3Rpb24gbGkgeyBtYXJnaW4tYm90dG9tOjEwcHg7IH0KICAgICAgICAuYXBwLXYtdGl0bGUgeyBmb250LXNpemU6MjRweDtmb250LXdlaWdodDozMDA7bGV0dGVyLXNwYWNpbmc6LS41cHg7dGV4dC10cmFuc2Zvcm06dXBwZXJjYXNlOyB9CiAgICAgICAgaHIuY3VzdG9tLWhyIHsgYm9yZGVyLXRvcDoxcHggZGFzaGVkICM4YzhiOGI7Ym9yZGVyLWJvdHRvbToxcHggZGFzaGVkICNmZmY7IH0KICAgICAgICAjc25hY2tiYXIgeyB2aXNpYmlsaXR5OmhpZGRlbjttaW4td2lkdGg6MjUwcHg7bWFyZ2luLWxlZnQ6LTEyNXB4O2JhY2tncm91bmQtY29sb3I6IzMzMztjb2xvcjojZmZmO3RleHQtYWxpZ246Y2VudGVyO2JvcmRlci1yYWRpdXM6MnB4O3BhZGRpbmc6MTZweDtwb3NpdGlvbjpmaXhlZDt6LWluZGV4OjE7bGVmdDo1MCU7Ym90dG9tOjMwcHg7Zm9udC1zaXplOjE3cHg7IH0KICAgICAgICAjc25hY2tiYXIuc2hvdyB7IHZpc2liaWxpdHk6dmlzaWJsZTstd2Via2l0LWFuaW1hdGlvbjpmYWRlaW4gMC41cywgZmFkZW91dCAwLjVzIDIuNXM7YW5pbWF0aW9uOmZhZGVpbiAwLjVzLCBmYWRlb3V0IDAuNXMgMi41czsgfQogICAgICAgIEAtd2Via2l0LWtleWZyYW1lcyBmYWRlaW4geyBmcm9tIHsgYm90dG9tOjA7b3BhY2l0eTowOyB9CiAgICAgICAgdG8geyBib3R0b206MzBweDtvcGFjaXR5OjE7IH0KICAgICAgICB9CiAgICAgICAgQGtleWZyYW1lcyBmYWRlaW4geyBmcm9tIHsgYm90dG9tOjA7b3BhY2l0eTowOyB9CiAgICAgICAgdG8geyBib3R0b206MzBweDtvcGFjaXR5OjE7IH0KICAgICAgICB9CiAgICAgICAgQC13ZWJraXQta2V5ZnJhbWVzIGZhZGVvdXQgeyBmcm9tIHsgYm90dG9tOjMwcHg7b3BhY2l0eToxOyB9CiAgICAgICAgdG8geyBib3R0b206MDtvcGFjaXR5OjA7IH0KICAgICAgICB9CiAgICAgICAgQGtleWZyYW1lcyBmYWRlb3V0IHsgZnJvbSB7IGJvdHRvbTozMHB4O29wYWNpdHk6MTsgfQogICAgICAgIHRvIHsgYm90dG9tOjA7b3BhY2l0eTowOyB9CiAgICAgICAgfQogICAgICAgICNtYWluLXRhYmxlIHNwYW4uYmFkZ2UgeyBib3JkZXItYm90dG9tOjJweCBzb2xpZCAjZjhmOWZhIH0KICAgICAgICAjbWFpbi10YWJsZSBzcGFuLmJhZGdlOm50aC1jaGlsZCgxKSB7IGJvcmRlci1jb2xvcjojZGY0MjI3IH0KICAgICAgICAjbWFpbi10YWJsZSBzcGFuLmJhZGdlOm50aC1jaGlsZCgyKSB7IGJvcmRlci1jb2xvcjojZjhiNjAwIH0KICAgICAgICAjbWFpbi10YWJsZSBzcGFuLmJhZGdlOm50aC1jaGlsZCgzKSB7IGJvcmRlci1jb2xvcjojMDBiZDYwIH0KICAgICAgICAjbWFpbi10YWJsZSBzcGFuLmJhZGdlOm50aC1jaGlsZCg0KSB7IGJvcmRlci1jb2xvcjojNDU4MWZmIH0KICAgICAgICAjbWFpbi10YWJsZSBzcGFuLmJhZGdlOm50aC1jaGlsZCg1KSB7IGJvcmRlci1jb2xvcjojYWM2OGZjIH0KICAgICAgICAjbWFpbi10YWJsZSBzcGFuLmJhZGdlOm50aC1jaGlsZCg2KSB7IGJvcmRlci1jb2xvcjojNDVjM2QyIH0KICAgICAgICBAbWVkaWEgb25seSBzY3JlZW4gYW5kIChtaW4tZGV2aWNlLXdpZHRoOjc2OHB4KSBhbmQgKG1heC1kZXZpY2Utd2lkdGg6MTAyNHB4KSBhbmQgKG9yaWVudGF0aW9uOmxhbmRzY2FwZSkgYW5kICgtd2Via2l0LW1pbi1kZXZpY2UtcGl4ZWwtcmF0aW86MikgeyAubmF2YmFyLWNvbGxhcHNlIC5jb2wteHMtNiB7IHBhZGRpbmc6MDsgfQogICAgICAgIH0KICAgICAgICAuYnRuLmFjdGl2ZS5mb2N1cywuYnRuLmFjdGl2ZTpmb2N1cywuYnRuLmZvY3VzLC5idG4uZm9jdXM6YWN0aXZlLC5idG46YWN0aXZlOmZvY3VzLC5idG46Zm9jdXMgeyBvdXRsaW5lOjAhaW1wb3J0YW50O291dGxpbmUtb2Zmc2V0OjAhaW1wb3J0YW50O2JhY2tncm91bmQtaW1hZ2U6bm9uZSFpbXBvcnRhbnQ7LXdlYmtpdC1ib3gtc2hhZG93Om5vbmUhaW1wb3J0YW50O2JveC1zaGFkb3c6bm9uZSFpbXBvcnRhbnQgfQogICAgICAgIC5sZHMtZmFjZWJvb2sgeyBkaXNwbGF5Om5vbmU7cG9zaXRpb246cmVsYXRpdmU7d2lkdGg6NjRweDtoZWlnaHQ6NjRweCB9CiAgICAgICAgLmxkcy1mYWNlYm9vayBkaXYsLmxkcy1mYWNlYm9vay5zaG93LW1lIHsgZGlzcGxheTppbmxpbmUtYmxvY2sgfQogICAgICAgIC5sZHMtZmFjZWJvb2sgZGl2IHsgcG9zaXRpb246YWJzb2x1dGU7bGVmdDo2cHg7d2lkdGg6MTNweDtiYWNrZ3JvdW5kOiMwMDdiZmY7YW5pbWF0aW9uOmxkcy1mYWNlYm9vayAxLjJzIGN1YmljLWJlemllcigwLC41LC41LDEpIGluZmluaXRlIH0KICAgICAgICAubGRzLWZhY2Vib29rIGRpdjpudGgtY2hpbGQoMSkgeyBsZWZ0OjZweDthbmltYXRpb24tZGVsYXk6LS4yNHMgfQogICAgICAgIC5sZHMtZmFjZWJvb2sgZGl2Om50aC1jaGlsZCgyKSB7IGxlZnQ6MjZweDthbmltYXRpb24tZGVsYXk6LS4xMnMgfQogICAgICAgIC5sZHMtZmFjZWJvb2sgZGl2Om50aC1jaGlsZCgzKSB7IGxlZnQ6NDVweDthbmltYXRpb24tZGVsYXk6MHMgfQogICAgICAgIEBrZXlmcmFtZXMgbGRzLWZhY2Vib29rIHsgMCUgeyB0b3A6NnB4O2hlaWdodDo1MXB4IH0KICAgICAgICAxMDAlLDUwJSB7IHRvcDoxOXB4O2hlaWdodDoyNnB4IH0KICAgICAgICB9CiAgICAgICAgdWwjc2VhcmNoLXdyYXBwZXIgeyBwYWRkaW5nLWxlZnQ6IDA7Ym9yZGVyOiAxcHggc29saWQgI2VjZWNlY2NjOyB9IHVsI3NlYXJjaC13cmFwcGVyIGxpIHsgbGlzdC1zdHlsZTogbm9uZTsgcGFkZGluZzogNXB4O2JvcmRlci1ib3R0b206IDFweCBzb2xpZCAjZWNlY2VjY2M7IH0KICAgICAgICB1bCNzZWFyY2gtd3JhcHBlciBsaTpudGgtY2hpbGQob2RkKXsgYmFja2dyb3VuZDogI2Y5ZjlmOWNjO30KICAgICAgICAuYy1wcmV2aWV3LWltZyB7IG1heC13aWR0aDogMzAwcHg7IH0KICAgICAgICAuYm9yZGVyLXJhZGl1cy0wIHsgYm9yZGVyLXJhZGl1czogMDsgfQogICAgICAgIC5mbG9hdC1yaWdodCB7IGZsb2F0OiByaWdodDsgfQogICAgICAgIC50YWJsZS1ob3Zlcj50Ym9keT50cjpob3Zlcj50ZDpmaXJzdC1jaGlsZCB7IGJvcmRlci1sZWZ0OiAxcHggc29saWQgIzFiNzdmZDsgfQogICAgICAgICNtYWluLXRhYmxlIHRyLmV2ZW4geyBiYWNrZ3JvdW5kLWNvbG9yOiAjRjhGOUZhOyB9CiAgICAgICAgLmZpbGVuYW1lPmE+aSB7bWFyZ2luLXJpZ2h0OiAzcHg7fQogICAgPC9zdHlsZT4KICAgIDw/cGhwCiAgICBpZiAoRk1fVEhFTUUgPT0gImRhcmsiKTogPz4KICAgICAgICA8c3R5bGU+CiAgICAgICAgICAgIDpyb290IHsKICAgICAgICAgICAgICAgIC0tYnMtYmctb3BhY2l0eTogMTsKICAgICAgICAgICAgICAgIC0tYmctY29sb3I6ICNmM2RhYTY7CiAgICAgICAgICAgICAgICAtLWJzLWRhcmstcmdiOiAyOCwgMzYsIDQxICFpbXBvcnRhbnQ7CiAgICAgICAgICAgICAgICAtLWJzLWJnLW9wYWNpdHk6IDE7CiAgICAgICAgICAgIH0KICAgICAgICAgICAgLnRhYmxlLWRhcmsgeyAtLWJzLXRhYmxlLWJnOiAyOCwgMzYsIDQxICFpbXBvcnRhbnQ7IH0KICAgICAgICAgICAgLmJ0bi1wcmltYXJ5IHsgLS1icy1idG4tYmc6ICMyNjU2NmM7IC0tYnMtYnRuLWJvcmRlci1jb2xvcjogIzI2NTY2YzsgfQogICAgICAgICAgICBib2R5LnRoZW1lLWRhcmsgeyBiYWNrZ3JvdW5kLWltYWdlOiBsaW5lYXItZ3JhZGllbnQoOTBkZWcsICMxYzI0MjksICMyNjMyMzgpOyBjb2xvcjogI0NGRDhEQzsgfQogICAgICAgICAgICAubGlzdC1ncm91cCAubGlzdC1ncm91cC1pdGVtIHsgYmFja2dyb3VuZDogIzM0M2E0MDsgfQogICAgICAgICAgICAudGhlbWUtZGFyayAubmF2YmFyLW5hdiBpLCAubmF2YmFyLW5hdiAuZHJvcGRvd24tdG9nZ2xlLCAuYnJlYWstd29yZCB7IGNvbG9yOiAjQ0ZEOERDOyB9CiAgICAgICAgICAgIGEsIGE6aG92ZXIsIGE6dmlzaXRlZCwgYTphY3RpdmUsICNtYWluLXRhYmxlIC5maWxlbmFtZSBhLCBpLmZhLmZhLWZvbGRlci1vLCBpLmdvLWJhY2sgeyBjb2xvcjogdmFyKC0tYmctY29sb3IpOyB9CiAgICAgICAgICAgIHVsI3NlYXJjaC13cmFwcGVyIGxpOm50aC1jaGlsZChvZGQpIHsgYmFja2dyb3VuZDogIzIxMmEyZjsgfQogICAgICAgICAgICAudGhlbWUtZGFyayAuYnRuLW91dGxpbmUtcHJpbWFyeSB7IGNvbG9yOiAjYjhlNTljOyBib3JkZXItY29sb3I6ICNiOGU1OWM7IH0KICAgICAgICAgICAgLnRoZW1lLWRhcmsgLmJ0bi1vdXRsaW5lLXByaW1hcnk6aG92ZXIsIC50aGVtZS1kYXJrIC5idG4tb3V0bGluZS1wcmltYXJ5OmFjdGl2ZSB7IGJhY2tncm91bmQtY29sb3I6ICMyZDQxMjE7fQogICAgICAgICAgICAudGhlbWUtZGFyayBpbnB1dC5mb3JtLWNvbnRyb2wgeyBiYWNrZ3JvdW5kLWNvbG9yOiAjMTAxNTE4OyBjb2xvcjogI0NGRDhEQzsgfQogICAgICAgICAgICAudGhlbWUtZGFyayAuZHJvcHpvbmUgeyBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDsgfQogICAgICAgICAgICAudGhlbWUtZGFyayAuaW5saW5lLWFjdGlvbnMgPiBhID4gaSB7IGJhY2tncm91bmQ6ICM3OTc1NWU7IH0KICAgICAgICAgICAgLnRoZW1lLWRhcmsgLnRleHQtd2hpdGUgeyBjb2xvcjogI0NGRDhEQyAhaW1wb3J0YW50OyB9CiAgICAgICAgICAgIC50aGVtZS1kYXJrIC50YWJsZS1ib3JkZXJlZCB0ZCwgLnRhYmxlLWJvcmRlcmVkIHRoIHsgYm9yZGVyLWNvbG9yOiAjMzQzNDM0OyB9CiAgICAgICAgICAgIC50aGVtZS1kYXJrIC50YWJsZS1ib3JkZXJlZCB0ZCAuY3VzdG9tLWNvbnRyb2wtaW5wdXQsIC50aGVtZS1kYXJrIC50YWJsZS1ib3JkZXJlZCB0aCAuY3VzdG9tLWNvbnRyb2wtaW5wdXQgeyBvcGFjaXR5OiAwLjY3ODsgfQogICAgICAgICAgICAubWVzc2FnZSB7IGJhY2tncm91bmQtY29sb3I6ICMyMTI1Mjk7IH0KICAgICAgICAgICAgLmNvbXBhY3QtdGFibGUgdHI6aG92ZXIgdGQgeyBiYWNrZ3JvdW5kLWNvbG9yOiAjM2QzZDNkOyB9CiAgICAgICAgICAgICNtYWluLXRhYmxlIHRyLmV2ZW4geyBiYWNrZ3JvdW5kLWNvbG9yOiAjMjEyOTJmOyB9CiAgICAgICAgICAgIGZvcm0uZHJvcHpvbmUgeyBib3JkZXItY29sb3I6ICM3OTc1NWU7IH0KICAgICAgICA8L3N0eWxlPgogICAgPD9waHAgZW5kaWY7ID8+CjwvaGVhZD4KPGJvZHkgY2xhc3M9Ijw/cGhwIGVjaG8gKEZNX1RIRU1FID09ICJkYXJrIikgPyAndGhlbWUtZGFyaycgOiAnJzsgPz4gPD9waHAgZWNobyAkaXNTdGlja3lOYXZCYXI7ID8+Ij4KPGRpdiBpZD0id3JhcHBlciIgY2xhc3M9ImNvbnRhaW5lci1mbHVpZCI+CiAgICA8IS0tIE5ldyBJdGVtIGNyZWF0aW9uIC0tPgogICAgPGRpdiBjbGFzcz0ibW9kYWwgZmFkZSIgaWQ9ImNyZWF0ZU5ld0l0ZW0iIHRhYmluZGV4PSItMSIgcm9sZT0iZGlhbG9nIiBkYXRhLWJzLWJhY2tkcm9wPSJzdGF0aWMiIGRhdGEtYnMta2V5Ym9hcmQ9ImZhbHNlIiBhcmlhLWxhYmVsbGVkYnk9Im5ld0l0ZW1Nb2RhbExhYmVsIiBhcmlhLWhpZGRlbj0idHJ1ZSI+CiAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtZGlhbG9nIiByb2xlPSJkb2N1bWVudCI+CiAgICAgICAgICAgIDxmb3JtIGNsYXNzPSJtb2RhbC1jb250ZW50IDw/cGhwIGVjaG8gZm1fZ2V0X3RoZW1lKCk7ID8+IiBtZXRob2Q9InBvc3QiPgogICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtaGVhZGVyIj4KICAgICAgICAgICAgICAgICAgICA8aDUgY2xhc3M9Im1vZGFsLXRpdGxlIiBpZD0ibmV3SXRlbU1vZGFsTGFiZWwiPjxpIGNsYXNzPSJmYSBmYS1wbHVzLXNxdWFyZSBmYS1mdyI+PC9pPjw/cGhwIGVjaG8gbG5nKCdDcmVhdGVOZXdJdGVtJykgPz48L2g1PgogICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuLWNsb3NlIiBkYXRhLWJzLWRpc21pc3M9Im1vZGFsIiBhcmlhLWxhYmVsPSJDbG9zZSI+PC9idXR0b24+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWJvZHkiPgogICAgICAgICAgICAgICAgICAgIDxwPjxsYWJlbCBmb3I9Im5ld2ZpbGUiPjw/cGhwIGVjaG8gbG5nKCdJdGVtVHlwZScpID8+IDwvbGFiZWw+PC9wPgogICAgICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImZvcm0tY2hlY2sgZm9ybS1jaGVjay1pbmxpbmUiPgogICAgICAgICAgICAgICAgICAgICAgPGlucHV0IGNsYXNzPSJmb3JtLWNoZWNrLWlucHV0IiB0eXBlPSJyYWRpbyIgbmFtZT0ibmV3ZmlsZSIgaWQ9ImN1c3RvbVJhZGlvSW5saW5lMSIgbmFtZT0ibmV3ZmlsZSIgdmFsdWU9ImZpbGUiPgogICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJmb3JtLWNoZWNrLWxhYmVsIiBmb3I9ImN1c3RvbVJhZGlvSW5saW5lMSI+PD9waHAgZWNobyBsbmcoJ0ZpbGUnKSA/PjwvbGFiZWw+CiAgICAgICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgICAgICAgICAgPGRpdiBjbGFzcz0iZm9ybS1jaGVjayBmb3JtLWNoZWNrLWlubGluZSI+CiAgICAgICAgICAgICAgICAgICAgICA8aW5wdXQgY2xhc3M9ImZvcm0tY2hlY2staW5wdXQiIHR5cGU9InJhZGlvIiBuYW1lPSJuZXdmaWxlIiBpZD0iY3VzdG9tUmFkaW9JbmxpbmUyIiB2YWx1ZT0iZm9sZGVyIiBjaGVja2VkPgogICAgICAgICAgICAgICAgICAgICAgPGxhYmVsIGNsYXNzPSJmb3JtLWNoZWNrLWxhYmVsIiBmb3I9ImN1c3RvbVJhZGlvSW5saW5lMiI+PD9waHAgZWNobyBsbmcoJ0ZvbGRlcicpID8+PC9sYWJlbD4KICAgICAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0ibXQtMyI+PGxhYmVsIGZvcj0ibmV3ZmlsZW5hbWUiPjw/cGhwIGVjaG8gbG5nKCdJdGVtTmFtZScpID8+IDwvbGFiZWw+PC9wPgogICAgICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJ0ZXh0IiBuYW1lPSJuZXdmaWxlbmFtZSIgaWQ9Im5ld2ZpbGVuYW1lIiB2YWx1ZT0iIiBjbGFzcz0iZm9ybS1jb250cm9sIiBwbGFjZWhvbGRlcj0iPD9waHAgZWNobyBsbmcoJ0VudGVyIGhlcmUuLi4nKSA/PiIgcmVxdWlyZWQ+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWZvb3RlciI+CiAgICAgICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0idG9rZW4iIHZhbHVlPSI8P3BocCBlY2hvICRfU0VTU0lPTlsndG9rZW4nXTsgPz4iPgogICAgICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuIGJ0bi1vdXRsaW5lLXByaW1hcnkiIGRhdGEtYnMtZGlzbWlzcz0ibW9kYWwiPjxpIGNsYXNzPSJmYSBmYS10aW1lcy1jaXJjbGUiPjwvaT4gPD9waHAgZWNobyBsbmcoJ0NhbmNlbCcpID8+PC9idXR0b24+CiAgICAgICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJzdWJtaXQiIGNsYXNzPSJidG4gYnRuLXN1Y2Nlc3MiPjxpIGNsYXNzPSJmYSBmYS1jaGVjay1jaXJjbGUiPjwvaT4gPD9waHAgZWNobyBsbmcoJ0NyZWF0ZU5vdycpID8+PC9idXR0b24+CiAgICAgICAgICAgICAgICA8L2Rpdj4KICAgICAgICAgICAgPC9mb3JtPgogICAgICAgIDwvZGl2PgogICAgPC9kaXY+CiAgICA8IS0tIEFkdmFuY2UgU2VhcmNoIE1vZGFsIC0tPgogICAgPGRpdiBjbGFzcz0ibW9kYWwgZmFkZSIgaWQ9InNlYXJjaE1vZGFsIiB0YWJpbmRleD0iLTEiIHJvbGU9ImRpYWxvZyIgYXJpYS1sYWJlbGxlZGJ5PSJzZWFyY2hNb2RhbExhYmVsIiBhcmlhLWhpZGRlbj0idHJ1ZSI+CiAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyBtb2RhbC1sZyIgcm9sZT0iZG9jdW1lbnQiPgogICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWNvbnRlbnQgPD9waHAgZWNobyBmbV9nZXRfdGhlbWUoKTsgPz4iPgogICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtaGVhZGVyIj4KICAgICAgICAgICAgPGg1IGNsYXNzPSJtb2RhbC10aXRsZSBjb2wtMTAiIGlkPSJzZWFyY2hNb2RhbExhYmVsIj4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9ImlucHV0LWdyb3VwIG1iLTMiPgogICAgICAgICAgICAgICAgICA8aW5wdXQgdHlwZT0idGV4dCIgY2xhc3M9ImZvcm0tY29udHJvbCIgcGxhY2Vob2xkZXI9Ijw/cGhwIGVjaG8gbG5nKCdTZWFyY2gnKSA/PiA8P3BocCBlY2hvIGxuZygnYSBmaWxlcycpID8+IiBhcmlhLWxhYmVsPSI8P3BocCBlY2hvIGxuZygnU2VhcmNoJykgPz4iIGFyaWEtZGVzY3JpYmVkYnk9InNlYXJjaC1hZGRvbjMiIGlkPSJhZHZhbmNlZC1zZWFyY2giIGF1dG9mb2N1cyByZXF1aXJlZD4KICAgICAgICAgICAgICAgICAgPHNwYW4gY2xhc3M9ImlucHV0LWdyb3VwLXRleHQiIGlkPSJzZWFyY2gtYWRkb24zIj48aSBjbGFzcz0iZmEgZmEtc2VhcmNoIj48L2k+PC9zcGFuPgogICAgICAgICAgICAgICAgPC9kaXY+CiAgICAgICAgICAgIDwvaDU+CiAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuLWNsb3NlIiBkYXRhLWJzLWRpc21pc3M9Im1vZGFsIiBhcmlhLWxhYmVsPSJDbG9zZSI+PC9idXR0b24+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWJvZHkiPgogICAgICAgICAgICA8Zm9ybSBhY3Rpb249IiIgbWV0aG9kPSJwb3N0Ij4KICAgICAgICAgICAgICAgIDxkaXYgY2xhc3M9Imxkcy1mYWNlYm9vayI+PGRpdj48L2Rpdj48ZGl2PjwvZGl2PjxkaXY+PC9kaXY+PC9kaXY+CiAgICAgICAgICAgICAgICA8dWwgaWQ9InNlYXJjaC13cmFwcGVyIj4KICAgICAgICAgICAgICAgICAgICA8cCBjbGFzcz0ibS0yIj48P3BocCBlY2hvIGxuZygnU2VhcmNoIGZpbGUgaW4gZm9sZGVyIGFuZCBzdWJmb2xkZXJzLi4uJykgPz48L3A+CiAgICAgICAgICAgICAgICA8L3VsPgogICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgICAgPC9kaXY+CiAgICA8L2Rpdj4KICAgIDwhLS1SZW5hbWUgTW9kYWwgLS0+CiAgICA8ZGl2IGNsYXNzPSJtb2RhbCBtb2RhbC1hbGVydCIgZGF0YS1icy1iYWNrZHJvcD0ic3RhdGljIiBkYXRhLWJzLWtleWJvYXJkPSJmYWxzZSIgdGFiaW5kZXg9Ii0xIiByb2xlPSJkaWFsb2ciIGlkPSJyZW5hbWVEYWlsb2ciPgogICAgICA8ZGl2IGNsYXNzPSJtb2RhbC1kaWFsb2ciIHJvbGU9ImRvY3VtZW50Ij4KICAgICAgICA8Zm9ybSBjbGFzcz0ibW9kYWwtY29udGVudCByb3VuZGVkLTMgc2hhZG93IDw/cGhwIGVjaG8gZm1fZ2V0X3RoZW1lKCk7ID8+IiBtZXRob2Q9InBvc3QiIGF1dG9jb21wbGV0ZT0ib2ZmIj4KICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWJvZHkgcC00IHRleHQtY2VudGVyIj4KICAgICAgICAgICAgPGg1IGNsYXNzPSJtYi0zIj48P3BocCBlY2hvIGxuZygnQXJlIHlvdSBzdXJlIHdhbnQgdG8gcmVuYW1lPycpID8+PC9oNT4KICAgICAgICAgICAgPHAgY2xhc3M9Im1iLTEiPgogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9InRleHQiIG5hbWU9InJlbmFtZV90byIgaWQ9ImpzLXJlbmFtZS10byIgY2xhc3M9ImZvcm0tY29udHJvbCIgcGxhY2Vob2xkZXI9Ijw/cGhwIGVjaG8gbG5nKCdFbnRlciBuZXcgZmlsZSBuYW1lJykgPz4iIHJlcXVpcmVkPgogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0idG9rZW4iIHZhbHVlPSI8P3BocCBlY2hvICRfU0VTU0lPTlsndG9rZW4nXTsgPz4iPgogICAgICAgICAgICAgICAgPGlucHV0IHR5cGU9ImhpZGRlbiIgbmFtZT0icmVuYW1lX2Zyb20iIGlkPSJqcy1yZW5hbWUtZnJvbSI+CiAgICAgICAgICAgIDwvcD4KICAgICAgICAgIDwvZGl2PgogICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtZm9vdGVyIGZsZXgtbm93cmFwIHAtMCI+CiAgICAgICAgICAgIDxidXR0b24gdHlwZT0iYnV0dG9uIiBjbGFzcz0iYnRuIGJ0bi1sZyBidG4tbGluayBmcy02IHRleHQtZGVjb3JhdGlvbi1ub25lIGNvbC02IG0tMCByb3VuZGVkLTAgYm9yZGVyLWVuZCIgZGF0YS1icy1kaXNtaXNzPSJtb2RhbCI+PD9waHAgZWNobyBsbmcoJ0NhbmNlbCcpID8+PC9idXR0b24+CiAgICAgICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1sZyBidG4tbGluayBmcy02IHRleHQtZGVjb3JhdGlvbi1ub25lIGNvbC02IG0tMCByb3VuZGVkLTAiPjxzdHJvbmc+PD9waHAgZWNobyBsbmcoJ09rYXknKSA/Pjwvc3Ryb25nPjwvYnV0dG9uPgogICAgICAgICAgPC9kaXY+CiAgICAgICAgPC9mb3JtPgogICAgICA8L2Rpdj4KICAgIDwvZGl2PgogICAgPCEtLSBDb25maXJtIE1vZGFsIC0tPgogICAgPHNjcmlwdCB0eXBlPSJ0ZXh0L2h0bWwiIGlkPSJqcy10cGwtY29uZmlybSI+CiAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwgbW9kYWwtYWxlcnQgY29uZmlybURhaWxvZyIgZGF0YS1icy1iYWNrZHJvcD0ic3RhdGljIiBkYXRhLWJzLWtleWJvYXJkPSJmYWxzZSIgdGFiaW5kZXg9Ii0xIiByb2xlPSJkaWFsb2ciIGlkPSJjb25maXJtRGFpbG9nLTwldGhpcy5pZCU+Ij4KICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWRpYWxvZyIgcm9sZT0iZG9jdW1lbnQiPgogICAgICAgICAgICA8Zm9ybSBjbGFzcz0ibW9kYWwtY29udGVudCByb3VuZGVkLTMgc2hhZG93IDw/cGhwIGVjaG8gZm1fZ2V0X3RoZW1lKCk7ID8+IiBtZXRob2Q9InBvc3QiIGF1dG9jb21wbGV0ZT0ib2ZmIiBhY3Rpb249IjwldGhpcy5hY3Rpb24lPiI+CiAgICAgICAgICAgICAgPGRpdiBjbGFzcz0ibW9kYWwtYm9keSBwLTQgdGV4dC1jZW50ZXIiPgogICAgICAgICAgICAgICAgPGg1IGNsYXNzPSJtYi0yIj48P3BocCBlY2hvIGxuZygnQXJlIHlvdSBzdXJlIHdhbnQgdG8nKSA/PiA8JXRoaXMudGl0bGUlPiA/PC9oNT4KICAgICAgICAgICAgICAgIDxwIGNsYXNzPSJtYi0xIj48JXRoaXMuY29udGVudCU+PC9wPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICAgIDxkaXYgY2xhc3M9Im1vZGFsLWZvb3RlciBmbGV4LW5vd3JhcCBwLTAiPgogICAgICAgICAgICAgICAgPGJ1dHRvbiB0eXBlPSJidXR0b24iIGNsYXNzPSJidG4gYnRuLWxnIGJ0bi1saW5rIGZzLTYgdGV4dC1kZWNvcmF0aW9uLW5vbmUgY29sLTYgbS0wIHJvdW5kZWQtMCBib3JkZXItZW5kIiBkYXRhLWJzLWRpc21pc3M9Im1vZGFsIj48P3BocCBlY2hvIGxuZygnQ2FuY2VsJykgPz48L2J1dHRvbj4KICAgICAgICAgICAgICAgIDxpbnB1dCB0eXBlPSJoaWRkZW4iIG5hbWU9InRva2VuIiB2YWx1ZT0iPD9waHAgZWNobyAkX1NFU1NJT05bJ3Rva2VuJ107ID8+Ij4KICAgICAgICAgICAgICAgIDxidXR0b24gdHlwZT0ic3VibWl0IiBjbGFzcz0iYnRuIGJ0bi1sZyBidG4tbGluayBmcy02IHRleHQtZGVjb3JhdGlvbi1ub25lIGNvbC02IG0tMCByb3VuZGVkLTAiIGRhdGEtYnMtZGlzbWlzcz0ibW9kYWwiPjxzdHJvbmc+PD9waHAgZWNobyBsbmcoJ09rYXknKSA/Pjwvc3Ryb25nPjwvYnV0dG9uPgogICAgICAgICAgICAgIDwvZGl2PgogICAgICAgICAgICA8L2Zvcm0+CiAgICAgICAgICA8L2Rpdj4KICAgICAgICA8L2Rpdj4KICAgIDwvc2NyaXB0PgogICAgPD9waHAKICAgIH0KICAgIC8qKgogICAgICogU2hvdyBwYWdlIGZvb3RlciBhZnRlciBsb2dpbgogICAgICovCiAgICBmdW5jdGlvbiBmbV9zaG93X2Zvb3RlcigpCiAgICB7CiAgICA/Pgo8L2Rpdj4KPD9waHAgcHJpbnRfZXh0ZXJuYWwoJ2pzLWpxdWVyeScpOyA/Pgo8P3BocCBwcmludF9leHRlcm5hbCgnanMtYm9vdHN0cmFwJyk7ID8+Cjw/cGhwIHByaW50X2V4dGVybmFsKCdqcy1qcXVlcnktZGF0YXRhYmxlcycpOyA/Pgo8P3BocCBpZiAoRk1fVVNFX0hJR0hMSUdIVEpTICYmIGlzc2V0KCRfR0VUWyd2aWV3J10pKTogPz4KICAgIDw/cGhwIHByaW50X2V4dGVybmFsKCdqcy1oaWdobGlnaHRqcycpOyA/PgogICAgPHNjcmlwdD5obGpzLmhpZ2hsaWdodEFsbCgpOyB2YXIgaXNIaWdobGlnaHRpbmdFbmFibGVkID0gdHJ1ZTs8L3NjcmlwdD4KPD9waHAgZW5kaWY7ID8+CjxzY3JpcHQ+CiAgICBmdW5jdGlvbiB0ZW1wbGF0ZShodG1sLG9wdGlvbnMpewogICAgICAgIHZhciByZT0vPFwlKFteXCU+XSspP1wlPi9nLHJlRXhwPS8oXiggKT8oaWZ8Zm9yfGVsc2V8c3dpdGNofGNhc2V8YnJlYWt8e3x9KSkoLiopPy9nLGNvZGU9J3ZhciByPVtdO1xuJyxjdXJzb3I9MCxtYXRjaDt2YXIgYWRkPWZ1bmN0aW9uKGxpbmUsanMpe2pzPyhjb2RlKz1saW5lLm1hdGNoKHJlRXhwKT9saW5lKydcbic6J3IucHVzaCgnK2xpbmUrJyk7XG4nKTooY29kZSs9bGluZSE9Jyc/J3IucHVzaCgiJytsaW5lLnJlcGxhY2UoLyIvZywnXFwiJykrJyIpO1xuJzonJyk7cmV0dXJuIGFkZH0KICAgICAgICB3aGlsZShtYXRjaD1yZS5leGVjKGh0bWwpKXthZGQoaHRtbC5zbGljZShjdXJzb3IsbWF0Y2guaW5kZXgpKShtYXRjaFsxXSwhMCk7Y3Vyc29yPW1hdGNoLmluZGV4K21hdGNoWzBdLmxlbmd0aH0KICAgICAgICBhZGQoaHRtbC5zdWJzdHIoY3Vyc29yLGh0bWwubGVuZ3RoLWN1cnNvcikpO2NvZGUrPSdyZXR1cm4gci5qb2luKCIiKTsnO3JldHVybiBuZXcgRnVuY3Rpb24oY29kZS5yZXBsYWNlKC9bXHJcdFxuXS9nLCcnKSkuYXBwbHkob3B0aW9ucykKICAgIH0KICAgIGZ1bmN0aW9uIHJlbmFtZShlLCB0KSB7IGlmKHQpIHsgJCgiI2pzLXJlbmFtZS1mcm9tIikudmFsKHQpOyQoIiNqcy1yZW5hbWUtdG8iKS52YWwodCk7ICQoIiNyZW5hbWVEYWlsb2ciKS5tb2RhbCgnc2hvdycpOyB9IH0KICAgIGZ1bmN0aW9uIGNoYW5nZV9jaGVja2JveGVzKGUsIHQpIHsgZm9yICh2YXIgbiA9IGUubGVuZ3RoIC0gMTsgbiA+PSAwOyBuLS0pIGVbbl0uY2hlY2tlZCA9ICJib29sZWFuIiA9PSB0eXBlb2YgdCA/IHQgOiAhZVtuXS5jaGVja2VkIH0KICAgIGZ1bmN0aW9uIGdldF9jaGVja2JveGVzKCkgeyBmb3IgKHZhciBlID0gZG9jdW1lbnQuZ2V0RWxlbWVudHNCeU5hbWUoImZpbGVbXSIpLCB0ID0gW10sIG4gPSBlLmxlbmd0aCAtIDE7IG4gPj0gMDsgbi0tKSAoZVtuXS50eXBlID0gImNoZWNrYm94IikgJiYgdC5wdXNoKGVbbl0pOyByZXR1cm4gdCB9CiAgICBmdW5jdGlvbiBzZWxlY3RfYWxsKCkgeyBjaGFuZ2VfY2hlY2tib3hlcyhnZXRfY2hlY2tib3hlcygpLCAhMCkgfQogICAgZnVuY3Rpb24gdW5zZWxlY3RfYWxsKCkgeyBjaGFuZ2VfY2hlY2tib3hlcyhnZXRfY2hlY2tib3hlcygpLCAhMSkgfQogICAgZnVuY3Rpb24gaW52ZXJ0X2FsbCgpIHsgY2hhbmdlX2NoZWNrYm94ZXMoZ2V0X2NoZWNrYm94ZXMoKSkgfQogICAgZnVuY3Rpb24gY2hlY2tib3hfdG9nZ2xlKCkgeyB2YXIgZSA9IGdldF9jaGVja2JveGVzKCk7IGUucHVzaCh0aGlzKSwgY2hhbmdlX2NoZWNrYm94ZXMoZSkgfQogICAgZnVuY3Rpb24gYmFja3VwKGUsIHQpIHsgCiAgICAgICAgdmFyIG4gPSBuZXcgWE1MSHR0cFJlcXVlc3QsCiAgICAgICAgICAgIGEgPSAicGF0aD0iICsgZSArICImZmlsZT0iICsgdCArICImdG9rZW49Iisgd2luZG93LmNzcmYgKyImdHlwZT1iYWNrdXAmYWpheD10cnVlIjsKICAgICAgICByZXR1cm4gbi5vcGVuKCJQT1NUIiwgIiIsICEwKSwgbi5zZXRSZXF1ZXN0SGVhZGVyKCJDb250ZW50LXR5cGUiLCAiYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkIiksIG4ub25yZWFkeXN0YXRlY2hhbmdlID0gZnVuY3Rpb24gKCkgewogICAgICAgICAgICA0ID09IG4ucmVhZHlTdGF0ZSAmJiAyMDAgPT0gbi5zdGF0dXMgJiYgdG9hc3Qobi5yZXNwb25zZVRleHQpCiAgICAgICAgfSwgbi5zZW5kKGEpLCAhMQogICAgfQogICAgCiAgICBmdW5jdGlvbiB0b2FzdCh0eHQpIHsgdmFyIHggPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgic25hY2tiYXIiKTt4LmlubmVySFRNTD10eHQ7eC5jbGFzc05hbWUgPSAic2hvdyI7c2V0VGltZW91dChmdW5jdGlvbigpeyB4LmNsYXNzTmFtZSA9IHguY2xhc3NOYW1lLnJlcGxhY2UoInNob3ciLCAiIik7IH0sIDMwMDApOyB9CiAgICAKICAgIGZ1bmN0aW9uIGVkaXRfc2F2ZShlLCB0KSB7CiAgICAgICAgdmFyIG4gPSAiYWNlIiA9PSB0ID8gZWRpdG9yLmdldFNlc3Npb24oKS5nZXRWYWx1ZSgpIDogZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoIm5vcm1hbC1lZGl0b3IiKS52YWx1ZTsKICAgICAgICBpZiAodHlwZW9mIG4gIT09ICd1bmRlZmluZWQnICYmIG4gIT09IG51bGwpIHsKICAgICAgICAgICAgaWYgKHRydWUpIHsKICAgICAgICAgICAgICAgIHZhciBkYXRhID0ge2FqYXg6IHRydWUsIGNvbnRlbnQ6IG4sIHR5cGU6ICdzYXZlJywgdG9rZW46IHdpbmRvdy5jc3JmfTsKICAgICAgICAgICAgICAgICQuYWpheCh7CiAgICAgICAgICAgICAgICAgICAgdHlwZTogIlBPU1QiLAogICAgICAgICAgICAgICAgICAgIHVybDogd2luZG93LmxvY2F0aW9uLAogICAgICAgICAgICAgICAgICAgIGRhdGE6IEpTT04uc3RyaW5naWZ5KGRhdGEpLAogICAgICAgICAgICAgICAgICAgIGNvbnRlbnRUeXBlOiAiYXBwbGljYXRpb24vanNvbjsgY2hhcnNldD11dGYtOCIsCiAgICAgICAgICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24obWVzKXt0b2FzdCgiU2F2ZWQgU3VjY2Vzc2Z1bGx5Iik7IHdpbmRvdy5vbmJlZm9yZXVubG9hZCA9IGZ1bmN0aW9uKCkge3JldHVybn19LAogICAgICAgICAgICAgICAgICAgIGZhaWx1cmU6IGZ1bmN0aW9uKG1lcykge3RvYXN0KCJFcnJvcjogdHJ5IGFnYWluIik7fSwKICAgICAgICAgICAgICAgICAgICBlcnJvcjogZnVuY3Rpb24obWVzKSB7dG9hc3QoYDxwIHN0eWxlPSJiYWNrZ3JvdW5kLWNvbG9yOnJlZCI+JHttZXMucmVzcG9uc2VUZXh0fTwvcD5gKTt9CiAgICAgICAgICAgICAgICB9KTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICAgIHZhciBhID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiZm9ybSIpOwogICAgICAgICAgICAgICAgYS5zZXRBdHRyaWJ1dGUoIm1ldGhvZCIsICJQT1NUIiksIGEuc2V0QXR0cmlidXRlKCJhY3Rpb24iLCAiIik7CiAgICAgICAgICAgICAgICB2YXIgbyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoInRleHRhcmVhIik7CiAgICAgICAgICAgICAgICBvLnNldEF0dHJpYnV0ZSgidHlwZSIsICJ0ZXh0YXJlYSIpLCBvLnNldEF0dHJpYnV0ZSgibmFtZSIsICJzYXZlZGF0YSIpOwogICAgICAgICAgICAgICAgbGV0IGN4ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgiaW5wdXQiKTsgY3guc2V0QXR0cmlidXRlKCJ0eXBlIiwgImhpZGRlbiIpO2N4LnNldEF0dHJpYnV0ZSgibmFtZSIsICJ0b2tlbiIpO2N4LnNldEF0dHJpYnV0ZSgidmFsdWUiLCB3aW5kb3cuY3NyZik7CiAgICAgICAgICAgICAgICB2YXIgYyA9IGRvY3VtZW50LmNyZWF0ZVRleHROb2RlKG4pOwogICAgICAgICAgICAgICAgby5hcHBlbmRDaGlsZChjKSwgYS5hcHBlbmRDaGlsZChvKSwgYS5hcHBlbmRDaGlsZChjeCksIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoYSksIGEuc3VibWl0KCkKICAgICAgICAgICAgfQogICAgICAgIH0KICAgIH0KICAgIGZ1bmN0aW9uIHNob3dfbmV3X3B3ZCgpIHsgJCgiLmpzLW5ldy1wd2QiKS50b2dnbGVDbGFzcygnaGlkZGVuJyk7IH0KICAgIAogICAgZnVuY3Rpb24gc2F2ZV9zZXR0aW5ncygkdGhpcykgewogICAgICAgIGxldCBmb3JtID0gJCgkdGhpcyk7CiAgICAgICAgJC5hamF4KHsKICAgICAgICAgICAgdHlwZTogZm9ybS5hdHRyKCdtZXRob2QnKSwgdXJsOiBmb3JtLmF0dHIoJ2FjdGlvbicpLCBkYXRhOiBmb3JtLnNlcmlhbGl6ZSgpKyImdG9rZW49Iisgd2luZG93LmNzcmYgKyImYWpheD0iK3RydWUsCiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7aWYoZGF0YSkgeyB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7fX0KICAgICAgICB9KTsgcmV0dXJuIGZhbHNlOwogICAgfQogICAgLy9DcmVhdGUgbmV3IHBhc3N3b3JkIGhhc2gKICAgIGZ1bmN0aW9uIG5ld19wYXNzd29yZF9oYXNoKCR0aGlzKSB7CiAgICAgICAgbGV0IGZvcm0gPSAkKCR0aGlzKSwgJHB3ZCA9ICQoIiNqcy1wd2QtcmVzdWx0Iik7ICRwd2QudmFsKCcnKTsKICAgICAgICAkLmFqYXgoewogICAgICAgICAgICB0eXBlOiBmb3JtLmF0dHIoJ21ldGhvZCcpLCB1cmw6IGZvcm0uYXR0cignYWN0aW9uJyksIGRhdGE6IGZvcm0uc2VyaWFsaXplKCkrIiZ0b2tlbj0iKyB3aW5kb3cuY3NyZiArIiZhamF4PSIrdHJ1ZSwKICAgICAgICAgICAgc3VjY2VzczogZnVuY3Rpb24gKGRhdGEpIHsgaWYoZGF0YSkgeyAkcHdkLnZhbChkYXRhKTsgfSB9CiAgICAgICAgfSk7IHJldHVybiBmYWxzZTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gdXBsb2FkX2Zyb21fdXJsKCR0aGlzKSB7CiAgICAgICAgbGV0IGZvcm0gPSAkKCR0aGlzKSwgcmVzdWx0V3JhcHBlciA9ICQoImRpdiNqcy11cmwtdXBsb2FkX19saXN0Iik7CiAgICAgICAgJC5hamF4KHsKICAgICAgICAgICAgdHlwZTogZm9ybS5hdHRyKCdtZXRob2QnKSwgdXJsOiBmb3JtLmF0dHIoJ2FjdGlvbicpLCBkYXRhOiBmb3JtLnNlcmlhbGl6ZSgpKyImdG9rZW49Iisgd2luZG93LmNzcmYgKyImYWpheD0iK3RydWUsCiAgICAgICAgICAgIGJlZm9yZVNlbmQ6IGZ1bmN0aW9uKCkgeyBmb3JtLmZpbmQoImlucHV0W25hbWU9dXBsb2FkdXJsXSIpLmF0dHIoImRpc2FibGVkIiwiZGlzYWJsZWQiKTsgZm9ybS5maW5kKCJidXR0b24iKS5oaWRlKCk7IGZvcm0uZmluZCgiLmxkcy1mYWNlYm9vayIpLmFkZENsYXNzKCdzaG93LW1lJyk7IH0sCiAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uIChkYXRhKSB7CiAgICAgICAgICAgICAgICBpZihkYXRhKSB7CiAgICAgICAgICAgICAgICAgICAgZGF0YSA9IEpTT04ucGFyc2UoZGF0YSk7CiAgICAgICAgICAgICAgICAgICAgaWYoZGF0YS5kb25lKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIHJlc3VsdFdyYXBwZXIuYXBwZW5kKCc8ZGl2IGNsYXNzPSJhbGVydCBhbGVydC1zdWNjZXNzIHJvdyI+VXBsb2FkZWQgU3VjY2Vzc2Z1bDogJytkYXRhLmRvbmUubmFtZSsnPC9kaXY+Jyk7IGZvcm0uZmluZCgiaW5wdXRbbmFtZT11cGxvYWR1cmxdIikudmFsKCcnKTsKICAgICAgICAgICAgICAgICAgICB9IGVsc2UgaWYoZGF0YVsnZmFpbCddKSB7IHJlc3VsdFdyYXBwZXIuYXBwZW5kKCc8ZGl2IGNsYXNzPSJhbGVydCBhbGVydC1kYW5nZXIgcm93Ij5FcnJvcjogJytkYXRhLmZhaWwubWVzc2FnZSsnPC9kaXY+Jyk7IH0KICAgICAgICAgICAgICAgICAgICBmb3JtLmZpbmQoImlucHV0W25hbWU9dXBsb2FkdXJsXSIpLnJlbW92ZUF0dHIoImRpc2FibGVkIik7Zm9ybS5maW5kKCJidXR0b24iKS5zaG93KCk7Zm9ybS5maW5kKCIubGRzLWZhY2Vib29rIikucmVtb3ZlQ2xhc3MoJ3Nob3ctbWUnKTsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uKHhocikgewogICAgICAgICAgICAgICAgZm9ybS5maW5kKCJpbnB1dFtuYW1lPXVwbG9hZHVybF0iKS5yZW1vdmVBdHRyKCJkaXNhYmxlZCIpO2Zvcm0uZmluZCgiYnV0dG9uIikuc2hvdygpO2Zvcm0uZmluZCgiLmxkcy1mYWNlYm9vayIpLnJlbW92ZUNsYXNzKCdzaG93LW1lJyk7Y29uc29sZS5lcnJvcih4aHIpOwogICAgICAgICAgICB9CiAgICAgICAgfSk7IHJldHVybiBmYWxzZTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gc2VhcmNoX3RlbXBsYXRlKGRhdGEpIHsKICAgICAgICB2YXIgcmVzcG9uc2UgPSAiIjsKICAgICAgICAkLmVhY2goZGF0YSwgZnVuY3Rpb24gKGtleSwgdmFsKSB7CiAgICAgICAgICAgIHJlc3BvbnNlICs9IGA8bGk+PGEgaHJlZj0iP3A9JHt2YWwucGF0aH0mdmlldz0ke3ZhbC5uYW1lfSI+JHt2YWwucGF0aH0vJHt2YWwubmFtZX08L2E+PC9saT5gOwogICAgICAgIH0pOwogICAgICAgIHJldHVybiByZXNwb25zZTsKICAgIH0KICAgIAogICAgZnVuY3Rpb24gZm1fc2VhcmNoKCkgewogICAgICAgIHZhciBzZWFyY2hUeHQgPSAkKCJpbnB1dCNhZHZhbmNlZC1zZWFyY2giKS52YWwoKSwgc2VhcmNoV3JhcHBlciA9ICQoInVsI3NlYXJjaC13cmFwcGVyIiksIHBhdGggPSAkKCIjanMtc2VhcmNoLW1vZGFsIikuYXR0cigiaHJlZiIpLCBfaHRtbCA9ICIiLCAkbG9hZGVyID0gJCgiZGl2Lmxkcy1mYWNlYm9vayIpOwogICAgICAgIGlmKCEhc2VhcmNoVHh0ICYmIHNlYXJjaFR4dC5sZW5ndGggPiAyICYmIHBhdGgpIHsKICAgICAgICAgICAgdmFyIGRhdGEgPSB7YWpheDogdHJ1ZSwgY29udGVudDogc2VhcmNoVHh0LCBwYXRoOnBhdGgsIHR5cGU6ICdzZWFyY2gnLCB0b2tlbjogd2luZG93LmNzcmYgfTsKICAgICAgICAgICAgJC5hamF4KHsKICAgICAgICAgICAgICAgIHR5cGU6ICJQT1NUIiwKICAgICAgICAgICAgICAgIHVybDogd2luZG93LmxvY2F0aW9uLAogICAgICAgICAgICAgICAgZGF0YTogZGF0YSwKICAgICAgICAgICAgICAgIGJlZm9yZVNlbmQ6IGZ1bmN0aW9uKCkgewogICAgICAgICAgICAgICAgICAgIHNlYXJjaFdyYXBwZXIuaHRtbCgnJyk7CiAgICAgICAgICAgICAgICAgICAgJGxvYWRlci5hZGRDbGFzcygnc2hvdy1tZScpOwogICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgIHN1Y2Nlc3M6IGZ1bmN0aW9uKGRhdGEpewogICAgICAgICAgICAgICAgICAgICRsb2FkZXIucmVtb3ZlQ2xhc3MoJ3Nob3ctbWUnKTsKICAgICAgICAgICAgICAgICAgICBkYXRhID0gSlNPTi5wYXJzZShkYXRhKTsKICAgICAgICAgICAgICAgICAgICBpZihkYXRhICYmIGRhdGEubGVuZ3RoKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIF9odG1sID0gc2VhcmNoX3RlbXBsYXRlKGRhdGEpOwogICAgICAgICAgICAgICAgICAgICAgICBzZWFyY2hXcmFwcGVyLmh0bWwoX2h0bWwpOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSB7IHNlYXJjaFdyYXBwZXIuaHRtbCgnPHAgY2xhc3M9Im0tMiI+Tm8gcmVzdWx0IGZvdW5kITxwPicpOyB9CiAgICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgICAgZXJyb3I6IGZ1bmN0aW9uKHhocikgeyAkbG9hZGVyLnJlbW92ZUNsYXNzKCdzaG93LW1lJyk7IHNlYXJjaFdyYXBwZXIuaHRtbCgnPHAgY2xhc3M9Im0tMiI+RVJST1I6IFRyeSBhZ2FpbiBsYXRlciE8L3A+Jyk7IH0sCiAgICAgICAgICAgICAgICBmYWlsdXJlOiBmdW5jdGlvbihtZXMpIHsgJGxvYWRlci5yZW1vdmVDbGFzcygnc2hvdy1tZScpOyBzZWFyY2hXcmFwcGVyLmh0bWwoJzxwIGNsYXNzPSJtLTIiPkVSUk9SOiBUcnkgYWdhaW4gbGF0ZXIhPC9wPicpO30KICAgICAgICAgICAgfSk7CiAgICAgICAgfSBlbHNlIHsgc2VhcmNoV3JhcHBlci5odG1sKCJPT1BTOiBtaW5pbXVtIDMgY2hhcmFjdGVycyByZXF1aXJlZCEiKTsgfQogICAgfQogICAgCiAgICBmdW5jdGlvbiBjb25maXJtRGFpbG9nKGUsIGlkID0gMCwgdGl0bGUgPSAiQWN0aW9uIiwgY29udGVudCA9ICIiLCBhY3Rpb24gPSBudWxsKSB7CiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgIGNvbnN0IHRwbE9iaiA9IHtpZCwgdGl0bGUsIGNvbnRlbnQ6IGRlY29kZVVSSUNvbXBvbmVudChjb250ZW50LnJlcGxhY2UoL1wrL2csICcgJykpLCBhY3Rpb259OwogICAgICAgIGxldCB0cGwgPSAkKCIjanMtdHBsLWNvbmZpcm0iKS5odG1sKCk7CiAgICAgICAgJCgiLm1vZGFsLmNvbmZpcm1EYWlsb2ciKS5yZW1vdmUoKTsKICAgICAgICAkKCcjd3JhcHBlcicpLmFwcGVuZCh0ZW1wbGF0ZSh0cGwsdHBsT2JqKSk7CiAgICAgICAgY29uc3QgJGNvbmZpcm1EYWlsb2cgPSAkKCIjY29uZmlybURhaWxvZy0iK3RwbE9iai5pZCk7CiAgICAgICAgJGNvbmZpcm1EYWlsb2cubW9kYWwoJ3Nob3cnKTsKICAgICAgICByZXR1cm4gZmFsc2U7CiAgICB9CiAgICAKICAgIAogICAgIWZ1bmN0aW9uKHMpe3MucHJldmlld0ltYWdlPWZ1bmN0aW9uKGUpe3ZhciBvPXMoZG9jdW1lbnQpLHQ9Ii5wcmV2aWV3SW1hZ2UiLGE9cy5leHRlbmQoe3hPZmZzZXQ6MjAseU9mZnNldDotMjAsZmFkZUluOiJmYXN0Iixjc3M6e3BhZGRpbmc6IjVweCIsYm9yZGVyOiIxcHggc29saWQgI2NjY2NjYyIsImJhY2tncm91bmQtY29sb3IiOiIjZmZmIn0sZXZlbnRTZWxlY3RvcjoiW2RhdGEtcHJldmlldy1pbWFnZV0iLGRhdGFLZXk6InByZXZpZXdJbWFnZSIsb3ZlcmxheUlkOiJwcmV2aWV3LWltYWdlLXBsdWdpbi1vdmVybGF5In0sZSk7cmV0dXJuIG8ub2ZmKHQpLG8ub24oIm1vdXNlb3ZlciIrdCxhLmV2ZW50U2VsZWN0b3IsZnVuY3Rpb24oZSl7cygicCMiK2Eub3ZlcmxheUlkKS5yZW1vdmUoKTt2YXIgbz1zKCI8cD4iKS5hdHRyKCJpZCIsYS5vdmVybGF5SWQpLmNzcygicG9zaXRpb24iLCJhYnNvbHV0ZSIpLmNzcygiZGlzcGxheSIsIm5vbmUiKS5hcHBlbmQocygnPGltZyBjbGFzcz0iYy1wcmV2aWV3LWltZyI+JykuYXR0cigic3JjIixzKHRoaXMpLmRhdGEoYS5kYXRhS2V5KSkpO2EuY3NzJiZvLmNzcyhhLmNzcykscygiYm9keSIpLmFwcGVuZChvKSxvLmNzcygidG9wIixlLnBhZ2VZK2EueU9mZnNldCsicHgiKS5jc3MoImxlZnQiLGUucGFnZVgrYS54T2Zmc2V0KyJweCIpLmZhZGVJbihhLmZhZGVJbil9KSxvLm9uKCJtb3VzZW91dCIrdCxhLmV2ZW50U2VsZWN0b3IsZnVuY3Rpb24oKXtzKCIjIithLm92ZXJsYXlJZCkucmVtb3ZlKCl9KSxvLm9uKCJtb3VzZW1vdmUiK3QsYS5ldmVudFNlbGVjdG9yLGZ1bmN0aW9uKGUpe3MoIiMiK2Eub3ZlcmxheUlkKS5jc3MoInRvcCIsZS5wYWdlWSthLnlPZmZzZXQrInB4IikuY3NzKCJsZWZ0IixlLnBhZ2VYK2EueE9mZnNldCsicHgiKX0pLHRoaXN9LHMucHJldmlld0ltYWdlKCl9KGpRdWVyeSk7CiAgICAKICAgICQoZG9jdW1lbnQpLnJlYWR5KCBmdW5jdGlvbiAoKSB7CiAgICAgICAgCiAgICAgICAgdmFyICR0YWJsZSA9ICQoJyNtYWluLXRhYmxlJyksCiAgICAgICAgICAgIHRhYmxlTG5nID0gJHRhYmxlLmZpbmQoJ3RoJykubGVuZ3RoLAogICAgICAgICAgICBfdGFyZ2V0cyA9ICh0YWJsZUxuZyAmJiB0YWJsZUxuZyA9PSA3ICkgPyBbMCwgNCw1LDZdIDogdGFibGVMbmcgPT0gNSA/IFswLDRdIDogWzNdOwogICAgICAgICAgICBtYWluVGFibGUgPSAkKCcjbWFpbi10YWJsZScpLkRhdGFUYWJsZSh7cGFnaW5nOiBmYWxzZSwgaW5mbzogZmFsc2UsIG9yZGVyOiBbXSwgY29sdW1uRGVmczogW3t0YXJnZXRzOiBfdGFyZ2V0cywgb3JkZXJhYmxlOiBmYWxzZX1dCiAgICAgICAgfSk7CiAgICAgICAgCiAgICAgICAgJCgnI3NlYXJjaC1hZGRvbicpLm9uKCAna2V5dXAnLCBmdW5jdGlvbiAoKSB7CiAgICAgICAgICAgIG1haW5UYWJsZS5zZWFyY2goIHRoaXMudmFsdWUgKS5kcmF3KCk7CiAgICAgICAgfSk7CiAgICAgICAgJCgiaW5wdXQjYWR2YW5jZWQtc2VhcmNoIikub24oJ2tleXVwJywgZnVuY3Rpb24gKGUpIHsKICAgICAgICAgICAgaWYgKGUua2V5Q29kZSA9PT0gMTMpIHsgZm1fc2VhcmNoKCk7IH0KICAgICAgICB9KTsKICAgICAgICAkKCcjc2VhcmNoLWFkZG9uMycpLm9uKCAnY2xpY2snLCBmdW5jdGlvbiAoKSB7IGZtX3NlYXJjaCgpOyB9KTsKICAgICAgICAvL3VwbG9hZCBuYXYgdGFicwogICAgICAgICQoIi5mbS11cGxvYWQtd3JhcHBlciAuY2FyZC1oZWFkZXItdGFicyIpLm9uKCJjbGljayIsICdhJywgZnVuY3Rpb24oZSl7CiAgICAgICAgICAgIGUucHJldmVudERlZmF1bHQoKTtsZXQgdGFyZ2V0PSQodGhpcykuZGF0YSgndGFyZ2V0Jyk7CiAgICAgICAgICAgICQoIi5mbS11cGxvYWQtd3JhcHBlciAuY2FyZC1oZWFkZXItdGFicyBhIikucmVtb3ZlQ2xhc3MoJ2FjdGl2ZScpOyQodGhpcykuYWRkQ2xhc3MoJ2FjdGl2ZScpOwogICAgICAgICAgICAkKCIuZm0tdXBsb2FkLXdyYXBwZXIgLmNhcmQtdGFicy1jb250YWluZXIiKS5hZGRDbGFzcygnaGlkZGVuJyk7JCh0YXJnZXQpLnJlbW92ZUNsYXNzKCdoaWRkZW4nKTsKICAgICAgICB9KTsKICAgIH0pOwo8L3NjcmlwdD4KPD9waHAgaWYgKGlzc2V0KCRfR0VUWydlZGl0J10pICYmIGlzc2V0KCRfR0VUWydlbnYnXSkgJiYgRk1fRURJVF9GSUxFICYmICFGTV9SRUFET05MWSk6CiAgICAgICAgCiAgICAgICAgJGV4dCA9IHBhdGhpbmZvKCRfR0VUWyJlZGl0Il0sIFBBVEhJTkZPX0VYVEVOU0lPTik7CiAgICAgICAgJGV4dCA9ICAkZXh0ID09ICJqcyIgPyAiamF2YXNjcmlwdCIgOiAgJGV4dDsKICAgICAgICA/PgogICAgPD9waHAgcHJpbnRfZXh0ZXJuYWwoJ2pzLWFjZScpOyA/PgogICAgPHNjcmlwdD4KICAgICAgICB2YXIgZWRpdG9yID0gYWNlLmVkaXQoImVkaXRvciIpOwogICAgICAgIGVkaXRvci5nZXRTZXNzaW9uKCkuc2V0TW9kZSgge3BhdGg6ImFjZS9tb2RlLzw/cGhwIGVjaG8gJGV4dDsgPz4iLCBpbmxpbmU6dHJ1ZX0gKTsKICAgICAgICAvL2VkaXRvci5zZXRUaGVtZSgiYWNlL3RoZW1lL3R3aWxpZ2h0Iik7IC8vRGFyayBUaGVtZQogICAgICAgIGVkaXRvci5zZXRTaG93UHJpbnRNYXJnaW4oZmFsc2UpOyAKICAgICAgICBmdW5jdGlvbiBhY2VfY29tbWVuZCAoY21kKSB7IGVkaXRvci5jb21tYW5kcy5leGVjKGNtZCwgZWRpdG9yKTsgfQogICAgICAgIGVkaXRvci5jb21tYW5kcy5hZGRDb21tYW5kcyhbewogICAgICAgICAgICBuYW1lOiAnc2F2ZScsIGJpbmRLZXk6IHt3aW46ICdDdHJsLVMnLCAgbWFjOiAnQ29tbWFuZC1TJ30sCiAgICAgICAgICAgIGV4ZWM6IGZ1bmN0aW9uKGVkaXRvcikgeyBlZGl0X3NhdmUodGhpcywgJ2FjZScpOyB9CiAgICAgICAgfV0pOwogICAgICAgIGZ1bmN0aW9uIHJlbmRlclRoZW1lTW9kZSgpIHsKICAgICAgICAgICAgdmFyICRtb2RlRWwgPSAkKCJzZWxlY3QjanMtYWNlLW1vZGUiKSwgJHRoZW1lRWwgPSAkKCJzZWxlY3QjanMtYWNlLXRoZW1lIiksICRmb250U2l6ZUVsID0gJCgic2VsZWN0I2pzLWFjZS1mb250U2l6ZSIpLCBvcHRpb25Ob2RlID0gZnVuY3Rpb24odHlwZSwgYXJyKXsgdmFyICRPcHRpb24gPSAiIjsgJC5lYWNoKGFyciwgZnVuY3Rpb24oaSwgdmFsKSB7ICRPcHRpb24gKz0gIjxvcHRpb24gdmFsdWU9JyIrdHlwZStpKyInPiIgKyB2YWwgKyAiPC9vcHRpb24+IjsgfSk7IHJldHVybiAkT3B0aW9uOyB9LAogICAgICAgICAgICAgICAgX2RhdGEgPSB7ImFjZVRoZW1lIjp7ImJyaWdodCI6eyJjaHJvbWUiOiJDaHJvbWUiLCJjbG91ZHMiOiJDbG91ZHMiLCJjcmltc29uX2VkaXRvciI6IkNyaW1zb24gRWRpdG9yIiwiZGF3biI6IkRhd24iLCJkcmVhbXdlYXZlciI6IkRyZWFtd2VhdmVyIiwiZWNsaXBzZSI6IkVjbGlwc2UiLCJnaXRodWIiOiJHaXRIdWIiLCJpcGxhc3RpYyI6IklQbGFzdGljIiwic29sYXJpemVkX2xpZ2h0IjoiU29sYXJpemVkIExpZ2h0IiwidGV4dG1hdGUiOiJUZXh0TWF0ZSIsInRvbW9ycm93IjoiVG9tb3Jyb3ciLCJ4Y29kZSI6IlhDb2RlIiwia3Vyb2lyIjoiS3Vyb2lyIiwia2F0emVubWlsY2giOiJLYXR6ZW5NaWxjaCIsInNxbHNlcnZlciI6IlNRTCBTZXJ2ZXIifSwiZGFyayI6eyJhbWJpYW5jZSI6IkFtYmlhbmNlIiwiY2hhb3MiOiJDaGFvcyIsImNsb3Vkc19taWRuaWdodCI6IkNsb3VkcyBNaWRuaWdodCIsImRyYWN1bGEiOiJEcmFjdWxhIiwiY29iYWx0IjoiQ29iYWx0IiwiZ3J1dmJveCI6IkdydXZib3giLCJnb2IiOiJHcmVlbiBvbiBCbGFjayIsImlkbGVfZmluZ2VycyI6ImlkbGUgRmluZ2VycyIsImtyX3RoZW1lIjoia3JUaGVtZSIsIm1lcmJpdm9yZSI6Ik1lcmJpdm9yZSIsIm1lcmJpdm9yZV9zb2Z0IjoiTWVyYml2b3JlIFNvZnQiLCJtb25vX2luZHVzdHJpYWwiOiJNb25vIEluZHVzdHJpYWwiLCJtb25va2FpIjoiTW9ub2thaSIsInBhc3RlbF9vbl9kYXJrIjoiUGFzdGVsIG9uIGRhcmsiLCJzb2xhcml6ZWRfZGFyayI6IlNvbGFyaXplZCBEYXJrIiwidGVybWluYWwiOiJUZXJtaW5hbCIsInRvbW9ycm93X25pZ2h0IjoiVG9tb3Jyb3cgTmlnaHQiLCJ0b21vcnJvd19uaWdodF9ibHVlIjoiVG9tb3Jyb3cgTmlnaHQgQmx1ZSIsInRvbW9ycm93X25pZ2h0X2JyaWdodCI6IlRvbW9ycm93IE5pZ2h0IEJyaWdodCIsInRvbW9ycm93X25pZ2h0X2VpZ2h0aWVzIjoiVG9tb3Jyb3cgTmlnaHQgODBzIiwidHdpbGlnaHQiOiJUd2lsaWdodCIsInZpYnJhbnRfaW5rIjoiVmlicmFudCBJbmsifX0sImFjZU1vZGUiOnsiamF2YXNjcmlwdCI6IkphdmFTY3JpcHQiLCJhYmFwIjoiQUJBUCIsImFiYyI6IkFCQyIsImFjdGlvbnNjcmlwdCI6IkFjdGlvblNjcmlwdCIsImFkYSI6IkFEQSIsImFwYWNoZV9jb25mIjoiQXBhY2hlIENvbmYiLCJhc2NpaWRvYyI6IkFzY2lpRG9jIiwiYXNsIjoiQVNMIiwiYXNzZW1ibHlfeDg2IjoiQXNzZW1ibHkgeDg2IiwiYXV0b2hvdGtleSI6IkF1dG9Ib3RLZXkiLCJhcGV4IjoiQXBleCIsImJhdGNoZmlsZSI6IkJhdGNoRmlsZSIsImJybyI6IkJybyIsImNfY3BwIjoiQyBhbmQgQysrIiwiYzlzZWFyY2giOiJDOVNlYXJjaCIsImNpcnJ1IjoiQ2lycnUiLCJjbG9qdXJlIjoiQ2xvanVyZSIsImNvYm9sIjoiQ29ib2wiLCJjb2ZmZWUiOiJDb2ZmZWVTY3JpcHQiLCJjb2xkZnVzaW9uIjoiQ29sZEZ1c2lvbiIsImNzaGFycCI6IkMjIiwiY3NvdW5kX2RvY3VtZW50IjoiQ3NvdW5kIERvY3VtZW50IiwiY3NvdW5kX29yY2hlc3RyYSI6IkNzb3VuZCIsImNzb3VuZF9zY29yZSI6IkNzb3VuZCBTY29yZSIsImNzcyI6IkNTUyIsImN1cmx5IjoiQ3VybHkiLCJkIjoiRCIsImRhcnQiOiJEYXJ0IiwiZGlmZiI6IkRpZmYiLCJkb2NrZXJmaWxlIjoiRG9ja2VyZmlsZSIsImRvdCI6IkRvdCIsImRyb29scyI6IkRyb29scyIsImVkaWZhY3QiOiJFZGlmYWN0IiwiZWlmZmVsIjoiRWlmZmVsIiwiZWpzIjoiRUpTIiwiZWxpeGlyIjoiRWxpeGlyIiwiZWxtIjoiRWxtIiwiZXJsYW5nIjoiRXJsYW5nIiwiZm9ydGgiOiJGb3J0aCIsImZvcnRyYW4iOiJGb3J0cmFuIiwiZnNoYXJwIjoiRlNoYXJwIiwiZnNsIjoiRlNMIiwiZnRsIjoiRnJlZU1hcmtlciIsImdjb2RlIjoiR2NvZGUiLCJnaGVya2luIjoiR2hlcmtpbiIsImdpdGlnbm9yZSI6IkdpdGlnbm9yZSIsImdsc2wiOiJHbHNsIiwiZ29ic3RvbmVzIjoiR29ic3RvbmVzIiwiZ29sYW5nIjoiR28iLCJncmFwaHFsc2NoZW1hIjoiR3JhcGhRTFNjaGVtYSIsImdyb292eSI6Ikdyb292eSIsImhhbWwiOiJIQU1MIiwiaGFuZGxlYmFycyI6IkhhbmRsZWJhcnMiLCJoYXNrZWxsIjoiSGFza2VsbCIsImhhc2tlbGxfY2FiYWwiOiJIYXNrZWxsIENhYmFsIiwiaGF4ZSI6ImhhWGUiLCJoanNvbiI6Ikhqc29uIiwiaHRtbCI6IkhUTUwiLCJodG1sX2VsaXhpciI6IkhUTUwgKEVsaXhpcikiLCJodG1sX3J1YnkiOiJIVE1MIChSdWJ5KSIsImluaSI6IklOSSIsImlvIjoiSW8iLCJqYWNrIjoiSmFjayIsImphZGUiOiJKYWRlIiwiamF2YSI6IkphdmEiLCJqc29uIjoiSlNPTiIsImpzb25pcSI6IkpTT05pcSIsImpzcCI6IkpTUCIsImpzc20iOiJKU1NNIiwianN4IjoiSlNYIiwianVsaWEiOiJKdWxpYSIsImtvdGxpbiI6IktvdGxpbiIsImxhdGV4IjoiTGFUZVgiLCJsZXNzIjoiTEVTUyIsImxpcXVpZCI6IkxpcXVpZCIsImxpc3AiOiJMaXNwIiwibGl2ZXNjcmlwdCI6IkxpdmVTY3JpcHQiLCJsb2dpcWwiOiJMb2dpUUwiLCJsc2wiOiJMU0wiLCJsdWEiOiJMdWEiLCJsdWFwYWdlIjoiTHVhUGFnZSIsImx1Y2VuZSI6Ikx1Y2VuZSIsIm1ha2VmaWxlIjoiTWFrZWZpbGUiLCJtYXJrZG93biI6Ik1hcmtkb3duIiwibWFzayI6Ik1hc2siLCJtYXRsYWIiOiJNQVRMQUIiLCJtYXplIjoiTWF6ZSIsIm1lbCI6Ik1FTCIsIm1peGFsIjoiTUlYQUwiLCJtdXNoY29kZSI6Ik1VU0hDb2RlIiwibXlzcWwiOiJNeVNRTCIsIm5peCI6Ik5peCIsIm5zaXMiOiJOU0lTIiwib2JqZWN0aXZlYyI6Ik9iamVjdGl2ZS1DIiwib2NhbWwiOiJPQ2FtbCIsInBhc2NhbCI6IlBhc2NhbCIsInBlcmwiOiJQZXJsIiwicGVybDYiOiJQZXJsIDYiLCJwZ3NxbCI6InBnU1FMIiwicGhwX2xhcmF2ZWxfYmxhZGUiOiJQSFAgKEJsYWRlIFRlbXBsYXRlKSIsInBocCI6IlBIUCIsInB1cHBldCI6IlB1cHBldCIsInBpZyI6IlBpZyIsInBvd2Vyc2hlbGwiOiJQb3dlcnNoZWxsIiwicHJhYXQiOiJQcmFhdCIsInByb2xvZyI6IlByb2xvZyIsInByb3BlcnRpZXMiOiJQcm9wZXJ0aWVzIiwicHJvdG9idWYiOiJQcm90b2J1ZiIsInB5dGhvbiI6IlB5dGhvbiIsInIiOiJSIiwicmF6b3IiOiJSYXpvciIsInJkb2MiOiJSRG9jIiwicmVkIjoiUmVkIiwicmh0bWwiOiJSSFRNTCIsInJzdCI6IlJTVCIsInJ1YnkiOiJSdWJ5IiwicnVzdCI6IlJ1c3QiLCJzYXNzIjoiU0FTUyIsInNjYWQiOiJTQ0FEIiwic2NhbGEiOiJTY2FsYSIsInNjaGVtZSI6IlNjaGVtZSIsInNjc3MiOiJTQ1NTIiwic2giOiJTSCIsInNqcyI6IlNKUyIsInNsaW0iOiJTbGltIiwic21hcnR5IjoiU21hcnR5Iiwic25pcHBldHMiOiJzbmlwcGV0cyIsInNveV90ZW1wbGF0ZSI6IlNveSBUZW1wbGF0ZSIsInNwYWNlIjoiU3BhY2UiLCJzcWwiOiJTUUwiLCJzcWxzZXJ2ZXIiOiJTUUxTZXJ2ZXIiLCJzdHlsdXMiOiJTdHlsdXMiLCJzdmciOiJTVkciLCJzd2lmdCI6IlN3aWZ0IiwidGNsIjoiVGNsIiwidGVycmFmb3JtIjoiVGVycmFmb3JtIiwidGV4IjoiVGV4IiwidGV4dCI6IlRleHQiLCJ0ZXh0aWxlIjoiVGV4dGlsZSIsInRvbWwiOiJUb21sIiwidHN4IjoiVFNYIiwidHdpZyI6IlR3aWciLCJ0eXBlc2NyaXB0IjoiVHlwZXNjcmlwdCIsInZhbGEiOiJWYWxhIiwidmJzY3JpcHQiOiJWQlNjcmlwdCIsInZlbG9jaXR5IjoiVmVsb2NpdHkiLCJ2ZXJpbG9nIjoiVmVyaWxvZyIsInZoZGwiOiJWSERMIiwidmlzdWFsZm9yY2UiOiJWaXN1YWxmb3JjZSIsIndvbGxvayI6IldvbGxvayIsInhtbCI6IlhNTCIsInhxdWVyeSI6IlhRdWVyeSIsInlhbWwiOiJZQU1MIiwiZGphbmdvIjoiRGphbmdvIn0sImZvbnRTaXplIjp7ODo4LDEwOjEwLDExOjExLDEyOjEyLDEzOjEzLDE0OjE0LDE1OjE1LDE2OjE2LDE3OjE3LDE4OjE4LDIwOjIwLDIyOjIyLDI0OjI0LDI2OjI2LDMwOjMwfX07CiAgICAgICAgICAgIGlmKF9kYXRhICYmIF9kYXRhLmFjZU1vZGUpIHsgJG1vZGVFbC5odG1sKG9wdGlvbk5vZGUoImFjZS9tb2RlLyIsIF9kYXRhLmFjZU1vZGUpKTsgfQogICAgICAgICAgICBpZihfZGF0YSAmJiBfZGF0YS5hY2VUaGVtZSkgeyB2YXIgbGlnaHRUaGVtZSA9IG9wdGlvbk5vZGUoImFjZS90aGVtZS8iLCBfZGF0YS5hY2VUaGVtZS5icmlnaHQpLCBkYXJrVGhlbWUgPSBvcHRpb25Ob2RlKCJhY2UvdGhlbWUvIiwgX2RhdGEuYWNlVGhlbWUuZGFyayk7ICR0aGVtZUVsLmh0bWwoIjxvcHRncm91cCBsYWJlbD1cIkJyaWdodFwiPiIrbGlnaHRUaGVtZSsiPC9vcHRncm91cD48b3B0Z3JvdXAgbGFiZWw9XCJEYXJrXCI+IitkYXJrVGhlbWUrIjwvb3B0Z3JvdXA+Iik7fQogICAgICAgICAgICBpZihfZGF0YSAmJiBfZGF0YS5mb250U2l6ZSkgeyAkZm9udFNpemVFbC5odG1sKG9wdGlvbk5vZGUoIiIsIF9kYXRhLmZvbnRTaXplKSk7IH0KICAgICAgICAgICAgJG1vZGVFbC52YWwoIGVkaXRvci5nZXRTZXNzaW9uKCkuJG1vZGVJZCApOwogICAgICAgICAgICAkdGhlbWVFbC52YWwoIGVkaXRvci5nZXRUaGVtZSgpICk7CiAgICAgICAgICAgICRmb250U2l6ZUVsLnZhbCgxMikuY2hhbmdlKCk7IC8vc2V0IGRlZmF1bHQgZm9udCBzaXplIGluIGRyb3AgZG93bgogICAgICAgIH0KICAgICAgICAkKGZ1bmN0aW9uKCl7CiAgICAgICAgICAgIHJlbmRlclRoZW1lTW9kZSgpOwogICAgICAgICAgICAkKCIuanMtYWNlLXRvb2xiYXIiKS5vbigiY2xpY2siLCAnYnV0dG9uJywgZnVuY3Rpb24oZSl7CiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7CiAgICAgICAgICAgICAgICBsZXQgY21kVmFsdWUgPSAkKHRoaXMpLmF0dHIoImRhdGEtY21kIiksIGVkaXRvck9wdGlvbiA9ICQodGhpcykuYXR0cigiZGF0YS1vcHRpb24iKTsKICAgICAgICAgICAgICAgIGlmKGNtZFZhbHVlICYmIGNtZFZhbHVlICE9ICJub25lIikgewogICAgICAgICAgICAgICAgICAgIGFjZV9jb21tZW5kKGNtZFZhbHVlKTsKICAgICAgICAgICAgICAgIH0gZWxzZSBpZihlZGl0b3JPcHRpb24pIHsKICAgICAgICAgICAgICAgICAgICBpZihlZGl0b3JPcHRpb24gPT0gImZ1bGxzY3JlZW4iKSB7CiAgICAgICAgICAgICAgICAgICAgICAgICh2b2lkIDAhPT1kb2N1bWVudC5mdWxsU2NyZWVuRWxlbWVudCYmbnVsbD09PWRvY3VtZW50LmZ1bGxTY3JlZW5FbGVtZW50fHx2b2lkIDAhPT1kb2N1bWVudC5tc0Z1bGxzY3JlZW5FbGVtZW50JiZudWxsPT09ZG9jdW1lbnQubXNGdWxsc2NyZWVuRWxlbWVudHx8dm9pZCAwIT09ZG9jdW1lbnQubW96RnVsbFNjcmVlbiYmIWRvY3VtZW50Lm1vekZ1bGxTY3JlZW58fHZvaWQgMCE9PWRvY3VtZW50LndlYmtpdElzRnVsbFNjcmVlbiYmIWRvY3VtZW50LndlYmtpdElzRnVsbFNjcmVlbikKICAgICAgICAgICAgICAgICAgICAgICAgJiYoZWRpdG9yLmNvbnRhaW5lci5yZXF1ZXN0RnVsbFNjcmVlbj9lZGl0b3IuY29udGFpbmVyLnJlcXVlc3RGdWxsU2NyZWVuKCk6ZWRpdG9yLmNvbnRhaW5lci5tb3pSZXF1ZXN0RnVsbFNjcmVlbj9lZGl0b3IuY29udGFpbmVyLm1velJlcXVlc3RGdWxsU2NyZWVuKCk6ZWRpdG9yLmNvbnRhaW5lci53ZWJraXRSZXF1ZXN0RnVsbFNjcmVlbj9lZGl0b3IuY29udGFpbmVyLndlYmtpdFJlcXVlc3RGdWxsU2NyZWVuKEVsZW1lbnQuQUxMT1dfS0VZQk9BUkRfSU5QVVQpOmVkaXRvci5jb250YWluZXIubXNSZXF1ZXN0RnVsbHNjcmVlbiYmZWRpdG9yLmNvbnRhaW5lci5tc1JlcXVlc3RGdWxsc2NyZWVuKCkpOwogICAgICAgICAgICAgICAgICAgIH0gZWxzZSBpZihlZGl0b3JPcHRpb24gPT0gIndyYXAiKSB7CiAgICAgICAgICAgICAgICAgICAgICAgIGxldCB3cmFwU3RhdHVzID0gKGVkaXRvci5nZXRTZXNzaW9uKCkuZ2V0VXNlV3JhcE1vZGUoKSkgPyBmYWxzZSA6IHRydWU7CiAgICAgICAgICAgICAgICAgICAgICAgIGVkaXRvci5nZXRTZXNzaW9uKCkuc2V0VXNlV3JhcE1vZGUod3JhcFN0YXR1cyk7CiAgICAgICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICB9KTsKICAgICAgICAgICAgJCgic2VsZWN0I2pzLWFjZS1tb2RlLCBzZWxlY3QjanMtYWNlLXRoZW1lLCBzZWxlY3QjanMtYWNlLWZvbnRTaXplIikub24oImNoYW5nZSIsIGZ1bmN0aW9uKGUpewogICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpOwogICAgICAgICAgICAgICAgbGV0IHNlbGVjdGVkVmFsdWUgPSAkKHRoaXMpLnZhbCgpLCBzZWxlY3Rpb25UeXBlID0gJCh0aGlzKS5hdHRyKCJkYXRhLXR5cGUiKTsKICAgICAgICAgICAgICAgIGlmKHNlbGVjdGVkVmFsdWUgJiYgc2VsZWN0aW9uVHlwZSA9PSAibW9kZSIpIHsKICAgICAgICAgICAgICAgICAgICBlZGl0b3IuZ2V0U2Vzc2lvbigpLnNldE1vZGUoc2VsZWN0ZWRWYWx1ZSk7CiAgICAgICAgICAgICAgICB9IGVsc2UgaWYoc2VsZWN0ZWRWYWx1ZSAmJiBzZWxlY3Rpb25UeXBlID09ICJ0aGVtZSIpIHsKICAgICAgICAgICAgICAgICAgICBlZGl0b3Iuc2V0VGhlbWUoc2VsZWN0ZWRWYWx1ZSk7CiAgICAgICAgICAgICAgICB9ZWxzZSBpZihzZWxlY3RlZFZhbHVlICYmIHNlbGVjdGlvblR5cGUgPT0gImZvbnRTaXplIikgewogICAgICAgICAgICAgICAgICAgIGVkaXRvci5zZXRGb250U2l6ZShwYXJzZUludChzZWxlY3RlZFZhbHVlKSk7CiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0pOwogICAgICAgIH0pOwogICAgPC9zY3JpcHQ+Cjw/cGhwIGVuZGlmOyA/Pgo8ZGl2IGlkPSJzbmFja2JhciI+PC9kaXY+CjwvYm9keT4KPC9odG1sPgo8P3BocAp9CgpmdW5jdGlvbiBsbmcoJHR4dCkgewogICAgZ2xvYmFsICRsYW5nOwogICAgCiAgICAkdHJbJ2VuJ11bJ0FwcE5hbWUnXSAgICAgICAgPSAnVGlueSBGaWxlIE1hbmFnZXInOyAgICAgICR0clsnZW4nXVsnQXBwVGl0bGUnXSAgICAgICAgICAgPSAnRmlsZSBNYW5hZ2VyJzsKICAgICR0clsnZW4nXVsnTG9naW4nXSAgICAgICAgICA9ICdTaWduIGluJzsgICAgICAgICAgICAgICAgJHRyWydlbiddWydVc2VybmFtZSddICAgICAgICAgICA9ICdVc2VybmFtZSc7CiAgICAkdHJbJ2VuJ11bJ1Bhc3N3b3JkJ10gICAgICAgPSAnUGFzc3dvcmQnOyAgICAgICAgICAgICAgICR0clsnZW4nXVsnTG9nb3V0J10gICAgICAgICAgICAgPSAnU2lnbiBPdXQnOwogICAgJHRyWydlbiddWydNb3ZlJ10gICAgICAgICAgID0gJ01vdmUnOyAgICAgICAgICAgICAgICAgICAkdHJbJ2VuJ11bJ0NvcHknXSAgICAgICAgICAgICAgID0gJ0NvcHknOwogICAgJHRyWydlbiddWydTYXZlJ10gICAgICAgICAgID0gJ1NhdmUnOyAgICAgICAgICAgICAgICAgICAkdHJbJ2VuJ11bJ1NlbGVjdEFsbCddICAgICAgICAgID0gJ1NlbGVjdCBhbGwnOwogICAgJHRyWydlbiddWydVblNlbGVjdEFsbCddICAgID0gJ1Vuc2VsZWN0IGFsbCc7ICAgICAgICAgICAkdHJbJ2VuJ11bJ0ZpbGUnXSAgICAgICAgICAgICAgID0gJ0ZpbGUnOwogICAgJHRyWydlbiddWydCYWNrJ10gICAgICAgICAgID0gJ0JhY2snOyAgICAgICAgICAgICAgICAgICAkdHJbJ2VuJ11bJ1NpemUnXSAgICAgICAgICAgICAgID0gJ1NpemUnOwogICAgJHRyWydlbiddWydQZXJtcyddICAgICAgICAgID0gJ1Blcm1zJzsgICAgICAgICAgICAgICAgICAkdHJbJ2VuJ11bJ01vZGlmaWVkJ10gICAgICAgICAgID0gJ01vZGlmaWVkJzsKICAgICR0clsnZW4nXVsnT3duZXInXSAgICAgICAgICA9ICdPd25lcic7ICAgICAgICAgICAgICAgICAgJHRyWydlbiddWydTZWFyY2gnXSAgICAgICAgICAgICA9ICdTZWFyY2gnOwogICAgJHRyWydlbiddWydOZXdJdGVtJ10gICAgICAgID0gJ05ldyBJdGVtJzsgICAgICAgICAgICAgICAkdHJbJ2VuJ11bJ0ZvbGRlciddICAgICAgICAgICAgID0gJ0ZvbGRlcic7CiAgICAkdHJbJ2VuJ11bJ0RlbGV0ZSddICAgICAgICAgPSAnRGVsZXRlJzsgICAgICAgICAgICAgICAgICR0clsnZW4nXVsnUmVuYW1lJ10gICAgICAgICAgICAgPSAnUmVuYW1lJzsKICAgICR0clsnZW4nXVsnQ29weVRvJ10gICAgICAgICA9ICdDb3B5IHRvJzsgICAgICAgICAgICAgICAgJHRyWydlbiddWydEaXJlY3RMaW5rJ10gICAgICAgICA9ICdEaXJlY3QgbGluayc7CiAgICAkdHJbJ2VuJ11bJ1VwbG9hZGluZ0ZpbGVzJ10gPSAnVXBsb2FkIEZpbGVzJzsgICAgICAgICAgICR0clsnZW4nXVsnQ2hhbmdlUGVybWlzc2lvbnMnXSAgPSAnQ2hhbmdlIFBlcm1pc3Npb25zJzsKICAgICR0clsnZW4nXVsnQ29weWluZyddICAgICAgICA9ICdDb3B5aW5nJzsgICAgICAgICAgICAgICAgJHRyWydlbiddWydDcmVhdGVOZXdJdGVtJ10gICAgICA9ICdDcmVhdGUgTmV3IEl0ZW0nOwogICAgJHRyWydlbiddWydOYW1lJ10gICAgICAgICAgID0gJ05hbWUnOyAgICAgICAgICAgICAgICAgICAkdHJbJ2VuJ11bJ0FkdmFuY2VkRWRpdG9yJ10gICAgID0gJ0FkdmFuY2VkIEVkaXRvcic7CiAgICAkdHJbJ2VuJ11bJ0FjdGlvbnMnXSAgICAgICAgPSAnQWN0aW9ucyc7ICAgICAgICAgICAgICAgICR0clsnZW4nXVsnRm9sZGVyIGlzIGVtcHR5J10gICAgPSAnRm9sZGVyIGlzIGVtcHR5JzsKICAgICR0clsnZW4nXVsnVXBsb2FkJ10gICAgICAgICA9ICdVcGxvYWQnOyAgICAgICAgICAgICAgICAgJHRyWydlbiddWydDYW5jZWwnXSAgICAgICAgICAgICA9ICdDYW5jZWwnOwogICAgJHRyWydlbiddWydJbnZlcnRTZWxlY3Rpb24nXT0gJ0ludmVydCBTZWxlY3Rpb24nOyAgICAgICAkdHJbJ2VuJ11bJ0Rlc3RpbmF0aW9uRm9sZGVyJ10gID0gJ0Rlc3RpbmF0aW9uIEZvbGRlcic7CiAgICAkdHJbJ2VuJ11bJ0l0ZW1UeXBlJ10gICAgICAgPSAnSXRlbSBUeXBlJzsgICAgICAgICAgICAgICR0clsnZW4nXVsnSXRlbU5hbWUnXSAgICAgICAgICAgPSAnSXRlbSBOYW1lJzsKICAgICR0clsnZW4nXVsnQ3JlYXRlTm93J10gICAgICA9ICdDcmVhdGUgTm93JzsgICAgICAgICAgICAgJHRyWydlbiddWydEb3dubG9hZCddICAgICAgICAgICA9ICdEb3dubG9hZCc7CiAgICAkdHJbJ2VuJ11bJ09wZW4nXSAgICAgICAgICAgPSAnT3Blbic7ICAgICAgICAgICAgICAgICAgICR0clsnZW4nXVsnVW5aaXAnXSAgICAgICAgICAgICAgPSAnVW5aaXAnOwogICAgJHRyWydlbiddWydVblppcFRvRm9sZGVyJ10gID0gJ1VuWmlwIHRvIGZvbGRlcic7ICAgICAgICAkdHJbJ2VuJ11bJ0VkaXQnXSAgICAgICAgICAgICAgID0gJ0VkaXQnOwogICAgJHRyWydlbiddWydOb3JtYWxFZGl0b3InXSAgID0gJ05vcm1hbCBFZGl0b3InOyAgICAgICAgICAkdHJbJ2VuJ11bJ0JhY2tVcCddICAgICAgICAgICAgID0gJ0JhY2sgVXAnOwogICAgJHRyWydlbiddWydTb3VyY2VGb2xkZXInXSAgID0gJ1NvdXJjZSBGb2xkZXInOyAgICAgICAgICAkdHJbJ2VuJ11bJ0ZpbGVzJ10gICAgICAgICAgICAgID0gJ0ZpbGVzJzsKICAgICR0clsnZW4nXVsnTW92ZSddICAgICAgICAgICA9ICdNb3ZlJzsgICAgICAgICAgICAgICAgICAgJHRyWydlbiddWydDaGFuZ2UnXSAgICAgICAgICAgICA9ICdDaGFuZ2UnOwogICAgJHRyWydlbiddWydTZXR0aW5ncyddICAgICAgID0gJ1NldHRpbmdzJzsgICAgICAgICAgICAgICAkdHJbJ2VuJ11bJ0xhbmd1YWdlJ10gICAgICAgICAgID0gJ0xhbmd1YWdlJzsgICAgICAgIAogICAgJHRyWydlbiddWydFcnJvclJlcG9ydGluZyddID0gJ0Vycm9yIFJlcG9ydGluZyc7ICAgICAgICAkdHJbJ2VuJ11bJ1Nob3dIaWRkZW5GaWxlcyddICAgID0gJ1Nob3cgSGlkZGVuIEZpbGVzJzsKICAgICR0clsnZW4nXVsnSGVscCddICAgICAgICAgICA9ICdIZWxwJzsgICAgICAgICAgICAgICAgICAgJHRyWydlbiddWydDcmVhdGVkJ10gICAgICAgICAgICA9ICdDcmVhdGVkJzsKICAgICR0clsnZW4nXVsnSGVscCBEb2N1bWVudHMnXSA9ICdIZWxwIERvY3VtZW50cyc7ICAgICAgICAgJHRyWydlbiddWydSZXBvcnQgSXNzdWUnXSAgICAgICA9ICdSZXBvcnQgSXNzdWUnOwogICAgJHRyWydlbiddWydHZW5lcmF0ZSddICAgICAgID0gJ0dlbmVyYXRlJzsgICAgICAgICAgICAgICAkdHJbJ2VuJ11bJ0Z1bGxTaXplJ10gICAgICAgICAgID0gJ0Z1bGwgU2l6ZSc7ICAgICAgICAgICAgICAKICAgICR0clsnZW4nXVsnSGlkZUNvbHVtbnMnXSAgICA9ICdIaWRlIFBlcm1zL093bmVyIGNvbHVtbnMnOyR0clsnZW4nXVsnWW91IGFyZSBsb2dnZWQgaW4nXSA9ICdZb3UgYXJlIGxvZ2dlZCBpbic7CiAgICAkdHJbJ2VuJ11bJ05vdGhpbmcgc2VsZWN0ZWQnXSAgID0gJ05vdGhpbmcgc2VsZWN0ZWQnOyAgICR0clsnZW4nXVsnUGF0aHMgbXVzdCBiZSBub3QgZXF1YWwnXSAgICA9ICdQYXRocyBtdXN0IGJlIG5vdCBlcXVhbCc7CiAgICAkdHJbJ2VuJ11bJ1JlbmFtZWQgZnJvbSddICAgICAgID0gJ1JlbmFtZWQgZnJvbSc7ICAgICAgICR0clsnZW4nXVsnQXJjaGl2ZSBub3QgdW5wYWNrZWQnXSAgICAgICA9ICdBcmNoaXZlIG5vdCB1bnBhY2tlZCc7CiAgICAkdHJbJ2VuJ11bJ0RlbGV0ZWQnXSAgICAgICAgICAgID0gJ0RlbGV0ZWQnOyAgICAgICAgICAgICR0clsnZW4nXVsnQXJjaGl2ZSBub3QgY3JlYXRlZCddICAgICAgICA9ICdBcmNoaXZlIG5vdCBjcmVhdGVkJzsKICAgICR0clsnZW4nXVsnQ29waWVkIGZyb20nXSAgICAgICAgPSAnQ29waWVkIGZyb20nOyAgICAgICAgJHRyWydlbiddWydQZXJtaXNzaW9ucyBjaGFuZ2VkJ10gICAgICAgID0gJ1Blcm1pc3Npb25zIGNoYW5nZWQnOwogICAgJHRyWydlbiddWyd0byddICAgICAgICAgICAgICAgICA9ICd0byc7ICAgICAgICAgICAgICAgICAkdHJbJ2VuJ11bJ1NhdmVkIFN1Y2Nlc3NmdWxseSddICAgICAgICAgPSAnU2F2ZWQgU3VjY2Vzc2Z1bGx5JzsKICAgICR0clsnZW4nXVsnbm90IGZvdW5kISddICAgICAgICAgPSAnbm90IGZvdW5kISc7ICAgICAgICAgJHRyWydlbiddWydGaWxlIFNhdmVkIFN1Y2Nlc3NmdWxseSddICAgID0gJ0ZpbGUgU2F2ZWQgU3VjY2Vzc2Z1bGx5JzsKICAgICR0clsnZW4nXVsnQXJjaGl2ZSddICAgICAgICAgICAgPSAnQXJjaGl2ZSc7ICAgICAgICAgICAgJHRyWydlbiddWydQZXJtaXNzaW9ucyBub3QgY2hhbmdlZCddICAgID0gJ1Blcm1pc3Npb25zIG5vdCBjaGFuZ2VkJzsKICAgICR0clsnZW4nXVsnU2VsZWN0IGZvbGRlciddICAgICAgPSAnU2VsZWN0IGZvbGRlcic7ICAgICAgJHRyWydlbiddWydTb3VyY2UgcGF0aCBub3QgZGVmaW5lZCddICAgID0gJ1NvdXJjZSBwYXRoIG5vdCBkZWZpbmVkJzsKICAgICR0clsnZW4nXVsnYWxyZWFkeSBleGlzdHMnXSAgICAgPSAnYWxyZWFkeSBleGlzdHMnOyAgICAgJHRyWydlbiddWydFcnJvciB3aGlsZSBtb3ZpbmcgZnJvbSddICAgID0gJ0Vycm9yIHdoaWxlIG1vdmluZyBmcm9tJzsKICAgICR0clsnZW4nXVsnQ3JlYXRlIGFyY2hpdmU/J10gICAgPSAnQ3JlYXRlIGFyY2hpdmU/JzsgICAgJHRyWydlbiddWydJbnZhbGlkIGZpbGUgb3IgZm9sZGVyIG5hbWUnXSAgICA9ICdJbnZhbGlkIGZpbGUgb3IgZm9sZGVyIG5hbWUnOwogICAgJHRyWydlbiddWydBcmNoaXZlIHVucGFja2VkJ10gICA9ICdBcmNoaXZlIHVucGFja2VkJzsgICAkdHJbJ2VuJ11bJ0ZpbGUgZXh0ZW5zaW9uIGlzIG5vdCBhbGxvd2VkJ10gID0gJ0ZpbGUgZXh0ZW5zaW9uIGlzIG5vdCBhbGxvd2VkJzsKICAgICR0clsnZW4nXVsnUm9vdCBwYXRoJ10gICAgICAgICAgPSAnUm9vdCBwYXRoJzsgICAgICAgICAgJHRyWydlbiddWydFcnJvciB3aGlsZSByZW5hbWluZyBmcm9tJ10gID0gJ0Vycm9yIHdoaWxlIHJlbmFtaW5nIGZyb20nOwogICAgJHRyWydlbiddWydGaWxlIG5vdCBmb3VuZCddICAgICA9ICdGaWxlIG5vdCBmb3VuZCc7ICAgICAkdHJbJ2VuJ11bJ0Vycm9yIHdoaWxlIGRlbGV0aW5nIGl0ZW1zJ10gPSAnRXJyb3Igd2hpbGUgZGVsZXRpbmcgaXRlbXMnOwogICAgJHRyWydlbiddWydNb3ZlZCBmcm9tJ10gICAgICAgICA9ICdNb3ZlZCBmcm9tJzsgICAgICAgICAkdHJbJ2VuJ11bJ0dlbmVyYXRlIG5ldyBwYXNzd29yZCBoYXNoJ10gPSAnR2VuZXJhdGUgbmV3IHBhc3N3b3JkIGhhc2gnOwogICAgJHRyWydlbiddWydMb2dpbiBmYWlsZWQuIEludmFsaWQgdXNlcm5hbWUgb3IgcGFzc3dvcmQnXSA9ICdMb2dpbiBmYWlsZWQuIEludmFsaWQgdXNlcm5hbWUgb3IgcGFzc3dvcmQnOwogICAgJHRyWydlbiddWydwYXNzd29yZF9oYXNoIG5vdCBzdXBwb3J0ZWQsIFVwZ3JhZGUgUEhQIHZlcnNpb24nXSA9ICdwYXNzd29yZF9oYXNoIG5vdCBzdXBwb3J0ZWQsIFVwZ3JhZGUgUEhQIHZlcnNpb24nOwogICAgJHRyWydlbiddWydBZHZhbmNlZCBTZWFyY2gnXSAgICA9ICdBZHZhbmNlZCBTZWFyY2gnOyAgICAkdHJbJ2VuJ11bJ0Vycm9yIHdoaWxlIGNvcHlpbmcgZnJvbSddICAgID0gJ0Vycm9yIHdoaWxlIGNvcHlpbmcgZnJvbSc7CiAgICAkdHJbJ2VuJ11bJ0ludmFsaWQgY2hhcmFjdGVycyBpbiBmaWxlIG5hbWUnXSAgICAgICAgICAgICAgICA9ICdJbnZhbGlkIGNoYXJhY3RlcnMgaW4gZmlsZSBuYW1lJzsKICAgICR0clsnZW4nXVsnRklMRSBFWFRFTlNJT04gSEFTIE5PVCBTVVBQT1JURUQnXSAgICAgICAgICAgICAgID0gJ0ZJTEUgRVhURU5TSU9OIEhBUyBOT1QgU1VQUE9SVEVEJzsKICAgICR0clsnZW4nXVsnU2VsZWN0ZWQgZmlsZXMgYW5kIGZvbGRlciBkZWxldGVkJ10gICAgICAgICAgICAgID0gJ1NlbGVjdGVkIGZpbGVzIGFuZCBmb2xkZXIgZGVsZXRlZCc7CiAgICAkdHJbJ2VuJ11bJ0Vycm9yIHdoaWxlIGZldGNoaW5nIGFyY2hpdmUgaW5mbyddICAgICAgICAgICAgICA9ICdFcnJvciB3aGlsZSBmZXRjaGluZyBhcmNoaXZlIGluZm8nOwogICAgJHRyWydlbiddWydEZWxldGUgc2VsZWN0ZWQgZmlsZXMgYW5kIGZvbGRlcnM/J10gICAgICAgICAgICAgPSAnRGVsZXRlIHNlbGVjdGVkIGZpbGVzIGFuZCBmb2xkZXJzPyc7CiAgICAkdHJbJ2VuJ11bJ1NlYXJjaCBmaWxlIGluIGZvbGRlciBhbmQgc3ViZm9sZGVycy4uLiddICAgICAgICA9ICdTZWFyY2ggZmlsZSBpbiBmb2xkZXIgYW5kIHN1YmZvbGRlcnMuLi4nOwogICAgJHRyWydlbiddWydBY2Nlc3MgZGVuaWVkLiBJUCByZXN0cmljdGlvbiBhcHBsaWNhYmxlJ10gICAgICAgPSAnQWNjZXNzIGRlbmllZC4gSVAgcmVzdHJpY3Rpb24gYXBwbGljYWJsZSc7CiAgICAkdHJbJ2VuJ11bJ0ludmFsaWQgY2hhcmFjdGVycyBpbiBmaWxlIG9yIGZvbGRlciBuYW1lJ10gICAgICA9ICdJbnZhbGlkIGNoYXJhY3RlcnMgaW4gZmlsZSBvciBmb2xkZXIgbmFtZSc7CiAgICAkdHJbJ2VuJ11bJ09wZXJhdGlvbnMgd2l0aCBhcmNoaXZlcyBhcmUgbm90IGF2YWlsYWJsZSddICAgICA9ICdPcGVyYXRpb25zIHdpdGggYXJjaGl2ZXMgYXJlIG5vdCBhdmFpbGFibGUnOwogICAgJHRyWydlbiddWydGaWxlIG9yIGZvbGRlciB3aXRoIHRoaXMgcGF0aCBhbHJlYWR5IGV4aXN0cyddICAgPSAnRmlsZSBvciBmb2xkZXIgd2l0aCB0aGlzIHBhdGggYWxyZWFkeSBleGlzdHMnOwogICAgJGkxOG4gPSBmbV9nZXRfdHJhbnNsYXRpb25zKCR0cik7CiAgICAkdHIgPSAkaTE4biA/ICRpMThuIDogJHRyOwogICAgaWYgKCFzdHJsZW4oJGxhbmcpKSAkbGFuZyA9ICdlbic7CiAgICBpZiAoaXNzZXQoJHRyWyRsYW5nXVskdHh0XSkpIHJldHVybiBmbV9lbmMoJHRyWyRsYW5nXVskdHh0XSk7CiAgICBlbHNlIGlmIChpc3NldCgkdHJbJ2VuJ11bJHR4dF0pKSByZXR1cm4gZm1fZW5jKCR0clsnZW4nXVskdHh0XSk7CiAgICBlbHNlIHJldHVybiAiJHR4dCI7Cn0
